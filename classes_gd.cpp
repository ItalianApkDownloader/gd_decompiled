class cocos2d::CCSceneDelegate{
    willSwitchToScene(cocos2d::CCScene*)
}
class AchievementNotifier : cocos2d::CCNode{
   int sharedState()
   GameSoundManager * notifyAchievement(char const*, char const*, char const*, bool)
   int willSwitchToScene(cocos2d::CCScene*)
   GameSoundManager * showNextAchievement()
   GameSoundManager * achievementDisplayFinished()
   signed int init()
   AchievementNotifier * ~AchievementNotifier()
   virtual AchievementNotifier * ~AchievementNotifier()
   virtual signed int init(void)
}
class AchievementManager : cocos2d::CCNode{
   int dataLoaded(DS_Dictionary*)
   int firstSetup()
   int sharedState()
   int encodeDataTo(DS_Dictionary*)
   _DWORD * resetAchievement(char const*)
   int notifyAchievement(char const*, char const*, char const*)
   void resetAchievements()
    checkAchFromUnlock(char const*)
   cocos2d::CCArray * getAllAchievements()
   signed int percentageForCount(int, int)
   _BOOL4 isAchievementEarned(char const*)
   _DWORD * achievementForUnlock(int, UnlockType)
   _BOOL4 areAchievementsEarned(cocos2d::CCArray*)
   int getAchievementsWithID(char const*)
   int percentForAchievement(char const*)
   int notifyAchievementWithID(char const*)
   AchievementManager * reportAchievementWithID(char const*, int, bool)
   int setReportedAchievements(cocos2d::CCDictionary*)
   int storeAchievementUnlocks()
   cocos2d::CCDictionary * getAchievementRewardDict()
   cocos2d::CCArray * getAllAchievementsSorted()
   void * reportPlatformAchievementWithID(char const*, int)
   signed int init()
    setup()
   AchievementManager * ~AchievementManager()
   virtual AchievementManager * ~AchievementManager()
   virtual signed int init(void)
}
class FontObject : cocos2d::CCObject{
   int getFontWidth(int)
   int parseConfigFile(char const*, float)
   signed int initWithConfigFile(char const*, float)
   void * createWithConfigFile(char const*, float)
   FontObject * ~FontObject()
   virtual FontObject * ~FontObject()
   virtual   type's name
}
class BitmapFontCache : cocos2d::CCObject{
   int sharedFontCache()
   int fontWithConfigFile(char const*, float)
   int purgeSharedFontCache()
   signed int init()
   cocos2d::CCObject * ~BitmapFontCache()
   virtual cocos2d::CCObject * ~BitmapFontCache()
}
class BonusDropdown : cocos2d::CCNode{
   signed int init(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int)
   cocos2d::CCAction * show()
   cocos2d::CCNode * create(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int)
   BonusDropdown * ~BonusDropdown()
   virtual BonusDropdown * ~BonusDropdown()
}
class TableViewDelegate{
    willTweenToIndexPath(CCIndexPath&, TableViewCell*, TableView*)
    didEndTweenToIndexPath(CCIndexPath&, TableView*)
    TableViewDidDisplayCellForRowAtIndexPath(CCIndexPath&, TableViewCell*, TableView*)
    TableViewWillReloadCellForRowAtIndexPath(CCIndexPath&, TableViewCell*, TableView*)
    TableViewWillDisplayCellForRowAtIndexPath(CCIndexPath&, TableViewCell*, TableView*)
   virtual  willTweenToIndexPath(CCIndexPath &,TableViewCell *,TableView *)
   virtual  didEndTweenToIndexPath(CCIndexPath &,TableView *)
   virtual  TableViewWillDisplayCellForRowAtIndexPath(CCIndexPath &,TableViewCell *,TableView *)
   virtual  TableViewDidDisplayCellForRowAtIndexPath(CCIndexPath &,TableViewCell *,TableView *)
   virtual  TableViewWillReloadCellForRowAtIndexPath(CCIndexPath &,TableViewCell *,TableView *)
}
class TableViewDataSource{
   signed int numberOfSectionsInTableView(TableView*)
    TableViewCommitCellEditingStyleForRowAtIndexPath(TableView*, TableViewCellEditingStyle, CCIndexPath&)
   virtual signed int numberOfSectionsInTableView(TableView *)
   virtual  TableViewCommitCellEditingStyleForRowAtIndexPath(TableView *,TableViewCellEditingStyle,CCIndexPath &)
   virtual  riptor
}
class BoomListView : cocos2d::CCLayer, TableViewDelegate, TableViewDataSource{
   cocos2d::CCLayer * getListCell(char const*)
   int cellForRowAtIndexPath(CCIndexPath&, TableView*)
   int numberOfRowsInSection(unsigned int, TableView*)
   void didSelectRowAtIndexPath(CCIndexPath&, TableView*)
   int cellHeightForRowAtIndexPath(CCIndexPath&, TableView*)
   signed int numberOfSectionsInTableView(TableView*)
   void TableViewWillReloadCellForRowAtIndexPath(CCIndexPath&, TableViewCell*, TableView*)
   void TableViewWillDisplayCellForRowAtIndexPath(CCIndexPath&, TableViewCell*, TableView*)
   void TableViewCommitCellEditingStyleForRowAtIndexPath(TableView*, TableViewCellEditingStyle, CCIndexPath&)
   void draw()
   signed int init(cocos2d::CCArray*, float, float, int, BoomListType)
   cocos2d::CCLayer * create(cocos2d::CCArray*, float, float, int, BoomListType)
   __int64 loadCell(TableViewCell*, int)
   int setupList()
   BoomListView * ~BoomListView()
   virtual BoomListView * ~BoomListView()
   virtual void draw(void)
   virtual int setupList(void)
   virtual void TableViewWillDisplayCellForRowAtIndexPath(CCIndexPath &,TableViewCell *,TableView *)
   virtual int cellHeightForRowAtIndexPath(CCIndexPath &,TableView *)
   virtual void didSelectRowAtIndexPath(CCIndexPath &,TableView *)
   virtual int numberOfRowsInSection(uint,TableView *)
   virtual signed int numberOfSectionsInTableView(TableView *)
   virtual int cellForRowAtIndexPath(CCIndexPath &,TableView *)
   virtual void TableViewCommitCellEditingStyleForRowAtIndexPath(TableView *,TableViewCellEditingStyle,CCIndexPath &)
   virtual void TableViewWillReloadCellForRowAtIndexPath(CCIndexPath &,TableViewCell *,TableView *)
   virtual cocos2d::CCLayer * getListCell(char const*)
   virtual __int64 loadCell(TableViewCell *,int)
}
class ListCell : TableViewCell{
    updateBGColor(int)
   void loadFromObject(cocos2d::CCObject*, int, int, int)
   void draw()
   signed int init()
   int ListCell(char const*, float, float)
   ListCell * ~ListCell()
   virtual ListCell * ~ListCell()
   virtual signed int init(void)
   virtual void draw(void)
}
class GameCell : TableViewCell{
   int updateBGColor(int)
   cocos2d::CCDirector * loadFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   void draw()
   signed int init()
   int onTouch(cocos2d::CCObject*)
   cocos2d::CCLayer * GameCell(char const*, float, float)
   GameCell * ~GameCell()
   virtual GameCell * ~GameCell()
   virtual signed int init(void)
   virtual void draw(void)
}
class BoomScrollLayer : cocos2d::CCLayer{
   cocos2d::CCSet * claimTouch(cocos2d::CCTouch*)
   int moveToPage(int)
   int removePage(cocos2d::CCLayer*)
   int selectPage(int)
   int updateDots(float)
   int quickUpdate()
   unsigned int setDotScale(float)
   unsigned int updatePages()
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int getTotalPages()
   int moveToPageEnded()
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int instantMoveToPage(int)
   cocos2d::CCSet * cancelAndStoleTouch(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int removePageWithNumber(int)
   int togglePageIndicators(bool)
   int getRelativePageForNum(int)
   BoomScrollLayer * getRelativePosForPage(int)
   signed int pageNumberForPosition(cocos2d::CCPoint)
   int repositionPagesLooped()
   unsigned int setupDynamicScrolling(cocos2d::CCArray*, DynamicScrollDelegate*)
   int preVisitWithClippingRect(cocos2d::CCRect)
   BoomScrollLayer * positionForPageWithNumber(int)
   int setPagesIndicatorPosition(cocos2d::CCPoint)
   int registerWithTouchDispatcher()
   ExtendedLayer * init(cocos2d::CCArray*, int, bool, cocos2d::CCArray*, DynamicScrollDelegate*)
   void visit()
   cocos2d::CCLayer * create(cocos2d::CCArray*, int, bool)
   cocos2d::CCLayer * create(cocos2d::CCArray*, int, bool, cocos2d::CCArray*, DynamicScrollDelegate*)
   int addPage(cocos2d::CCLayer*)
   int addPage(cocos2d::CCLayer*, int)
   int getPage(int)
   void postVisit()
   cocos2d::CCLayer * BoomScrollLayer()
   BoomScrollLayer * ~BoomScrollLayer()
   virtual BoomScrollLayer * ~BoomScrollLayer()
   virtual void visit(void)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
}
class ExtendedLayer : cocos2d::CCLayer{
   int setPosition(cocos2d::CCPoint const&)
   _DWORD init()
   cocos2d::CCLayer * create()
   ExtendedLayer * ~ExtendedLayer()
   virtual ExtendedLayer * ~ExtendedLayer()
   virtual _DWORD init(void)
   virtual int setPosition(cocos2d::CCPoint const&)
}
class ButtonSprite : cocos2d::CCSprite{
   int updateBGImage(char const*)
   _DWORD * updateSpriteBGSize()
   _DWORD * updateSpriteOffset(cocos2d::CCPoint)
   int init(char const*, int, int, float, bool, char const*, char const*, float)
   int init(cocos2d::CCSprite*, int, int, float, float, bool, char const*, bool)
   cocos2d::CCSprite * create(char const*)
   cocos2d::CCSprite * create(char const*, float)
   cocos2d::CCSprite * create(char const*, int, int, float, bool)
   cocos2d::CCSprite * create(char const*, int, int, float, bool, char const*, char const*)
   cocos2d::CCSprite * create(char const*, int, int, float, bool, char const*, char const*, float)
   cocos2d::CCSprite * create(cocos2d::CCSprite*)
   cocos2d::CCSprite * create(cocos2d::CCSprite*, int, int, float, float, bool)
   cocos2d::CCSprite * create(cocos2d::CCSprite*, int, int, float, float, bool, char const*, bool)
   int setColor(cocos2d::_ccColor3B)
   int setString(char const*)
   cocos2d::CCSprite * ButtonSprite()
   cocos2d::CCSprite * ~ButtonSprite()
   virtual cocos2d::CCSprite * ~ButtonSprite()
}
class CCAnimatedSprite : cocos2d::CCSprite{
   int setOpacity(unsigned char)
   signed int initWithType(char const*)
   _DWORD * runAnimation(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int switchToMode(spriteMode)
   int cleanupSprite()
   cocos2d::CCSprite * createWithType(char const*)
   int * tweenToAnimation(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float)
   int animationFinished(char const*)
   int * willPlayAnimation()
   int animationFinishedO(cocos2d::CCObject*)
   _DWORD * runAnimationForced(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int * tweenToAnimationFinished()
   _DWORD * loadType(char const*)
   int setColor(cocos2d::_ccColor3B)
   int * stopTween()
   CCAnimatedSprite * ~CCAnimatedSprite()
   virtual CCAnimatedSprite * ~CCAnimatedSprite()
   virtual int setOpacity(uchar)
   virtual int animationFinished(char const*)
   virtual int animationFinishedO(cocos2d::CCObject *)
}
class CCAnimateFrameCache : cocos2d::CCObject{
   int spriteFrameByName(char const*)
   void removeSpriteFrames()
   int sharedSpriteFrameCache()
   cocos2d::CCDictionary * addSpriteFramesWithFile(char const*)
   int purgeSharedSpriteFrameCache()
   cocos2d::CCNode * addCustomSpriteFramesWithFile(char const*)
   signed int init()
   cocos2d::CCDictionary * addDict(DS_Dictionary*, char const*)
   cocos2d::CCDictionary * addDict(cocos2d::CCDictionary*, char const*)
   CCAnimateFrameCache * ~CCAnimateFrameCache()
   virtual CCAnimateFrameCache * ~CCAnimateFrameCache()
}
class SpriteDescription : cocos2d::CCObject{
   signed int initDescription(DS_Dictionary*)
   signed int initDescription(cocos2d::CCDictionary*)
   SpriteDescription * createDescription(DS_Dictionary*)
   SpriteDescription * createDescription(cocos2d::CCDictionary*)
   int getTransformValues(frameValues*)
   SpriteDescription * SpriteDescription()
   cocos2d::CCObject * ~SpriteDescription()
   virtual cocos2d::CCObject * ~SpriteDescription()
}
class CCContentLayer : cocos2d::CCLayerColor{
   unsigned int setPosition(cocos2d::CCPoint const&)
   void * create(cocos2d::_ccColor4B const&, float, float)
   CCContentLayer * ~CCContentLayer()
   virtual CCContentLayer * ~CCContentLayer()
   virtual unsigned int setPosition(cocos2d::CCPoint const&)
}
class CCCountdown : cocos2d::CCSprite{
   int setOpacity(unsigned char)
   int lapFinished()
   int startTimerWithSeconds(float, void (cocos2d::CCObject::*)(), cocos2d::CCNode*)
   cocos2d::CCTexture2D * init()
   cocos2d::CCSprite * create()
   CCCountdown * ~CCCountdown()
   virtual CCCountdown * ~CCCountdown()
   virtual cocos2d::CCTexture2D * init(void)
   virtual int setOpacity(uchar)
}
class CCCounterLabel : cocos2d::CCLabelBMFont{
   int updateString()
   int enableCounter()
   int updateCounter(float)
   int disableCounter()
   int getTargetCount()
   int setTargetCount(int)
   int setupFormatter(FormatterType)
   int calculateStepSize()
   int fastUpdateCounter()
   int init(int, char const*, FormatterType)
   cocos2d::CCLabelBMFont * create(int, char const*, FormatterType)
   CCCounterLabel * ~CCCounterLabel()
   virtual CCCounterLabel * ~CCCounterLabel()
}
class CCBlockLayer : cocos2d::CCLayerColor{
   int enterLayer()
    customSetup()
   int layerHidden()
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int layerVisible()
   int keyBackClicked()
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
    enterAnimFinished()
   int registerWithTouchDispatcher()
   void draw()
   cocos2d::CCDirector * init()
   cocos2d::CCLayerColor * create()
    enableUI()
    disableUI()
   int exitLayer()
   int hideLayer(bool)
   int showLayer(bool)
   CCBlockLayer * ~CCBlockLayer()
   virtual CCBlockLayer * ~CCBlockLayer()
   virtual cocos2d::CCDirector * init(void)
   virtual void draw(void)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual  customSetup(void)
   virtual int enterLayer(void)
   virtual int exitLayer(void)
   virtual int showLayer(bool)
   virtual int hideLayer(bool)
   virtual int layerVisible(void)
   virtual int layerHidden(void)
   virtual  enterAnimFinished(void)
   virtual  disableUI(void)
   virtual  enableUI(void)
}
class cocos2d::CCRGBAProtocol{
}
class cocos2d::CCLightning : cocos2d::CCNode, cocos2d::CCRGBAProtocol{
   int getOpacity()
   int setOpacity(unsigned char)
   cocos2d::CCAction * strikeRandom()
   int strikeFinished()
   cocos2d::CCAction * strikeWithSeed(unsigned long)
   char * getDisplayedColor()
   int isOpacityModifyRGB()
   int getDisplayedOpacity()
   signed int initWithStrikePoint(cocos2d::CCPoint)
   signed int initWithStrikePoint(cocos2d::CCPoint, cocos2d::CCPoint, float)
   int setOpacityModifyRGB(bool)
   void * updateDisplayedColor(cocos2d::_ccColor3B const&)
   int isCascadeColorEnabled()
   int setCascadeColorEnabled(bool)
   int updateDisplayedOpacity(unsigned char)
   int isCascadeOpacityEnabled()
   cocos2d::CCLightning * lightningWithStrikePoint(cocos2d::CCPoint)
   cocos2d::CCLightning * lightningWithStrikePoint(cocos2d::CCPoint, cocos2d::CCPoint, float)
   int setCascadeOpacityEnabled(bool)
   int draw()
   int strike()
   char * getColor()
   void * setColor(cocos2d::_ccColor3B const&)
   cocos2d::CCLightning * CCLightning()
   cocos2d::CCLightning * ~CCLightning()
   virtual cocos2d::CCLightning * ~CCLightning()
   virtual int draw(void)
   virtual int isOpacityModifyRGB(void)
   virtual int setOpacityModifyRGB(bool)
   virtual int getOpacity(void)
   virtual int getDisplayedOpacity(void)
   virtual int setOpacity(uchar)
   virtual int updateDisplayedOpacity(uchar)
   virtual int isCascadeOpacityEnabled(void)
   virtual int setCascadeOpacityEnabled(bool)
   virtual char * getColor(void)
   virtual char * getDisplayedColor(void)
   virtual void * setColor(cocos2d::_ccColor3B const&)
   virtual void * updateDisplayedColor(cocos2d::_ccColor3B const&)
   virtual int isCascadeColorEnabled(void)
   virtual int setCascadeColorEnabled(bool)
}
class CCMenuItemSpriteExtra : cocos2d::CCMenuItemSprite{
   int unselected()
   int setSizeMult(float)
   int useAnimationType(MenuAnimationType)
   int init(cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   cocos2d::CCObject * create(cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   int activate()
   int selected()
   cocos2d::CCNodeRGBA * CCMenuItemSpriteExtra()
   CCMenuItemSpriteExtra * ~CCMenuItemSpriteExtra()
   virtual CCMenuItemSpriteExtra * ~CCMenuItemSpriteExtra()
   virtual int activate(void)
   virtual int selected(void)
   virtual int unselected(void)
}
class CCMenuItemToggler : cocos2d::CCMenuItem{
   int activeItem()
   int setEnabled(bool)
   int unselected()
   int normalTouch(cocos2d::CCObject*)
   int setSizeMult(float)
   int selectedTouch(cocos2d::CCObject*)
   signed int init(cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   cocos2d::CCNodeRGBA * create(cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   int toggle(bool)
   int activate()
   int selected()
   CCMenuItemToggler * ~CCMenuItemToggler()
   virtual CCMenuItemToggler * ~CCMenuItemToggler()
   virtual int activate(void)
   virtual int selected(void)
   virtual int unselected(void)
   virtual int setEnabled(bool)
}
class CCSpritePart : CCSpritePlus{
   int * frameChanged(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int getBeingUsed()
   int hideInactive()
   int setBeingUsed(bool)
   int resetTextureRect()
   int updateDisplayFrame(char const*)
   void * createWithSpriteFrameName(char const*)
   void * create(cocos2d::CCTexture2D*)
   CCSpritePart * ~CCSpritePart()
   virtual CCSpritePart * ~CCSpritePart()
}
class CCPartAnimSprite : cocos2d::CCSprite{
   int countParts()
   int setOpacity(unsigned char)
   int displayFrame()
   int setBlendFunc(cocos2d::_ccBlendFunc)
   _DWORD * tweenToFrame(cocos2d::CCSpriteFrame*, float)
   int tweenSpriteTo(frameValues, float)
   int getSpriteForKey(char const*)
   int setDisplayFrame(cocos2d::CCSpriteFrame*)
   int transformSprite(frameValues)
   cocos2d::CCArray * initWithAnimDesc(char const*, cocos2d::CCTexture2D*)
   int isFrameDisplayed(cocos2d::CCSpriteFrame*)
   _DWORD * changeTextureOfID(char const*, char const*)
   cocos2d::CCSprite * createWithAnimDesc(char const*, cocos2d::CCTexture2D*)
   int dirtify()
   int setColor(cocos2d::_ccColor3B)
   int setFlipX(bool)
   int setFlipY(bool)
   int setScale(float)
   int setScaleX(float)
   int setScaleY(float)
   CCPartAnimSprite * ~CCPartAnimSprite()
   virtual CCPartAnimSprite * ~CCPartAnimSprite()
   virtual int setScaleX(float)
   virtual int setScaleY(float)
   virtual int setScale(float)
   virtual int setOpacity(uchar)
   virtual int setBlendFunc(cocos2d::_ccBlendFunc)
   virtual int setDisplayFrame(cocos2d::CCSpriteFrame *)
   virtual int isFrameDisplayed(cocos2d::CCSpriteFrame *)
   virtual int displayFrame(void)
}
class cocos2d::CCScrollLayer : cocos2d::CCLayer{
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   cocos2d::CCDirector * initWithLayers(cocos2d::CCArray*, int)
   cocos2d::CCScrollLayer * nodeWithLayers(cocos2d::CCArray*, int)
   cocos2d::CCDirector * setMaximumScrollHeight(float)
   cocos2d::CCScrollLayer * CCScrollLayer()
   cocos2d::CCScrollLayer * ~CCScrollLayer()
   virtual cocos2d::CCScrollLayer * ~CCScrollLayer()
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
}
class CCScrollLayerExt : cocos2d::CCLayer{
   int scrollLayer(float)
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int scrollingEnd()
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   cocos2d::CCAction * setContentOffset(cocos2d::CCPoint, bool)
   int updateIndicators(float)
   cocos2d::CCAction * constraintContent()
   int moveToTopWithOffset(float)
   int setContentLayerSize(cocos2d::CCSize)
   __int64 preVisitWithClippingRect(cocos2d::CCRect)
   int registerWithTouchDispatcher()
   void visit()
   int getMaxY()
   int getMinY()
   int moveToTop()
   void postVisit()
   cocos2d::CCLayer * CCScrollLayerExt(cocos2d::CCRect)
   CCScrollLayerExt * ~CCScrollLayerExt()
   virtual CCScrollLayerExt * ~CCScrollLayerExt()
   virtual void visit(void)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
   virtual __int64 preVisitWithClippingRect(cocos2d::CCRect)
   virtual void postVisit(void)
}
class CCScrollLayerExtDelegate{
    scrollViewTouchEnd(CCScrollLayerExt*)
    scrollViewTouchBegin(CCScrollLayerExt*)
    scrollViewTouchMoving(CCScrollLayerExt*)
    scrollViewDidEndMoving(CCScrollLayerExt*)
    scrollViewDidEndDecelerating(CCScrollLayerExt*)
    scrllViewWillBeginDecelerating(CCScrollLayerExt*)
   virtual  scrllViewWillBeginDecelerating(CCScrollLayerExt *)
   virtual  scrollViewDidEndDecelerating(CCScrollLayerExt *)
   virtual  scrollViewTouchMoving(CCScrollLayerExt *)
   virtual  scrollViewDidEndMoving(CCScrollLayerExt *)
   virtual  scrollViewTouchBegin(CCScrollLayerExt *)
   virtual  scrollViewTouchEnd(CCScrollLayerExt *)
}
class CCIndexPath : cocos2d::CCObject{
   cocos2d::CCObject * CCIndexPathWithSectionRow(int, int)
   int operator=(CCIndexPath const&)
   CCIndexPath * ~CCIndexPath()
   virtual CCIndexPath * ~CCIndexPath()
   virtual  type's name
}
class TableView : CCScrollLayerExt, CCScrollLayerExtDelegate{
   cocos2d::CCSet * claimTouch(cocos2d::CCTouch*)
   int reloadData()
   int scrollWheel(float, float)
   int touchFinish(cocos2d::CCTouch*)
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   char * ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   cocos2d::CCSet * ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   const cocos2d::CCPoint * cellForTouch(cocos2d::CCTouch*)
   cocos2d::CCArray * checkLastCell(TableViewCell*)
   signed int checkFirstCell(TableViewCell*)
   char * ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
    scrollToIndexPath(CCIndexPath&)
   int initTableViewCells()
   cocos2d::CCSet * cancelAndStoleTouch(cocos2d::CCTouch*, cocos2d::CCEvent*)
   signed int checkBoundaryOfCell(TableViewCell*)
   signed int checkBoundaryOfCell(cocos2d::CCPoint&, float)
   signed int deleteTableViewCell(TableViewCell*)
   cocos2d::CCArray * isDuplicateIndexPath(CCIndexPath&)
   int cellForRowAtIndexPath(CCIndexPath&)
   int scrollViewTouchMoving(CCScrollLayerExt*)
   CCIndexPath * checkBoundaryOfContent(float)
   int scrollViewDidEndMoving(CCScrollLayerExt*)
   int registerWithTouchDispatcher()
   int scrollViewDidEndDecelerating(CCScrollLayerExt*)
   int isDuplicateInVisibleCellArray(CCIndexPath*)
   int scrllViewWillBeginDecelerating(CCScrollLayerExt*)
   int dequeueReusableCellWithIdentifier(char const*)
   cocos2d::CCArray * removeIndexPathFromPathAddedArray(CCIndexPath&)
   cocos2d::CCObject * create(TableViewDelegate*, TableViewDataSource*, cocos2d::CCRect)
    onExit()
    onEnter()
   int TableView(cocos2d::CCRect)
   TableView * ~TableView()
   virtual TableView * ~TableView()
   virtual  onEnter(void)
   virtual  onExit(void)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual cocos2d::CCSet * ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual char * ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual char * ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
   virtual int scrollWheel(float,float)
   virtual int scrllViewWillBeginDecelerating(CCScrollLayerExt *)
   virtual int scrollViewDidEndDecelerating(CCScrollLayerExt *)
   virtual int scrollViewTouchMoving(CCScrollLayerExt *)
   virtual int scrollViewDidEndMoving(CCScrollLayerExt *)
}
class TableViewCell : cocos2d::CCLayer{
   int updateVisibility()
   cocos2d::CCLayer * TableViewCell(char const*, float, float)
   TableViewCell * ~TableViewCell()
   virtual TableViewCell * ~TableViewCell()
}
class FileSaveManager : GManager{
   int sharedState()
   int getStoreData()
   int loadDataFromFile(char const*)
   signed int init()
   unsigned int firstLoad()
   FileSaveManager * ~FileSaveManager()
   virtual FileSaveManager * ~FileSaveManager()
   virtual signed int init(void)
   virtual unsigned int firstLoad(void)
}
class FLAlertLayer : cocos2d::CCLayerColor{
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int keyBackClicked()
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int registerWithTouchDispatcher()
   cocos2d::CCDirector * init(FLAlertLayerProtocol*, char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, float, bool, float)
   int show()
   ButtonSprite * create(FLAlertLayerProtocol*, char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*)
   ButtonSprite * create(FLAlertLayerProtocol*, char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, float)
   ButtonSprite * create(FLAlertLayerProtocol*, char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, float, bool, float)
   int onBtn1(cocos2d::CCObject*)
   int onBtn2(cocos2d::CCObject*)
   cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   cocos2d::CCObject * onEnter()
   cocos2d::CCLayerColor * FLAlertLayer()
   cocos2d::CCLayerColor * ~FLAlertLayer()
   virtual cocos2d::CCLayerColor * ~FLAlertLayer()
   virtual cocos2d::CCObject * onEnter(void)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   virtual int show(void)
}
class GameSoundManager : cocos2d::CCNode{
   _DWORD * playEffect(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, float, float)
   int fadeInMusic(bool)
   int resumeSound()
   int fadeOutMusic(bool)
   int sharedManager()
   int enableMetering()
   _DWORD updateMetering(float)
   char * disableMetering()
   int playLoopedSound(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, float, bool, bool, bool)
   void stopLoopedSound(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool)
   int getMeteringValue()
   cocos2d::CCString * pauseLoopedSound(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int playUniqueEffect(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int playUniqueEffect(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, float, float)
   int asynchronousSetup()
   _DWORD * removeLoopedSound(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   void resetUniqueEffects()
    updateLoopedVolume(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float)
   _DWORD * playBackgroundMusic(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, bool)
   void stopAllLoopedSounds()
   FMOD::ChannelControl * stopBackgroundMusic()
   _BOOL4 isLoopedSoundPlaying(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   unsigned int pauseAllLoopedSounds()
   unsigned int resumeAllLoopedSounds()
   signed int init()
   int setup()
   int preload()
   GameSoundManager * ~GameSoundManager()
   virtual GameSoundManager * ~GameSoundManager()
   virtual signed int init(void)
}
class GManager : cocos2d::CCNode{
   void dataLoaded(DS_Dictionary*)
   char * tryLoadData(DS_Dictionary*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   void encodeDataTo(DS_Dictionary*)
   GManager * getSaveString()
   void loadFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   void loadDataFromFile(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   GManager * getCompressedSaveString()
   int loadFromCompressedString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int init()
   void load()
   signed int save()
   _DWORD * setup()
   signed int saveData(DS_Dictionary*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   void saveGMTo(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   void firstLoad()
   GManager * ~GManager()
   virtual GManager * ~GManager()
   virtual signed int init(void)
   virtual _DWORD * setup(void)
   virtual void encodeDataTo(DS_Dictionary *)
   virtual void dataLoaded(DS_Dictionary *)
   virtual void firstLoad(void)
}
class LoadingCircle : cocos2d::CCLayerColor{
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   cocos2d::CCAction * fadeAndRemove()
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int registerWithTouchDispatcher()
   void draw()
   cocos2d::CCDirector * init()
   cocos2d::CCAction * show()
   cocos2d::CCLayerColor * create()
   LoadingCircle * ~LoadingCircle()
   virtual LoadingCircle * ~LoadingCircle()
   virtual cocos2d::CCDirector * init(void)
   virtual void draw(void)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
}
class ColoredSection : cocos2d::CCObject{
   signed int init(cocos2d::_ccColor3B, int, int)
   cocos2d::CCObject * create(cocos2d::_ccColor3B, int, int)
   ColoredSection * ~ColoredSection()
   virtual ColoredSection * ~ColoredSection()
   virtual  e's name
}
class InstantSection : cocos2d::CCObject{
   signed int init(int, int)
   void * create(int, int)
   InstantSection * ~InstantSection()
   virtual InstantSection * ~InstantSection()
   virtual  e's name
}
class DelaySection : cocos2d::CCObject{
   signed int init(int, float)
   void * create(int, float)
   DelaySection * ~DelaySection()
   virtual DelaySection * ~DelaySection()
   virtual  ype's name
}
class MultilineBitmapFont : cocos2d::CCSprite{
   int setOpacity(unsigned char)
   cocos2d::CCDirector * initWithFont(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, float, cocos2d::CCPoint, int, bool)
   int * readColorInfo(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCSprite * createWithFont(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, float, cocos2d::CCPoint, int, bool)
   _DWORD * stringWithMaxWidth(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, float)
   unsigned int moveSpecialDescriptors(int, int)
   cocos2d::CCSprite * MultilineBitmapFont()
   cocos2d::CCSprite * ~MultilineBitmapFont()
   virtual cocos2d::CCSprite * ~MultilineBitmapFont()
   virtual int setOpacity(uchar)
}
class ObjectManager : cocos2d::CCNode{
   signed int animLoaded(char const*)
   int getDefinition(char const*)
   unsigned int loadCopiedSets()
   int getGlobalAnimCopy(char const*)
   int purgeObjectManager()
   unsigned int loadCopiedAnimations()
   cocos2d::CCObject * replaceAllOccurencesOfString(cocos2d::CCString*, cocos2d::CCString*, cocos2d::CCDictionary*)
   signed int init()
   unsigned int setup()
   int instance()
   _DWORD * setLoaded(char const*)
   ObjectManager * ~ObjectManager()
   virtual ObjectManager * ~ObjectManager()
   virtual signed int init(void)
}
class OBB2D : cocos2d::CCNode{
   int computeAxes()
   int orderCorners()
   signed int overlaps1Way(OBB2D*)
   cocos2d::CCRect * getBoundingRect()
   int calculateWithCenter(cocos2d::CCPoint, float, float, float)
   signed int init(cocos2d::CCPoint, float, float, float)
   void * create(cocos2d::CCPoint, float, float, float)
   signed int overlaps(OBB2D*)
   cocos2d::CCNode * OBB2D()
   OBB2D * ~OBB2D()
   virtual OBB2D * ~OBB2D()
}
class PriceLabel : cocos2d::CCNode{
   int setOpacity(float)
   signed int init(int)
   cocos2d::CCNode * create(int)
   int setColor(cocos2d::_ccColor3B)
   int setPrice(int)
   PriceLabel * ~PriceLabel()
   virtual PriceLabel * ~PriceLabel()
}
class SpriteAnimationManager : cocos2d::CCNode{
   int getAnimType(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int * overridePrio()
   _DWORD * runAnimation(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int initWithOwner(CCAnimatedSprite*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   unsigned int loadAnimations(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * queueAnimation(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int * resetAnimState()
   void stopAnimations()
   _DWORD * storeAnimation(cocos2d::CCAnimate*, cocos2d::CCAnimate*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, spriteMode, cocos2d::CCSpriteFrame*)
   cocos2d::CCNode * createWithOwner(CCAnimatedSprite*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * finishAnimation(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   unsigned int createAnimations(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   void * executeAnimation(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCAction * animationFinished()
   _DWORD * runQueuedAnimation()
   int updateAnimationSpeed(float)
   int callAnimationFinished()
   cocos2d::CCString * playSoundForAnimation(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int offsetCurrentAnimation(float)
   int storeSoundForAnimation(cocos2d::CCString*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float)
   int switchToFirstFrameOfAnimation(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int getPrio(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int doCleanup()
   int playSound(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   SpriteAnimationManager * ~SpriteAnimationManager()
   virtual SpriteAnimationManager * ~SpriteAnimationManager()
}
class TextArea : cocos2d::CCSprite{
   int finishFade()
   int setOpacity(unsigned char)
   int fadeInCharacters(float, float)
   cocos2d::CCAction * fadeOutAndRemove()
   int setIgnoreColorCode(bool)
   int colorAllCharactersTo(cocos2d::_ccColor3B)
   void stopAllCharacterActions()
    draw()
   int init(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, float, float, cocos2d::CCPoint, float, bool)
   cocos2d::CCSprite * create(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, float, float, cocos2d::CCPoint, float, bool)
   cocos2d::CCFadeIn * fadeIn(float, bool)
   cocos2d::CCAction * fadeOut(float)
   int hideAll()
   int showAll()
   int setString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCSprite * TextArea()
   cocos2d::CCSprite * ~TextArea()
   virtual cocos2d::CCSprite * ~TextArea()
   virtual  draw(void)
   virtual int setOpacity(uchar)
}
class SlideInLayer : cocos2d::CCLayerColor{
   int enterLayer()
    customSetup()
   int layerHidden()
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int layerVisible()
   int keyBackClicked()
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
    enterAnimFinished()
   int registerWithTouchDispatcher()
   void draw()
   signed int init()
   cocos2d::CCLayerColor * create()
   int enableUI()
   int disableUI()
   int exitLayer(cocos2d::CCObject*)
   cocos2d::CCAction * hideLayer(bool)
   cocos2d::CCAction * showLayer(bool)
   cocos2d::CCLayerColor * SlideInLayer()
   SlideInLayer * ~SlideInLayer()
   virtual SlideInLayer * ~SlideInLayer()
   virtual signed int init(void)
   virtual void draw(void)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual  customSetup(void)
   virtual int enterLayer(void)
   virtual int exitLayer(cocos2d::CCObject *)
   virtual cocos2d::CCAction * showLayer(bool)
   virtual cocos2d::CCAction * hideLayer(bool)
   virtual int layerVisible(void)
   virtual int layerHidden(void)
   virtual  enterAnimFinished(void)
   virtual int disableUI(void)
   virtual int enableUI(void)
}
class SliderThumb : cocos2d::CCMenuItemImage{
   int setRotated(bool)
   int setMaxOffset(float)
   signed int init(cocos2d::CCNode*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), char const*, char const*)
   cocos2d::CCNodeRGBA * create(cocos2d::CCNode*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), char const*, char const*)
   int getValue()
   int setValue(float)
   SliderThumb * ~SliderThumb()
   virtual SliderThumb * ~SliderThumb()
}
class Slider : cocos2d::CCLayer{
   int hideGroove(bool)
   int setRotated(bool)
   int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int disableTouch()
   int setMaxOffset(float)
   int getLiveDragging()
   int setLiveDragging(bool)
   int setBarVisibility(bool)
   signed int init(cocos2d::CCNode*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), char const*, char const*, char const*, char const*, float)
   cocos2d::CCLayer * create(cocos2d::CCNode*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   cocos2d::CCLayer * create(cocos2d::CCNode*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), float)
   cocos2d::CCLayer * create(cocos2d::CCNode*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), char const*, char const*, char const*, char const*, float)
   int getThumb()
   int getValue()
   int setValue(float)
   int updateBar()
   Slider * ~Slider()
   virtual Slider * ~Slider()
   virtual int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
}
class SliderTouchLogic : cocos2d::CCMenu{
   int setRotated(bool)
   int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   Slider * ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int setMaxOffset(float)
   int registerWithTouchDispatcher()
   int init(cocos2d::CCNode*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), char const*, char const*, float)
   void * create(cocos2d::CCNode*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), char const*, char const*, float)
   cocos2d::CCLayerRGBA * SliderTouchLogic()
   SliderTouchLogic * ~SliderTouchLogic()
   virtual SliderTouchLogic * ~SliderTouchLogic()
   virtual int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual Slider * ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
}
class BoomListLayer : cocos2d::CCLayerColor{
   int init(BoomListView*, char const*)
   void * create(BoomListView*, char const*)
   BoomListLayer * ~BoomListLayer()
   virtual BoomListLayer * ~BoomListLayer()
}
class GooglePlayManager : cocos2d::CCNode{
   int sharedState()
   int googlePlaySignedIn()
   signed int init()
   GooglePlayManager * ~GooglePlayManager()
   virtual GooglePlayManager * ~GooglePlayManager()
   virtual signed int init(void)
}
class cocos2d::CCTextFieldDelegate{
    textChanged()
   int onTextFieldInsertText(cocos2d::CCTextFieldTTF*, char const*, int)
   int onTextFieldAttachWithIME(cocos2d::CCTextFieldTTF*)
   int onTextFieldDetachWithIME(cocos2d::CCTextFieldTTF*)
   int onTextFieldDeleteBackward(cocos2d::CCTextFieldTTF*, char const*, int)
   int onDraw(cocos2d::CCTextFieldTTF*)
   virtual int onTextFieldAttachWithIME(cocos2d::CCTextFieldTTF *)
   virtual int onTextFieldDetachWithIME(cocos2d::CCTextFieldTTF *)
   virtual int onTextFieldInsertText(cocos2d::CCTextFieldTTF *,char const*,int)
   virtual int onTextFieldDeleteBackward(cocos2d::CCTextFieldTTF *,char const*,int)
   virtual int onDraw(cocos2d::CCTextFieldTTF *)
   virtual  textChanged(void)
}
class CCTextInputNode : cocos2d::CCLayer, cocos2d::CCIMEDelegate, cocos2d::CCTextFieldDelegate{
   int forceOffset()
   int textChanged()
   int updateLabel(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int refreshLabel()
   int * setAllowedChars(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int keyboardWillHide(cocos2d::CCIMEKeyboardNotificationInfo&)
   signed int keyboardWillShow(cocos2d::CCIMEKeyboardNotificationInfo&)
   int onClickTrackNode(bool)
   int setMaxLabelScale(float)
   int setMaxLabelWidth(float)
   int updateBlinkLabel()
   int setLabelNormalColor(cocos2d::_ccColor3B)
   signed int onTextFieldInsertText(cocos2d::CCTextFieldTTF*, char const*, int)
   int onTextFieldAttachWithIME(cocos2d::CCTextFieldTTF*)
   int onTextFieldDetachWithIME(cocos2d::CCTextFieldTTF*)
   int setLabelPlaceholderColor(cocos2d::_ccColor3B)
   int setLabelPlaceholderScale(float)
   int registerWithTouchDispatcher()
   signed int init(float, float, char const*, char const*, int, char const*)
   int visit()
   cocos2d::CCObject * create(float, float, char const*, char const*, int, char const*)
   CCTextInputNode * getString()
   int setString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCLayer * CCTextInputNode()
   CCTextInputNode * ~CCTextInputNode()
   virtual CCTextInputNode * ~CCTextInputNode()
   virtual int visit(void)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
   virtual int textChanged(void)
   virtual int onClickTrackNode(bool)
   virtual signed int keyboardWillShow(cocos2d::CCIMEKeyboardNotificationInfo &)
   virtual int keyboardWillHide(cocos2d::CCIMEKeyboardNotificationInfo &)
   virtual signed int onTextFieldInsertText(cocos2d::CCTextFieldTTF *,char const*,int)
   virtual int onTextFieldAttachWithIME(cocos2d::CCTextFieldTTF *)
   virtual int onTextFieldDetachWithIME(cocos2d::CCTextFieldTTF *)
}
class GhostTrailEffect : cocos2d::CCNode{
   int runWithTarget(cocos2d::CCSprite*, float, float, float, float, bool)
   cocos2d::CCAction * trailSnapshot(float)
   signed int doBlendAdditive()
    draw()
   signed int init()
   cocos2d::CCNode * create()
   int stopTrail()
   cocos2d::CCNode * GhostTrailEffect()
   GhostTrailEffect * ~GhostTrailEffect()
   virtual GhostTrailEffect * ~GhostTrailEffect()
   virtual signed int init(void)
   virtual  draw(void)
}
class CCCircleAlert : CCCircleWave{
   signed int init(float, float, float)
   void * create(float, float, float)
   CCCircleAlert * ~CCCircleAlert()
   virtual CCCircleAlert * ~CCCircleAlert()
}
class CCCircleWave : cocos2d::CCNode{
   int setPosition(cocos2d::CCPoint const&)
   __int64 followObject(cocos2d::CCNode*, bool)
   int updatePosition(float)
   int updateTweenAction(float, char const*)
   int removeMeAndCleanup()
   __int64 draw()
   signed int init(float, float, float, bool, bool)
   cocos2d::CCNode * create(float, float, float, bool)
   cocos2d::CCNode * create(float, float, float, bool, bool)
   void * baseSetup(float)
   cocos2d::CCNode * CCCircleWave()
   CCCircleWave * ~CCCircleWave()
   virtual CCCircleWave * ~CCCircleWave()
   virtual int setPosition(cocos2d::CCPoint const&)
   virtual int removeMeAndCleanup(void)
   virtual __int64 draw(void)
   virtual int updateTweenAction(float,char const*)
}
class CCAlertCircle : cocos2d::CCNode{
   __int64 draw()
   signed int init()
   cocos2d::CCNode * create()
   cocos2d::CCNode * ~CCAlertCircle()
   virtual cocos2d::CCNode * ~CCAlertCircle()
   virtual signed int init(void)
   virtual __int64 draw(void)
}
class CCLightFlash : cocos2d::CCNode{
   cocos2d::CCAction * playEffect(cocos2d::CCPoint, cocos2d::_ccColor3B, float, float, float, float, float, float, float, float, float, float, float, float, float, float, int, bool, bool, float)
   int cleanupFlash()
   unsigned int removeLights()
   cocos2d::CCAction * fadeAndRemove()
   signed int init()
   cocos2d::CCNode * create()
   cocos2d::CCAction * showFlash()
   CCLightFlash * ~CCLightFlash()
   virtual CCLightFlash * ~CCLightFlash()
   virtual signed int init(void)
}
class CCLightStrip : cocos2d::CCNode{
   _DWORD * updateTweenAction(float, char const*)
   void draw()
   signed int init(float, float, float, float, float)
   cocos2d::CCNode * create(float, float, float, float, float)
   CCLightStrip * ~CCLightStrip()
   virtual CCLightStrip * ~CCLightStrip()
   virtual void draw(void)
   virtual _DWORD * updateTweenAction(float,char const*)
}
class CCSpritePlus : cocos2d::CCSprite{
   CCSpritePlus * stopFollow()
   int addFollower(cocos2d::CCNode*)
   int getFollower()
   unsigned int setPosition(cocos2d::CCPoint const&)
   unsigned int setRotation(float)
   int followSprite(CCSpritePlus*)
   cocos2d::CCArray * removeFollower(cocos2d::CCNode*)
   int initWithTexture(cocos2d::CCTexture2D*)
   cocos2d::CCSprite * createWithSpriteFrame(cocos2d::CCSpriteFrame*)
   int initWithSpriteFrameName(char const*)
   cocos2d::CCSprite * createWithSpriteFrameName(char const*)
   unsigned int setFlipX(bool)
   unsigned int setFlipY(bool)
   unsigned int setScale(float)
   unsigned int setScaleX(float)
   unsigned int setScaleY(float)
   cocos2d::CCSprite * ~CCSpritePlus()
   virtual cocos2d::CCSprite * ~CCSpritePlus()
   virtual unsigned int setScaleX(float)
   virtual unsigned int setScaleY(float)
   virtual unsigned int setScale(float)
   virtual unsigned int setPosition(cocos2d::CCPoint const&)
   virtual unsigned int setRotation(float)
   virtual int initWithTexture(cocos2d::CCTexture2D *)
   virtual int initWithSpriteFrameName(char const*)
   virtual unsigned int setFlipX(bool)
   virtual unsigned int setFlipY(bool)
}
class ListButtonPage : cocos2d::CCLayer{
   cocos2d::CCMenu * init(cocos2d::CCArray*, cocos2d::CCPoint, int, int, float, float, float)
   cocos2d::CCLayer * create(cocos2d::CCArray*, cocos2d::CCPoint, int, int, float, float, float)
   ListButtonPage * ~ListButtonPage()
   virtual ListButtonPage * ~ListButtonPage()
}
class ListButtonBar : cocos2d::CCNode{
   int init(cocos2d::CCArray*, cocos2d::CCPoint, int, int, float, float, float, float, int)
   cocos2d::CCNode * create(cocos2d::CCArray*, cocos2d::CCPoint, int, int, float, float, float, float, int)
   int onLeft(cocos2d::CCObject*)
   int getPage()
   int onRight(cocos2d::CCObject*)
   int goToPage(int)
   ListButtonBar * ~ListButtonBar()
   virtual ListButtonBar * ~ListButtonBar()
}
class ScrollingLayer : cocos2d::CCLayerColor{
   cocos2d::CCRect * getViewRect()
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   signed int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int setStartOffset(cocos2d::CCPoint)
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   void draw()
   signed int init(cocos2d::CCSize, cocos2d::CCPoint, float)
   void visit()
   cocos2d::CCLayerColor * create(cocos2d::CCSize, cocos2d::CCPoint, float)
   cocos2d::CCLayerColor * ScrollingLayer()
   ScrollingLayer * ~ScrollingLayer()
   virtual ScrollingLayer * ~ScrollingLayer()
   virtual void draw(void)
   virtual void visit(void)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual signed int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
}
class FMODAudioEngine : cocos2d::CCNode{
   int playEffect(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, float, float, float)
   _DWORD stopEffect(unsigned int)
   _DWORD pauseEffect(unsigned int)
   int printResult(FMOD_RESULT)
   _DWORD resumeEffect(unsigned int)
   int sharedEngine()
    unloadEffect(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * preloadEffect(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int enableMetering()
   int stopAllEffects()
   int disableMetering()
   int pauseAllEffects()
   int getEffectsVolume()
   int resumeAllEffects()
   int setEffectsVolume(float)
   int setupAudioEngine()
   int fadeBackgroundMusic(bool, float)
   _DWORD * playBackgroundMusic(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, bool)
   FMOD::ChannelControl * stopBackgroundMusic(bool)
   int pauseBackgroundMusic()
   int resumeBackgroundMusic()
   int rewindBackgroundMusic()
   int getBackgroundMusicTime()
   _DWORD * preloadBackgroundMusic(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int setBackgroundMusicTime(float)
   int willPlayBackgroundMusic()
   int getBackgroundMusicVolume()
   int isBackgroundMusicPlaying(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int isBackgroundMusicPlaying()
   int setBackgroundMusicVolume(float)
   int stop()
   _BOOL4 start()
   FMOD::ChannelControl * update(float)
   FMODAudioEngine * ~FMODAudioEngine()
   virtual FMODAudioEngine * ~FMODAudioEngine()
   virtual FMOD::ChannelControl * update(float)
}
class FMODSound : cocos2d::CCNode{
   signed int init(FMOD::Sound*)
   cocos2d::CCNode * create(FMOD::Sound*)
   cocos2d::CCNode * ~FMODSound()
   virtual cocos2d::CCNode * ~FMODSound()
}
class CCSpriteWithHue : cocos2d::CCSprite{
   int initShader()
   _DWORD shaderBody()
   float * updateColor()
   float * setHueDegrees(float)
   int initWithTexture(cocos2d::CCTexture2D*)
   int initWithTexture(cocos2d::CCTexture2D*, cocos2d::CCRect const&)
   int initWithTexture(cocos2d::CCTexture2D*, cocos2d::CCRect const&, bool)
   cocos2d::CCSprite * createWithTexture(cocos2d::CCTexture2D*)
   cocos2d::CCSprite * createWithTexture(cocos2d::CCTexture2D*, cocos2d::CCRect const&, bool)
   float * updateColorMatrix()
   int getUniformLocations()
   int initWithSpriteFrame(cocos2d::CCSpriteFrame*)
   int setupDefaultSettings()
   cocos2d::CCSprite * createWithSpriteFrame(cocos2d::CCSpriteFrame*)
   cocos2d::CCSprite * createWithSpriteFrameName(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   int draw()
   cocos2d::CCSprite * create(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   cocos2d::CCSprite * create(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cocos2d::CCRect const&)
   int getHue()
   float * setHue(float)
   int getAlpha()
   float * updateHue(float)
   CCSpriteWithHue * ~CCSpriteWithHue()
   virtual CCSpriteWithHue * ~CCSpriteWithHue()
   virtual int draw(void)
   virtual int initWithTexture(cocos2d::CCTexture2D *)
   virtual int initWithTexture(cocos2d::CCTexture2D *,cocos2d::CCRect const&)
   virtual int initWithTexture(cocos2d::CCTexture2D *,cocos2d::CCRect const&,bool)
   virtual int initWithSpriteFrame(cocos2d::CCSpriteFrame *)
   virtual float * updateColor(void)
}
class cocos2d::CCSceneDelegate{
    willSwitchToScene(cocos2d::CCScene*)
}
class AppDelegate : cocos2d::CCSceneDelegate{
   FMODAudioEngine * checkSound()
   int resumeSound()
   int setupGLView()
   int trySaveGame()
    platformShutdown()
   _DWORD hideLoadingCircle()
   signed int loadingIsFinished()
   _DWORD showLoadingCircle(bool, bool, bool)
   int willSwitchToScene(cocos2d::CCScene*)
    setIdleTimerDisabled(bool)
   GameManager * applicationWillBecomeActive()
    applicationWillResignActive()
   int applicationDidEnterBackground()
   signed int applicationDidFinishLaunching()
   int applicationWillEnterForeground()
   int get()
   int bgScale()
   signed int musicTest()
   int pauseGame()
   AppDelegate * ~AppDelegate()
   virtual AppDelegate * ~AppDelegate()
   virtual signed int applicationDidFinishLaunching(void)
   virtual int applicationDidEnterBackground(void)
   virtual int applicationWillEnterForeground(void)
   virtual GameManager * applicationWillBecomeActive(void)
   virtual  applicationWillResignActive(void)
   virtual int trySaveGame(void)
   virtual int willSwitchToScene(cocos2d::CCScene *)
}
class FLAlertLayerProtocol{
    FLAlert_Clicked(FLAlertLayer*, bool)
   virtual  FLAlert_Clicked(FLAlertLayer *,bool)
}
class GJSongBrowser : GJDropDownLayer, FLAlertLayerProtocol{
   int onNextPage(cocos2d::CCObject*)
   int onPrevPage(cocos2d::CCObject*)
   int customSetup()
   __int64 onDeleteAll(cocos2d::CCObject*)
   int setupPageInfo(int, int, int)
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int setupSongBrowser(cocos2d::CCArray*)
   int init(LevelSettingsObject*)
   cocos2d::CCObject * create(LevelSettingsObject*)
   int loadPage(int)
   cocos2d::CCLayerColor * GJSongBrowser()
   GJSongBrowser * ~GJSongBrowser()
   virtual GJSongBrowser * ~GJSongBrowser()
   virtual int customSetup(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
}
class CreateGuidelinesLayer : FLAlertLayer, FLAlertLayerProtocol{
   unsigned int toggleItems(bool)
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int * registerTouch()
   int keyBackClicked()
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int doClearGuidelines()
   __int64 onClearGuidelines(cocos2d::CCObject*)
   int * getMergedRecordString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int registerWithTouchDispatcher()
   cocos2d::CCDirector * init(LevelSettingsObject*)
   int keyUp(cocos2d::enumKeyCodes)
   cocos2d::CCLayerColor * create(LevelSettingsObject*)
   __int64 onInfo(cocos2d::CCObject*)
   cocos2d::CCScriptEngineManager * onStop(cocos2d::CCObject*)
   int update(float)
   int * keyDown(cocos2d::enumKeyCodes)
   int onClose(cocos2d::CCObject*)
   __int64 onRecord(cocos2d::CCObject*)
   CreateGuidelinesLayer * ~CreateGuidelinesLayer()
   virtual CreateGuidelinesLayer * ~CreateGuidelinesLayer()
   virtual int update(float)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual int * keyDown(cocos2d::enumKeyCodes)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual int keyUp(cocos2d::enumKeyCodes)
}
class GooglePlayDelegate{
    googlePlaySignedIn()
   virtual  googlePlaySignedIn(void)
}
class MenuLayer : cocos2d::CCLayer, FLAlertLayerProtocol, GooglePlayDelegate{
   int onFacebook(cocos2d::CCObject*)
   _DWORD onEveryplay(cocos2d::CCObject*)
   int onMoreGames(cocos2d::CCObject*)
   int onMyProfile(cocos2d::CCObject*)
   VideoOptionsLayer * openOptions(bool)
   AchievementManager * onFreeLevels(cocos2d::CCObject*)
   int onGameCenter(cocos2d::CCObject*)
   __int64 onNewgrounds(cocos2d::CCObject*)
   int onFullVersion(cocos2d::CCObject*)
   __int64 keyBackClicked()
   int onAchievements(cocos2d::CCObject*)
   __int64 showGCQuestion()
   __int64 FLAlert_Clicked(FLAlertLayer*, bool)
   VideoOptionsLayer * onOptionsInstant()
   signed int onGooglePlayGames(cocos2d::CCObject*)
   int showMeltdownPromo()
   int googlePlaySignedIn()
   GJAccountManager * updateUserProfileButton()
   int syncPlatformAchievements(float)
   int init()
   cocos2d::CCLayer * node()
   cocos2d::CCScene * scene(bool)
   int onPlay(cocos2d::CCObject*)
   __int64 onQuit(cocos2d::CCObject*)
   int endGame()
   VideoOptionsLayer * keyDown(cocos2d::enumKeyCodes)
   int onDaily(cocos2d::CCObject*)
   int onStats(cocos2d::CCObject*)
   int onGarage(cocos2d::CCObject*)
   int onRobTop(cocos2d::CCObject*)
   int onCreator(cocos2d::CCObject*)
   VideoOptionsLayer * onOptions(cocos2d::CCObject*)
   cocos2d::CCApplication * onTrailer(cocos2d::CCObject*)
   int onTwitter(cocos2d::CCObject*)
   int onYouTube(cocos2d::CCObject*)
   char * tryShowAd(float)
   int willClose()
   MenuLayer * ~MenuLayer()
   virtual MenuLayer * ~MenuLayer()
   virtual int init(void)
   virtual __int64 keyBackClicked(void)
   virtual VideoOptionsLayer * keyDown(cocos2d::enumKeyCodes)
   virtual int googlePlaySignedIn(void)
   virtual __int64 FLAlert_Clicked(FLAlertLayer *,bool)
}
class LoadingLayer : cocos2d::CCLayer{
   int loadAssets()
   int updateProgress(int)
   signed int loadingFinished()
   const char * getLoadingString()
   GameSoundManager * init(bool)
   cocos2d::CCScene * scene(bool)
   cocos2d::CCLayer * create(bool)
   cocos2d::CCLayer * ~LoadingLayer()
   virtual cocos2d::CCLayer * ~LoadingLayer()
}
class cocos2d::CCKeyboardDelegate{
    keyUp(cocos2d::enumKeyCodes)
    keyDown(cocos2d::enumKeyCodes)
   virtual  keyDown(cocos2d::enumKeyCodes)
   virtual  keyUp(cocos2d::enumKeyCodes)
}
class UILayer : cocos2d::CCLayerColor, cocos2d::CCKeyboardDelegate{
   int enableMenu()
   int disableMenu()
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   unsigned int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int * onDeleteCheck(cocos2d::CCObject*)
   int keyBackClicked()
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int toggleCheckpointsMenu(bool)
   int registerWithTouchDispatcher()
    draw()
   signed int init()
   unsigned int keyUp(cocos2d::enumKeyCodes)
   cocos2d::CCLayerColor * create()
   int keyDown(cocos2d::enumKeyCodes)
   CheckpointObject * onCheck(cocos2d::CCObject*)
   int onPause(cocos2d::CCObject*)
   int pCommand(cocos2d::CCNode*)
   cocos2d::CCLayerColor * UILayer()
   UILayer * ~UILayer()
   virtual UILayer * ~UILayer()
   virtual signed int init(void)
   virtual  draw(void)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual unsigned int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual int keyDown(cocos2d::enumKeyCodes)
   virtual unsigned int keyUp(cocos2d::enumKeyCodes)
}
class CCCircleWaveDelegate{
    circleWaveWillBeRemoved(CCCircleWave*)
   virtual  circleWaveWillBeRemoved(CCCircleWave *)
}
class CurrencyRewardDelegate{
    currencyWillExit(CurrencyRewardLayer*)
   virtual  currencyWillExit(CurrencyRewardLayer *)
}
class DialogDelegate{
    dialogClosed(DialogLayer*)
   virtual  dialogClosed(DialogLayer *)
}
class TriggerEffectDelegate{
   virtual  e
}
class PlayLayer : GJBaseGameLayer, CCCircleWaveDelegate, CurrencyRewardDelegate, DialogDelegate{
   signed int isFlipping()
   _DWORD * pickupItem(GameObject*)
   int resetLevel()
   void sortGroups()
   int startMusic()
   cocos2d::CCAction * cameraMoveX(float, float, float)
   int cameraMoveY(float, float, float)
   unsigned int colorObject(int, cocos2d::_ccColor3B)
   GameManager * commitJumps()
   int exitAirMode()
   int exitFlyMode(PlayerObject*)
   int flipGravity(PlayerObject*, bool, bool)
   int flipObjects()
   int setupReplay(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int shakeCamera(float, float, float)
   int shouldBlend(int)
   cocos2d::CCAction * showNewBest(bool, int, int, bool, bool, bool)
   int spawnCircle()
   int timeForXPos(float)
   cocos2d::CCNode * updateColor(cocos2d::_ccColor3B, float, int, bool, float, cocos2d::_ccHSVValue, int, bool, int, EffectGameObject*)
   int xPosForTime(float)
   int dialogClosed(DialogLayer*)
   int exitBirdMode(PlayerObject*)
   int exitDartMode(PlayerObject*)
   int exitRollMode(PlayerObject*)
   signed int flipFinished()
   unsigned int processItems()
   int recordAction(bool, PlayerObject*)
   int showEndLayer()
   int spawnPlayer2()
   int timeForXPos2(float, bool)
   int updateCamera(float)
   int updateReplay(float)
   int addToGroupOld(GameObject*)
   cocos2d::CCObject * claimParticle(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int destroyPlayer(PlayerObject*, GameObject*)
   int enterDualMode(GameObject*, bool)
   int exitRobotMode(PlayerObject*)
   int getMaxPortalY()
   int getMinPortalY()
   int hasUniqueCoin(GameObject*)
   GameSoundManager * levelComplete()
   int removePlayer2()
   int spawnFirework()
   cocos2d::CCParticleSystemQuad * spawnParticle(char const*, int, cocos2d::tCCPositionType, cocos2d::CCPoint)
   signed int stopRecording()
   int toggleFlipped(bool, bool)
   int toggleGlitter(bool)
   int updateTimeMod(float, bool)
   cocos2d::CCObject * createParticle(int, char const*, int, cocos2d::tCCPositionType)
   int exitSpiderMode(PlayerObject*)
   int getOtherPlayer(PlayerObject*)
   _DWORD * getParticleKey(int, char const*, int, cocos2d::tCCPositionType)
   int getRelativeMod(cocos2d::CCPoint, float, float, float)
   __int32 incrementJumps()
   cocos2d::CCAction * lightningFlash(cocos2d::CCPoint, cocos2d::_ccColor3B)
   cocos2d::CCAction * lightningFlash(cocos2d::CCPoint, cocos2d::CCPoint, cocos2d::_ccColor3B, float, float, int, bool, float)
   int markCheckpoint()
   int showRetryLayer()
   int startRecording()
   void toggleDualMode(GameObject*, bool, PlayerObject*, bool)
   signed int tryStartRecord()
   void updateAttempts()
   int animateInGround(bool)
   int checkCollisions(PlayerObject*, float)
   PlayLayer * getObjectsState()
   _DWORD * getParticleKey2(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int moveCameraToPos(cocos2d::CCPoint)
   cocos2d::CCAction * playFlashEffect(float, int, float)
   int setupLevelStart(LevelSettingsObject*)
   int stopCameraShake()
   int storeCheckpoint(CheckpointObject*)
   int switchToFlyMode(PlayerObject*, GameObject*, bool, int)
   int unclaimParticle(char const*, cocos2d::CCParticleSystemQuad*)
   int animateOutGround(bool)
   int applyEnterEffect(GameObject*)
   int createCheckpoint()
   int currencyWillExit(CurrencyRewardLayer*)
   int getTempMilliTime()
   int removeAllObjects()
   int resumeAndRestart()
   int saveRecordAction(bool, PlayerObject*)
   cocos2d::CCAction * showCompleteText()
   int switchToRollMode(PlayerObject*, GameObject*, bool)
   int updateDualGround(PlayerObject*, int, bool)
   void updateVisibility()
   int willSwitchToMode(int, PlayerObject*)
   int addToSpeedObjects(GameObject*)
   int delayedResetLevel()
   int getLastCheckpoint()
   int loadDefaultColors()
   int playGravityEffect(bool)
   int playSpeedParticle(float)
   int setStartPosObject(StartPosObject*)
   int switchToRobotMode(PlayerObject*, GameObject*, bool)
   __int64 toggleGhostEffect(int)
   int toggleProgressbar()
   int updateLevelColors()
   int updateProgressbar()
   _DWORD * updateTweenAction(float, char const*)
   void clearPickedUpItems()
   int loadFromCheckpoint(CheckpointObject*)
   int loadLastCheckpoint()
   __int64 playExitDualEffect(PlayerObject*)
   int removeFromGroupOld(GameObject*)
   FMODAudioEngine * showCompleteEffect()
   cocos2d::CCAction * showTwoPlayerGuide()
   int switchToSpiderMode(PlayerObject*, GameObject*, bool)
   int togglePracticeMode(bool)
   int animateInDualGround(GameObject*, float, bool)
   int optimizeColorGroups()
   void prepareSpawnObjects()
   int registerStateObject(GameObject*)
   unsigned int visitWithColorFlash()
   cocos2d::CCObject * calculateColorValues(EffectGameObject*, EffectGameObject*, int, float, ColorActionSprite*, GJEffectManager*)
   int playAnimationCommand(int, int)
   int playerWillSwitchMode(PlayerObject*, GameObject*)
   int registerActiveObject(GameObject*)
   int * removeLastCheckpoint()
   int gravityEffectFinished()
   void * loadSavedObjectsState(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int optimizeOpacityGroups()
   cocos2d::CCAction * playEndAnimationToPos(cocos2d::CCPoint)
   cocos2d::CCAction * startRecordingDelayed()
   int * unregisterStateObject(GameObject*)
   unsigned int updateEffectPositions()
   void createObjectsFromSetup(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int * unregisterActiveObject(GameObject*)
   int * circleWaveWillBeRemoved(CCCircleWave*)
   int animateOutGroundFinished()
   int processLoadedMoveActions()
   int toggleBGEffectVisibility(bool)
   int onEnterTransitionDidFinish()
   int optimizeSaveRequiredGroups()
   int updateMoveObjectsLastPosition()
    draw()
   GameManager * init(GJGameLevel*)
   AppDelegate * scene(GJGameLevel*)
   unsigned int visit()
   void create(GJGameLevel*)
   cocos2d::CCScriptEngineManager * onExit()
   GameSoundManager * onQuit()
   int resume()
   _DWORD * update(float)
   int vfDChk()
   int hasItem(int)
   cocos2d::CCAction * showHint()
   int addCircle(CCCircleWave*)
   int addObject(GameObject*)
   void fullReset()
   int pauseGame(bool)
   int startGame()
   cocos2d::CCLayer * PlayLayer()
   PlayLayer * ~PlayLayer()
   virtual PlayLayer * ~PlayLayer()
   virtual _DWORD * update(float)
   virtual int onEnterTransitionDidFinish(void)
   virtual cocos2d::CCScriptEngineManager * onExit(void)
   virtual  draw(void)
   virtual unsigned int visit(void)
   virtual _DWORD * updateTweenAction(float,char const*)
   virtual cocos2d::CCNode * updateColor(cocos2d::_ccColor3B,float,int,bool,float,cocos2d::_ccHSVValue,int,bool,int,EffectGameObject *)
   virtual int flipGravity(PlayerObject *,bool,bool)
   virtual cocos2d::CCObject * calculateColorValues(EffectGameObject *,EffectGameObject *,int,float,ColorActionSprite *,GJEffectManager *)
   virtual int timeForXPos(float)
   virtual int xPosForTime(float)
   virtual int currencyWillExit(CurrencyRewardLayer *)
   virtual int * circleWaveWillBeRemoved(CCCircleWave *)
   virtual int dialogClosed(DialogLayer *)
}
class PlayerCheckpoint : cocos2d::CCNode{
    init()
   cocos2d::CCNode * create()
   cocos2d::CCNode * PlayerCheckpoint()
   PlayerCheckpoint * ~PlayerCheckpoint()
   virtual PlayerCheckpoint * ~PlayerCheckpoint()
   virtual  init(void)
}
class CheckpointObject : cocos2d::CCNode{
   cocos2d::CCNode * getColorAction(ColorAction*, cocos2d::_ccColor3B)
    init()
   cocos2d::CCNode * create()
   int getObject()
   int setObject(GameObject*)
   cocos2d::CCNode * CheckpointObject()
   CheckpointObject * ~CheckpointObject()
   virtual CheckpointObject * ~CheckpointObject()
   virtual  init(void)
}
class SpeedObject : cocos2d::CCNode{
   signed int init(GameObject*, int, float)
   cocos2d::CCNode * create(GameObject*, int, float)
   cocos2d::CCNode * ~SpeedObject()
   virtual cocos2d::CCNode * ~SpeedObject()
}
class GravityEffectSprite : cocos2d::CCSprite{
   unsigned int updateSpritesColor(cocos2d::_ccColor3B)
    draw()
   int init()
   void * create()
   GravityEffectSprite * ~GravityEffectSprite()
   virtual GravityEffectSprite * ~GravityEffectSprite()
   virtual int init(void)
   virtual  draw(void)
}
class GameManager : GManager{
   _DWORD * dataLoaded(DS_Dictionary*)
   int loadGround(int)
   int reorderKey(int, bool)
   cocos2d::CCApplication * subYouTube()
   int tryCacheAd()
   _DWORD * unlockIcon(int, IconType)
   unsigned int colorForIdx(int)
   int colorForPos(int)
   int doQuickSave()
   GameSoundManager * fadeInMusic(char const*)
   const char * getFontFile(int)
   int getGTexture(int)
   int sharedState()
   int startUpdate()
   _DWORD * unlockColor(int, bool)
   int updateMusic()
   int encodeDataTo(DS_Dictionary*)
   int getBGTexture(int)
   cocos2d::CCApplication * likeFacebook()
   signed int safePopScene()
   cocos2d::CCApplication * followTwitter()
    itemPurchased(char const*)
   __int32 resetAllIcons()
   __int32 setPlayerBall(int)
   __int32 setPlayerBird(int)
   __int32 setPlayerDart(int)
   __int32 setPlayerShip(int)
   int videoAdHidden()
   FMODAudioEngine * videoAdShowed()
   int checkUsedIcons()
   const char * getFontTexture(int)
   int getNextUsedKey(int, bool)
   int hasRatingPower()
   int isIconUnlocked(int, IconType)
   int levelIsPremium(int, int)
   int loadBackground(int)
   int reloadAllStep2()
   int reloadAllStep3()
   int reloadAllStep4()
   signed int reloadAllStep5()
   __int32 setPlayerColor(int)
   __int32 setPlayerFrame(int)
   __int32 setPlayerRobot(int)
   int setValueKeeper(cocos2d::CCDictionary*)
   int shortenAdTimer(float)
   int showMainMenuAd()
   int getGameVariable(char const*)
   int isColorUnlocked(int, bool)
   int loadDeathEffect(int)
   int openEditorGuide()
   _DWORD * setGameVariable(char const*, bool)
   __int32 setPlayerColor2(int)
   __int32 setPlayerSpider(int)
   __int32 setPlayerStreak(int)
   __int32 setPlayerUserID(int)
   signed int tryResetAdTimer()
    unlockedPremium()
   int didExitPlayscene()
   int recountUserStats(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * resetAchievement(char const*)
   int resetCoinUnlocks()
   GameManager * resolutionForKey(int)
   signed int showInterstitial()
   int switchScreenMode(bool, bool)
   int unloadBackground()
   int loadVideoSettings()
   GameSoundManager * returnToLastScene(GJGameLevel*)
   __int32 setHasRatingPower(int)
   GameStatsManager * verifyCoinUnlocks()
   int verifyStarUnlocks()
   GameStatsManager * verifySyncedCoins()
   const char * addNewCustomObject(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
    claimItemsResponse(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
    eventUnlockFeature(char const*)
   int getIntGameVariable(char const*)
   signed int hasShownAdRecently()
   _DWORD * removeCustomObject(int)
   _DWORD * setIntGameVariable(char const*, int)
   _DWORD * toggleGameVariable(char const*)
   int rewardedVideoHidden()
   int setCustomObjectDict(cocos2d::CCDictionary*)
   int switchCustomObjects(int, int)
   MenuLayer * accountStatusChanged()
   _DWORD * completedAchievement(char const*)
   __int32 generateSecretNumber()
   signed int iconTypeToUnlockType(IconType)
   __int32 setPlayerDeathEffect(int)
   int setUnlockValueKeeper(cocos2d::CCDictionary*)
   int unlockTypeToIconType(int)
   GameManager * stringForCustomObject(int)
   int canShowRewardedVideoAd()
   int getNextUniqueObjectKey()
   int shouldShowInterstitial()
   int showInterstitialForced()
   AchievementManager * reportAchievementWithID(char const*, int, bool)
   int rewardedVideoAdFinished(int)
   int reportPercentageForLevel(int, int, bool)
   int syncPlatformAchievements()
   unsigned int verifyAchievementUnlocks()
   cocos2d::CCArray * getOrderedCustomObjectKeys()
   int rewardedVideoHiddenDelayed()
   _DWORD checkSteamAchievementUnlock()
   _DWORD applicationDidEnterBackground()
   GameManager * applicationWillEnterForeground()
   signed int init()
   int getUGV(char const*)
   void setUGV(char const*, bool)
   int update(float)
   _DWORD * iconKey(int, IconType)
   GameManager * colorKey(int, bool)
   int loadFont(int)
   _DWORD * lockIcon(int, IconType)
   GameToolbox * rateGame()
   unsigned int firstLoad()
   _DWORD * lockColor(int, bool)
   int reloadAll(bool, bool, bool)
   cocos2d::CCNode * GameManager()
   GameManager * ~GameManager()
   GameManager * getPlayerUDID() const
   virtual GameManager * ~GameManager()
   virtual int update(float)
   virtual signed int init(void)
   virtual int encodeDataTo(DS_Dictionary *)
   virtual _DWORD * dataLoaded(DS_Dictionary *)
   virtual unsigned int firstLoad(void)
}
class TutorialPopup : FLAlertLayer{
   cocos2d::CCAction * animateMenu()
   int closeTutorial(cocos2d::CCObject*)
   int keyBackClicked()
   int registerForCallback(void (cocos2d::CCObject::*)(cocos2d::CCObject*), cocos2d::CCNode*)
   signed int init(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCAction * show()
   cocos2d::CCLayerColor * create(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   TutorialPopup * ~TutorialPopup()
   virtual TutorialPopup * ~TutorialPopup()
   virtual int keyBackClicked(void)
   virtual cocos2d::CCAction * show(void)
}
class AchievementsLayer : GJDropDownLayer{
   int onNextPage(cocos2d::CCObject*)
   int onPrevPage(cocos2d::CCObject*)
   int customSetup()
   int setupPageInfo(int, int, int)
   int setupLevelBrowser(cocos2d::CCArray*)
   cocos2d::CCLayerColor * create()
   cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   int loadPage(int)
   cocos2d::CCLayerColor * AchievementsLayer()
   AchievementsLayer * ~AchievementsLayer()
   virtual AchievementsLayer * ~AchievementsLayer()
   virtual cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   virtual int customSetup(void)
}
class StatsObject : cocos2d::CCObject{
   signed int init(char const*, int)
   void * create(char const*, int)
   StatsObject * ~StatsObject()
   virtual StatsObject * ~StatsObject()
   virtual  type's name
}
class SongObject : cocos2d::CCObject{
   signed int init(int)
   void * create(int)
   SongObject * ~SongObject()
   virtual SongObject * ~SongObject()
   virtual   type's name
}
class LikeItemDelegate{
    likedItem(LikeItemType, int, bool)
   virtual  likedItem(LikeItemType,int,bool)
}
class UploadPopupDelegate{
    onClosePopup(UploadActionPopup*)
   virtual  onClosePopup(UploadActionPopup *)
}
class UploadActionDelegate{
    uploadActionFailed(int, int)
    uploadActionFinished(int, int)
   virtual  uploadActionFinished(int,int)
   virtual  uploadActionFailed(int,int)
   virtual  iptor
}
class CustomListView : BoomListView{
   cocos2d::CCLayer * getListCell(char const*)
   cocos2d::CCObject * create(cocos2d::CCArray*, float, float, int, BoomListType)
   int loadCell(TableViewCell*, int)
   int reloadAll()
   cocos2d::CCAction * setupList()
   cocos2d::CCLayer * CustomListView()
   CustomListView * ~CustomListView()
   virtual CustomListView * ~CustomListView()
   virtual cocos2d::CCAction * setupList(void)
   virtual cocos2d::CCLayer * getListCell(char const*)
   virtual int loadCell(TableViewCell *,int)
}
class AchievementCell : TableViewCell{
   _DWORD * loadFromDict(cocos2d::CCDictionary*)
   int updateBGColor(int)
   void draw()
   signed int init()
   int AchievementCell(char const*, float, float)
   AchievementCell * ~AchievementCell()
   virtual AchievementCell * ~AchievementCell()
   virtual signed int init(void)
   virtual void draw(void)
}
class LevelCell : TableViewCell{
   int loadFromLevel(GJGameLevel*)
   ProfilePage * onViewProfile(cocos2d::CCObject*)
   int updateBGColor(int)
   int loadLocalLevelCell()
   int loadCustomLevelCell()
   void draw()
   signed int init()
   cocos2d::CCLayer * create(float, float)
   __int64 onClick(cocos2d::CCObject*)
   cocos2d::CCLayer * LevelCell(char const*, float, float)
   LevelCell * ~LevelCell()
   virtual LevelCell * ~LevelCell()
   virtual signed int init(void)
   virtual void draw(void)
}
class MapPackCell : TableViewCell{
   int reloadCell()
   unsigned int onClaimReward(cocos2d::CCObject*)
   int updateBGColor(int)
   int loadFromMapPack(GJMapPack*)
   unsigned int playCompleteEffect()
   void draw()
   signed int init()
   _DWORD * onClick(cocos2d::CCObject*)
   cocos2d::CCLayer * MapPackCell(char const*, float, float)
   MapPackCell * ~MapPackCell()
   virtual MapPackCell * ~MapPackCell()
   virtual signed int init(void)
   virtual void draw(void)
}
class StatsCell : TableViewCell{
   int updateBGColor(int)
   int loadFromObject(StatsObject*)
   const char * getTitleFromKey(char const*)
   void draw()
   signed int init()
   cocos2d::CCLayer * StatsCell(char const*, float, float)
   StatsCell * ~StatsCell()
   virtual StatsCell * ~StatsCell()
   virtual signed int init(void)
   virtual void draw(void)
}
class SongCell : TableViewCell{
   int updateBGColor(int)
   int loadFromObject(SongObject*)
   void draw()
   signed int init()
   int onClick(cocos2d::CCObject*)
   int SongCell(char const*, float, float)
   SongCell * ~SongCell()
   virtual SongCell * ~SongCell()
   virtual signed int init(void)
   virtual void draw(void)
}
class CustomSongCell : TableViewCell{
   int updateBGColor(int)
   int loadFromObject(SongInfoObject*)
   void draw()
   signed int init()
   signed int onDelete(cocos2d::CCObject*)
   cocos2d::CCLayer * CustomSongCell(char const*, float, float)
   CustomSongCell * ~CustomSongCell()
   virtual CustomSongCell * ~CustomSongCell()
   virtual signed int init(void)
   virtual void draw(void)
}
class ArtistCell : TableViewCell{
   int onNewgrounds(cocos2d::CCObject*)
   int updateBGColor(int)
   _DWORD * loadFromObject(SongInfoObject*)
   void draw()
   signed int init()
   int onYouTube(cocos2d::CCObject*)
   cocos2d::CCLayer * ArtistCell(char const*, float, float)
   ArtistCell * ~ArtistCell()
   virtual ArtistCell * ~ArtistCell()
   virtual signed int init(void)
   virtual void draw(void)
}
class CommentCell : TableViewCell, LikeItemDelegate, FLAlertLayerProtocol{
   int onUndelete()
   int onGoToLevel(cocos2d::CCObject*)
   int onViewProfile(cocos2d::CCObject*)
   int updateBGColor(int)
   int incrementLikes()
   int FLAlert_Clicked(FLAlertLayer*, bool)
   cocos2d::CCMenu * loadFromComment(GJComment*)
   __int64 onConfirmDelete(cocos2d::CCObject*)
   int incrementDislikes()
   int updateLabelValues()
   void draw()
   signed int init()
   int onLike(cocos2d::CCObject*)
   int onDelete()
   cocos2d::CCMenu * onUnhide(cocos2d::CCObject*)
   int likedItem(LikeItemType, int, bool)
   cocos2d::CCLayer * CommentCell(char const*, float, float)
   TableViewCell * ~CommentCell()
   virtual TableViewCell * ~CommentCell()
   virtual signed int init(void)
   virtual void draw(void)
   virtual int likedItem(LikeItemType,int,bool)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
}
class GJScoreCell : TableViewCell, FLAlertLayerProtocol{
   int onMoreLevels(cocos2d::CCObject*)
   _DWORD * loadFromScore(GJUserScore*)
   int onViewProfile(cocos2d::CCObject*)
   int updateBGColor(int)
   int FLAlert_Clicked(FLAlertLayer*, bool)
   void draw()
   signed int init()
    onBan(cocos2d::CCObject*)
    onCheck(cocos2d::CCObject*)
   cocos2d::CCLayer * GJScoreCell(char const*, float, float)
   GJScoreCell * ~GJScoreCell()
   virtual GJScoreCell * ~GJScoreCell()
   virtual signed int init(void)
   virtual void draw(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
}
class GJLevelScoreCell : TableViewCell{
   _DWORD * loadFromScore(GJUserScore*)
   int onViewProfile(cocos2d::CCObject*)
   int updateBGColor(int)
   void draw()
   signed int init()
   cocos2d::CCLayer * GJLevelScoreCell(char const*, float, float)
   GJLevelScoreCell * ~GJLevelScoreCell()
   virtual GJLevelScoreCell * ~GJLevelScoreCell()
   virtual signed int init(void)
   virtual void draw(void)
}
class GJUserCell : TableViewCell, FLAlertLayerProtocol, UploadPopupDelegate, UploadActionDelegate{
   int onClosePopup(UploadActionPopup*)
   cocos2d::CCObject * loadFromScore(GJUserScore*)
   int onSendMessage(cocos2d::CCObject*)
   int onUnblockUser(cocos2d::CCObject*)
   int onViewProfile(cocos2d::CCObject*)
   int updateBGColor(int)
   int onRemoveFriend(cocos2d::CCObject*)
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int uploadActionFailed(int, int)
   int onViewFriendRequest(cocos2d::CCObject*)
   int uploadActionFinished(int, int)
   int onCancelFriendRequest(cocos2d::CCObject*)
   void draw()
   signed int init()
   cocos2d::CCLayer * GJUserCell(char const*, float, float)
   TableViewCell * ~GJUserCell()
   virtual TableViewCell * ~GJUserCell()
   virtual signed int init(void)
   virtual void draw(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual int uploadActionFinished(int,int)
   virtual int uploadActionFailed(int,int)
   virtual int onClosePopup(UploadActionPopup *)
}
class GJRequestCell : TableViewCell, FLAlertLayerProtocol, UploadPopupDelegate, UploadActionDelegate{
   int markAsRead()
   int onClosePopup(UploadActionPopup*)
   int updateToggle()
   int loadFromScore(GJUserScore*)
   int onViewProfile(cocos2d::CCObject*)
   int updateBGColor(int)
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int onDeleteRequest(cocos2d::CCObject*)
   int uploadActionFailed(int, int)
   int onViewFriendRequest(cocos2d::CCObject*)
   GJRequestCell * uploadActionFinished(int, int)
   void draw()
   signed int init()
   int onToggle(cocos2d::CCObject*)
   cocos2d::CCLayer * GJRequestCell(char const*, float, float)
   GJRequestCell * ~GJRequestCell()
   virtual GJRequestCell * ~GJRequestCell()
   virtual signed int init(void)
   virtual void draw(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual GJRequestCell * uploadActionFinished(int,int)
   virtual int uploadActionFailed(int,int)
   virtual int onClosePopup(UploadActionPopup *)
}
class GJMessageCell : TableViewCell, FLAlertLayerProtocol, UploadPopupDelegate, UploadActionDelegate{
   int markAsRead()
   int onClosePopup(UploadActionPopup*)
   int updateToggle()
   int onViewMessage(cocos2d::CCObject*)
   int onViewProfile(cocos2d::CCObject*)
   int updateBGColor(int)
   int FLAlert_Clicked(FLAlertLayer*, bool)
   _DWORD * loadFromMessage(GJUserMessage*)
   int onDeleteMessage(cocos2d::CCObject*)
   int uploadActionFailed(int, int)
   int uploadActionFinished(int, int)
   void draw()
   signed int init()
   int onToggle(cocos2d::CCObject*)
   cocos2d::CCLayer * GJMessageCell(char const*, float, float)
   GJMessageCell * ~GJMessageCell()
   virtual GJMessageCell * ~GJMessageCell()
   virtual signed int init(void)
   virtual void draw(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual int uploadActionFinished(int,int)
   virtual int uploadActionFailed(int,int)
   virtual int onClosePopup(UploadActionPopup *)
}
class AnimatedSpriteDelegate{
    animationFinished(char const*)
   virtual  animationFinished(char const*)
}
class PlayerObject : GameObject{
   int bumpPlayer(float, int)
   int buttonDown(PlayerButton)
   signed int isSafeFlip(float)
   signed int isSafeMode(float)
   cocos2d::CCAction * lockPlayer()
   int pushButton(PlayerButton)
   char * pushPlayer(float)
   int setOpacity(unsigned char)
   int setPortalP(cocos2d::CCPoint)
   int setVisible(bool)
   GameManager * updateJump(float)
   int yStartDown()
   int boostPlayer(float)
   __int64 flashPlayer(float, float, cocos2d::_ccColor3B, cocos2d::_ccColor3B)
   int flipGravity(bool, bool)
   int gravityDown()
   signed int resetObject()
   void resetStreak()
   int setPosition(cocos2d::CCPoint const&)
   int setRotation(float)
   int setupStreak()
   int spawnCircle()
   int stopDashing()
   signed int isBoostValid(float)
   int preCollision()
   int spawnCircle2()
   int startDashing(GameObject*)
   int stopRotation(bool)
   signed int getActiveMode()
   GameManager * levelFlipping()
   int levelWillFlip()
   _DWORD modeDidChange()
   int postCollision(float)
   int propellPlayer(float)
   int releaseButton(PlayerButton)
   signed int testForMoving(float, GameObject*)
   int toggleFlyMode(bool)
   int touchedObject(GameObject*)
   int updateCollide(bool, int)
   int updateDashArt()
   int updateSpecial(float)
   _DWORD * updateTimeMod(float)
   int activateStreak()
   __int64 copyAttributes(PlayerObject*)
   cocos2d::CCAction * fadeOutStreak2(float)
   int getOldPosition(float)
   int getOrientedBox()
   unsigned int getSecondColor()
   int incrementJumps()
   int setSecondColor(cocos2d::_ccColor3B const&)
   int spiderTestJump(bool)
   int storeCollision(bool, int)
   int switchedToMode(GameObjectType)
   int toggleBirdMode(bool)
   int toggleDartMode(bool)
   int toggleRollMode(bool)
   int updateRotation(float)
   int updateRotation(float, float)
   int addAllParticles()
   PlayerObject * getRealPosition()
   int hardFlipGravity()
   GameManager * playBurstEffect()
   int playDeathEffect()
   int playerDestroyed(bool)
   signed int playerIsFalling()
   int resetPlayerIcon()
   int runBallRotation(float)
   int runRotateAction(bool)
   int spawnDualCircle()
   int spawnFromPlayer(PlayerObject*)
   int stopBurstEffect()
   int toggleRobotMode(bool)
   int updateGlowColor()
   int deactivateStreak(bool)
   signed int isSafeSpiderFlip(float)
   int placeStreakPoint()
   int playerTeleported()
   int playingEndEffect()
   int runBallRotation2()
   int saveToCheckpoint(PlayerCheckpoint*)
   int spawnScaleCircle()
   signed int specialGroundHit()
   int toggleSpiderMode(bool)
   int toggleVisibility(bool)
   int updateCollideTop(float, int)
   int updatePlayerGlow()
   int addToTouchedRings(GameObject*)
   _DWORD * animationFinished(char const*)
   int collidedWithSlope(float, GameObject*, bool)
   signed int levelFlipFinished()
   signed int preSlopeCollision(float, GameObject*)
   unsigned int resetAllParticles()
   void resetCollisionLog()
   int resetTouchedRings()
   cocos2d::CCAction * runNormalRotation()
   int spawnPortalCircle(cocos2d::_ccColor3B, float)
   __int64 toggleGhostEffect(GhostType)
   int togglePlayerScale(bool)
   _DWORD * updatePlayerFrame(int)
   int updatePlayerScale()
   signed int collidedWithObject(float, GameObject*)
   signed int collidedWithObject(float, GameObject*, cocos2d::CCRect)
   int deactivateParticle()
   void loadFromCheckpoint(PlayerCheckpoint*)
   unsigned int removeAllParticles()
   int tryPlaceCheckpoint()
   int updateShipRotation(float)
   int resetStateVariables()
   int updateCollideBottom(float, int)
   cocos2d::CCSpriteFrameCache * updateDashAnimation()
   int updateJumpVariables()
   int updateSlopeRotation(float)
   int getModifiedSlopeYVel()
   int playDynamicSpiderRun()
   char * updateCheckpointMode(bool)
   float updateCheckpointTest()
    updateSlopeYVelocity(float)
   int updateStateVariables()
   signed int usingWallLimitedMode()
   int checkSnapJumpToObject(GameObject*)
   _DWORD * updatePlayerBirdFrame(int)
   _DWORD * updatePlayerDartFrame(int)
   _DWORD * updatePlayerRollFrame(int)
   _DWORD * updatePlayerShipFrame(int)
   int updateShipSpriteExtra(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   unsigned int updatePlayerRobotFrame(int)
   CheckpointObject * removePendingCheckpoint()
   unsigned int updatePlayerSpiderFrame(int)
   int updatePlayerSpriteExtra(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int convertToClosestRotation(float)
   _DWORD * updateRobotAnimationSpeed()
   signed int init(int, int, cocos2d::CCLayer*)
   cocos2d::CCSprite * create(int, int, cocos2d::CCLayer*)
   int update(float)
   signed int flipMod()
   int speedUp()
   signed int isFlying()
   int pushDown()
   int ringJump(GameObject*)
   int setColor(cocos2d::_ccColor3B const&)
   int setFlipX(bool)
   int setFlipY(bool)
   int setScale(float)
   int yStartUp()
   int gravityUp()
   int hitGround(bool)
   _DWORD logValues()
   int setScaleX(float)
   int setScaleY(float)
   int speedDown()
   cocos2d::CCSprite * PlayerObject()
   PlayerObject * ~PlayerObject()
   virtual PlayerObject * ~PlayerObject()
   virtual int update(float)
   virtual int setScaleX(float)
   virtual int setScaleY(float)
   virtual int setScale(float)
   virtual int setPosition(cocos2d::CCPoint const&)
   virtual int setVisible(bool)
   virtual int setRotation(float)
   virtual int setOpacity(uchar)
   virtual int setColor(cocos2d::_ccColor3B const&)
   virtual int setFlipX(bool)
   virtual int setFlipY(bool)
   virtual signed int resetObject(void)
   virtual PlayerObject * getRealPosition(void)
   virtual int getOrientedBox(void)
   virtual _DWORD * animationFinished(char const*)
}
class GameObject : CCSpritePlus{
   int addToGroup(int)
   int copyGroups(GameObject*)
   int createGlow(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int getGroupID(int)
   int getRScaleX()
   int getRScaleY()
   const void * groupColor(cocos2d::_ccColor3B const&, bool)
   int ignoreFade()
   cocos2d::CCObject * removeGlow()
   int setOpacity(unsigned char)
   int setRScaleX(float)
   int setRScaleY(float)
   int setVisible(bool)
   int commonSetup()
   signed int customSetup()
   int ignoreEnter()
   int resetObject()
   int setMyAction(cocos2d::CCAction*)
   int setPosition(cocos2d::CCPoint const&)
   int setRotation(float)
   int setStartPos(cocos2d::CCPoint)
   int updateState()
   _DWORD * addEmptyGlow()
   char * colorForMode(int, bool)
   int getBallFrame(int)
   char * getBoxOffset()
   _DWORD * getGlowFrame(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int getMainColor()
   signed int isFacingDown()
   int selectObject(cocos2d::_ccColor3B)
   int setGlowColor(cocos2d::_ccColor3B const&)
   int setupCoinArt()
   void addNewSlope01(bool)
   void addNewSlope02(bool)
   _BOOL4 canRotateFree()
   cocos2d::CCSprite * createWithKey(int)
   cocos2d::CCAction * destroyObject()
   int disableObject()
   _DWORD * getColorFrame(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int getColorIndex()
   int getObjectRect(float, float)
   int getObjectRect()
   int getParentMode()
   GameObject * getSaveString()
   char * getSectionIdx()
   _BOOL4 isColorObject()
   int powerOnObject()
   int setChildColor(cocos2d::_ccColor3B const&)
   int setSectionIdx(int const&)
   int setTempOffset(float, float)
   _BOOL4 shouldNotSave()
   int slopeFloorTop()
   int slopeWallLeft()
   int triggerObject(GJBaseGameLayer*)
   int activateObject()
   int addColorSprite()
   cocos2d::CCSprite * addCustomChild(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, cocos2d::CCPoint, int)
   signed int belongsToGroup(int)
   _DWORD * customScaleMod(char const*)
   int deselectObject()
   GameObject * getGroupString()
   int getObjectRect2(float, float)
   int getOrientedBox()
   signed int isBasicTrigger()
   signed int isColorTrigger()
   int powerOffObject()
   int setGlowOpacity(unsigned char)
   int * setObjectColor(cocos2d::_ccColor3B const&)
   int spawnXPosition()
   int updateStartPos()
   int addToColorGroup(int)
   int addToTempOffset(float, float)
   cocos2d::CCSprite * createWithFrame(char const*)
   int duplicateValues(GameObject*)
   char * getLastPosition()
   int getObjectRadius()
   int getObjectZLayer()
   int getObjectZOrder()
   GameObject * getRealPosition()
   int groupOpacityMod()
   int groupWasEnabled()
   int initWithTexture(cocos2d::CCTexture2D*)
   signed int isSpecialObject()
   int parentForZLayer(int, bool, int)
   int playShineEffect()
   int removeFromGroup(int)
   int setLastPosition(cocos2d::CCPoint const&)
   int setupSpriteSize()
   int updateMainColor(cocos2d::_ccColor3B const&)
   int updateMainColor()
   cocos2d::CCSprite * addInternalChild(cocos2d::CCSprite*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, cocos2d::CCPoint, int)
   int deactivateObject(bool)
   int getGroupDisabled()
   GJSpriteColor * getMainColorMode()
   char * getUpdateLastPos()
   int groupWasDisabled()
   int hasBeenActivated()
   cocos2d::CCSprite * objectFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool)
   GameObject * perspectiveFrame(char const*, int)
   __int32 saveActiveColors()
   int setMainColorMode(int)
   cocos2d::CCObject * setupColorSprite(int, bool)
   int setUpdateLastPos(bool const&)
   signed int shouldBlendColor(GJSpriteColor*, bool)
   int triggerActivated(float)
   int updateTextObject(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool)
   int activatedByPlayer(GameObject*)
   int addNewSlope01Glow(bool)
   int addNewSlope02Glow(bool)
   int addToOpacityGroup(int)
   int createSpriteColor(int)
   cocos2d::CCSprite * createWithTexture(cocos2d::CCTexture2D*)
   _DWORD * customObjectSetup(std::map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&)
   int getSecondaryColor()
   _BOOL4 hasSecondaryColor()
   int opacityModForMode(int, bool)
   int removeColorSprite()
   int updateCustomScale(float)
   int updateOrientedBox()
   int updateStartValues()
   int calculateSpawnXPos()
   _BOOL4 canChangeMainColor()
   cocos2d::CCActionInterval * createRotateAction(float, int)
   int duplicateColorMode(GameObject*)
   unsigned int editorColorForMode(int)
   GameObject * getOuterObjectRect()
   signed int isSpawnableTrigger()
   signed int isStoppableTrigger()
    reorderColorSprite()
   int resetGroupDisabled()
   GJSpriteColor * resetMainColorMode()
   int setObjectRectDirty(bool)
   int setupCoinAnimation()
   int setupCustomSprites()
   cocos2d::CCSprite * addCustomBlackChild(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, bool)
   int addCustomColorChild(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int duplicateAttributes(GameObject*)
   int quickUpdatePosition()
   int * updateParticleColor(cocos2d::_ccColor3B const&)
   cocos2d::CCSprite * addInternalGlowChild(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, cocos2d::CCPoint)
   int calculateOrientedBox()
   int canChangeCustomColor()
   cocos2d::CCObject * createAndAddParticle(int, char const*, int, cocos2d::tCCPositionType)
   int createGroupContainer(int)
   char * getObjectTextureRect()
   signed int ignoreEditorDuration()
   unsigned int loadGroupsFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int quickUpdatePosition2()
   int setOrientedRectDirty(bool)
   int updateSecondaryColor(cocos2d::_ccColor3B const&)
   int updateSecondaryColor()
   int waitingForActivation()
   int addMainSpriteToParent(bool)
   signed int canAllowMultiActivate()
   _BOOL4 dontCountTowardsLimit()
   char * getActiveColorForMode(int, bool)
   GJSpriteColor * getSecondaryColorMode()
   GameObject * perspectiveColorFrame(char const*, int)
   int setSecondaryColorMode(int)
   int updateSyncedAnimation(float)
   int addColorSpriteToParent(bool)
   int getRelativeSpriteColor(int)
   int canChangeSecondaryColor()
   void determineSlopeDirection()
   GJSpriteColor * resetSecondaryColorMode()
   int setDefaultMainColorMode(int)
   int updateObjectEditorColor()
   unsigned int editorColorForCustomMode(int)
   char * getDidUpdateLastPosition()
   int hasBeenActivatedByPlayer(GameObject*)
   signed int isEditorSpawnableTrigger()
   int setDidUpdateLastPosition(bool const&)
   int createColorGroupContainer(int)
   cocos2d::CCSprite * addInternalCustomColorChild(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, cocos2d::CCPoint, int)
   int createOpacityGroupContainer(int)
   int setDefaultSecondaryColorMode(int)
   int init(char const*)
   int update(float)
   void addGlow()
   int isFlipX()
   int isFlipY()
   int setType(GameObjectType)
   int setFlipX(bool)
   int setFlipY(bool)
   int setScale(float)
   signed int isTrigger()
   int setRScale(float)
   int setScaleX(float)
   int setScaleY(float)
   int slopeYPos(float)
   int slopeYPos(cocos2d::CCRect)
   int slopeYPos(GameObject*)
   cocos2d::CCSprite * GameObject()
   GameObject * ~GameObject()
   GameObject * getStartPos() const
   int getObjectRectDirty() const
   int getOrientedRectDirty() const
   int getType() const
   virtual GameObject * ~GameObject()
   virtual int update(float)
   virtual int setScaleX(float)
   virtual int setScaleY(float)
   virtual int setScale(float)
   virtual int setPosition(cocos2d::CCPoint const&)
   virtual int setVisible(bool)
   virtual int setRotation(float)
   virtual int setOpacity(uchar)
   virtual int initWithTexture(cocos2d::CCTexture2D *)
   virtual int setChildColor(cocos2d::_ccColor3B const&)
   virtual int setFlipX(bool)
   virtual int setFlipY(bool)
   virtual signed int customSetup(void)
   virtual int setupCustomSprites(void)
   virtual int addMainSpriteToParent(bool)
   virtual int resetObject(void)
   virtual int triggerObject(GJBaseGameLayer *)
   virtual int activateObject(void)
   virtual int deactivateObject(bool)
   virtual int getObjectRect(void)
   virtual int getObjectRect(float,float)
   virtual int getObjectRect2(float,float)
   virtual char * getObjectTextureRect(void)
   virtual GameObject * getRealPosition(void)
   virtual int setStartPos(cocos2d::CCPoint)
   virtual int updateStartValues(void)
   virtual _DWORD * customObjectSetup(std::map<std::string,std::string,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>> &)
   virtual GameObject * getSaveString(void)
   virtual int isFlipX(void)
   virtual int isFlipY(void)
   virtual int setRScaleX(float)
   virtual int setRScaleY(float)
   virtual int setRScale(float)
   virtual int getRScaleX(void)
   virtual int getRScaleY(void)
   virtual int calculateSpawnXPos(void)
   virtual int triggerActivated(float)
   virtual int powerOnObject(void)
   virtual int powerOffObject(void)
   virtual int * setObjectColor(cocos2d::_ccColor3B const&)
   virtual int setGlowColor(cocos2d::_ccColor3B const&)
   virtual int getOrientedBox(void)
   virtual int addToGroup(int)
   virtual int removeFromGroup(int)
   virtual int spawnXPosition(void)
   virtual int getObjectRectDirty(void)
   virtual int setObjectRectDirty(bool)
   virtual int getOrientedRectDirty(void)
   virtual int setOrientedRectDirty(bool)
   virtual int getType(void)
   virtual int setType(GameObjectType)
   virtual GameObject * getStartPos(void)
}
class GJSpriteColor : cocos2d::CCNode{
   int getColorMode()
   int setCustomColorMode(int)
   int setDefaultColorMode(int)
   int resetCustomColorMode()
   _DWORD init()
   void * create()
   GJSpriteColor * ~GJSpriteColor()
   virtual GJSpriteColor * ~GJSpriteColor()
   virtual _DWORD init(void)
}
class LevelSettingsDelegate{
    levelSettingsUpdated()
   virtual  levelSettingsUpdated(void)
}
class NodePoint : cocos2d::CCObject{
   signed int init(cocos2d::CCPoint)
   void * create(cocos2d::CCPoint)
   NodePoint * ~NodePoint()
   virtual NodePoint * ~NodePoint()
   virtual  o type's name
}
class ColorSelectDelegate{
    colorSelectClosed(cocos2d::CCNode*)
   virtual  colorSelectClosed(cocos2d::CCNode *)
}
class SelectArtDelegate{
    selectArtClosed(SelectArtLayer*)
   virtual  selectArtClosed(SelectArtLayer *)
}
class CustomSongLayerDelegate{
    customSongLayerClosed()
   virtual  customSongLayerClosed(void)
}
class DelayedSpawnNode : cocos2d::CCObject{
   signed int init()
   cocos2d::CCObject * create()
   DelayedSpawnNode * ~DelayedSpawnNode()
   virtual DelayedSpawnNode * ~DelayedSpawnNode()
   virtual  s name
}
class LevelEditorLayer : GJBaseGameLayer, LevelSettingsDelegate{
   int addSpecial(GameObject*)
   int addToGroup(GameObject*, int, bool)
   int getGridPos(cocos2d::CCPoint)
   cocos2d::CCDirector * onPlaytest()
   int toggleGrid(bool)
   signed int validGroup(GameObject*, bool)
   int flipGravity(PlayerObject*, bool, bool)
   int objectMoved(GameObject*)
   int shouldBlend(int)
   int timeForXPos(float)
   int updateColor(cocos2d::_ccColor3B, float, int, bool, float, cocos2d::_ccHSVValue, int, bool, int, EffectGameObject*)
   int xPosForTime(float)
   GameObject * createObject(int, cocos2d::CCPoint, bool)
   int handleAction(bool, cocos2d::CCArray*)
   int removeObject(GameObject*, bool)
   int spawnPlayer2()
   int toggleGround(bool)
   int updateGround(float)
   int addToRedoList(UndoObject*)
   int addToUndoList(UndoObject*, bool)
   _BOOL4 canPasteState()
   int enterDualMode(GameObject*, bool)
   int getAllObjects()
   LevelEditorLayer * getObjectRect(GameObject*, bool)
   int isLayerLocked(int)
   cocos2d::CCArray * objectsInRect(cocos2d::CCRect, bool)
   unsigned int removePlayer2()
   int removeSpecial(GameObject*)
   int updateOptions()
   int updateTimeMod(float, bool)
   int getLastObjectX()
   int * getLevelString()
   int getOtherPlayer(PlayerObject*)
   int getStickyGroup(int)
   cocos2d::CCDirector * onStopPlaytest()
   unsigned int recreateGroups()
   int redoLastAction()
   int runColorEffect(EffectGameObject*, int, float, float, bool)
   __int32 setObjectCount(int)
   int toggleDualMode(GameObject*, bool, PlayerObject*, bool)
   int undoLastAction()
   signed int checkCollisions(PlayerObject*, float)
   int copyObjectState(GameObject*)
   int dirtifyTriggers()
   int getSectionCount()
   cocos2d::CCObject * getTriggerGroup(int)
   FMOD::ChannelControl * onPausePlaytest()
   int pasteColorState(GameObject*, cocos2d::CCArray*)
   int * removeFromGroup(GameObject*, int)
   float setupLevelStart(LevelSettingsObject*)
   int switchToFlyMode(PlayerObject*, GameObject*, bool, int)
   _DWORD unlockAllLayers()
   int updateLevelFont(int)
   int createBackground()
   GameObject * objectAtPosition(cocos2d::CCPoint)
   GameSoundManager * onResumePlaytest()
   int removeAllObjects()
   int removeBackground()
   unsigned int sortStickyGroups()
   int switchToRollMode(PlayerObject*, GameObject*, bool)
   int toggleBackground(bool)
   float updateDualGround(PlayerObject*, int, bool)
   int updateEditorMode()
   int updateVisibility(float)
   int willSwitchToMode(int, PlayerObject*)
   cocos2d::CCDirector * createGroundLayer()
   int getNextFreeItemID(cocos2d::CCArray*)
   LevelEditorLayer * getRelativeOffset(GameObject*)
   cocos2d::CCArray * objectsAtPosition(cocos2d::CCPoint)
   int removeGroundLayer()
   __int64 resetObjectVector()
   int setStartPosObject(StartPosObject*)
   int spawnGroupPreview(int, float, float, float, float, float)
   int switchToRobotMode(PlayerObject*, GameObject*, bool)
   int updateBlendValues()
   int updateGameObjects()
   cocos2d::CCDirector * updateGroundWidth()
   _DWORD updateLevelColors()
   int getNextFreeBlockID(cocos2d::CCArray*)
   int getNextFreeGroupID(cocos2d::CCArray*)
   int groupStickyObjects(cocos2d::CCArray*)
   int pasteAtributeState(GameObject*, cocos2d::CCArray*)
   unsigned int resetMovingObjects()
   int resetToggledGroups()
   int switchToSpiderMode(PlayerObject*, GameObject*, bool)
   int toggleGroupPreview(int, bool)
   int updateBGAndGColors()
   cocos2d::CCSprite * addObjectFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   float animateInDualGround(GameObject*, float, bool)
   signed int getNextColorChannel()
   unsigned int stopTriggersInGroup(int, float)
   int updateToggledGroups()
   int breakApartTextObject(GameObject*)
   void * calculateColorValues(EffectGameObject*, EffectGameObject*, int, float, ColorActionSprite*, GJEffectManager*)
   _DWORD * levelSettingsUpdated()
   int playerWillSwitchMode(PlayerObject*, GameObject*)
   cocos2d::CCObject * triggerFollowCommand(EffectGameObject*)
   cocos2d::CCObject * triggerRotateCommand(EffectGameObject*)
   int typeExistsAtPosition(int, cocos2d::CCPoint, bool, bool, float)
   unsigned int ungroupStickyObjects(cocos2d::CCArray*)
   int updateGameObjectsNew()
   int activateTriggerEffect(EffectGameObject*, float, float, float)
   int assignNewStickyGroups(cocos2d::CCArray*)
   int sortBatchnodeChildren(float)
    toggleLockActiveLayer()
   __int64 transferDefaultColors(GJEffectManager*, GJEffectManager*)
   void * createObjectsFromSetup(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int removeAllObjectsOfType(int)
   int addRelatedStickyObjects(cocos2d::CCArray*)
   cocos2d::CCArray * createObjectsFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool)
   void resetEffectTriggerOptim(GameObject*, cocos2d::CCArray*)
    fastUpdateDisabledGroups()
    fullUpdateDisabledGroups()
   cocos2d::CCDictionary * processLoadedMoveActions()
   void resetUnusedColorChannels()
   void processMoveActionsStepOld()
   int rotationForSlopeNearObject(GameObject*)
   __int64 triggerPlayerFollowCommand(EffectGameObject*)
   int addObjectsRecursiveFromArray(cocos2d::CCArray*, int)
   int resetToggledGroupsAndObjects()
   void draw()
   GameManager * init(GJGameLevel*)
   AppDelegate * scene(GJGameLevel*)
   int create(GJGameLevel*)
   int update(float)
   int hasAction(bool)
   GameSoundManager * playMusic()
   cocos2d::CCLayer * LevelEditorLayer()
   LevelEditorLayer * ~LevelEditorLayer()
   virtual LevelEditorLayer * ~LevelEditorLayer()
   virtual int update(float)
   virtual void draw(void)
   virtual int updateColor(cocos2d::_ccColor3B,float,int,bool,float,cocos2d::_ccHSVValue,int,bool,int,EffectGameObject *)
   virtual int flipGravity(PlayerObject *,bool,bool)
   virtual void * calculateColorValues(EffectGameObject *,EffectGameObject *,int,float,ColorActionSprite *,GJEffectManager *)
   virtual int addToGroup(GameObject *,int,bool)
   virtual int * removeFromGroup(GameObject *,int)
   virtual int timeForXPos(float)
   virtual int xPosForTime(float)
   virtual _DWORD * levelSettingsUpdated(void)
}
class UndoObject : cocos2d::CCObject{
   int setObjects(cocos2d::CCArray*)
   _DWORD * createWithArray(cocos2d::CCArray*, UndoCommand)
   signed int initWithTransformObjects(cocos2d::CCArray*, UndoCommand)
   _DWORD * createWithTransformObjects(cocos2d::CCArray*, UndoCommand)
   signed int init(GameObject*, UndoCommand)
   signed int init(cocos2d::CCArray*, UndoCommand)
   _DWORD * create(GameObject*, UndoCommand)
   UndoObject * ~UndoObject()
   virtual UndoObject * ~UndoObject()
}
class GameObjectCopy : cocos2d::CCObject{
   int resetObject()
   signed int init(GameObject*)
   void * create(GameObject*)
   cocos2d::CCObject * ~GameObjectCopy()
   virtual cocos2d::CCObject * ~GameObjectCopy()
}
class DrawGridLayer : cocos2d::CCLayer{
   int addToGuides(GameObject*)
   int timeForXPos(float)
   int xPosForTime(float)
   int addToEffects(EffectGameObject*)
   int addPlayerPoint(cocos2d::CCPoint)
   int addPlayer2Point(cocos2d::CCPoint, bool)
   DrawGridLayer * getPortalMinMax(GameObject*)
   void * loadTimeMarkers(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int * removeFromGuides(GameObject*)
   void sortSpeedObjects()
   int addToSpeedObjects(GameObject*)
   int clearPlayerPoints()
   int * removeFromEffects(EffectGameObject*)
   _DWORD * updateTimeMarkers()
   int updateMusicGuideTime(float)
   int * removeFromSpeedObjects(GameObject*)
   void draw()
   cocos2d::CCArray * init(cocos2d::CCNode*, LevelEditorLayer*)
   cocos2d::CCLayer * create(cocos2d::CCNode*, LevelEditorLayer*)
   int update(float)
   cocos2d::CCLayer * DrawGridLayer()
   DrawGridLayer * ~DrawGridLayer()
   virtual DrawGridLayer * ~DrawGridLayer()
   virtual int update(float)
   virtual void draw(void)
}
class LevelSettingsObject : cocos2d::CCNode{
   int offsetMusic()
   LevelSettingsObject * getSaveString()
   cocos2d::CCNode * objectFromDict(cocos2d::CCDictionary*)
   cocos2d::CCNode * objectFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   ColorAction * setupColorsFromLegacyMode(cocos2d::CCDictionary*)
   GJEffectManager * init()
   cocos2d::CCNode * create()
   cocos2d::CCNode * ~LevelSettingsObject()
   virtual cocos2d::CCNode * ~LevelSettingsObject()
   virtual GJEffectManager * init(void)
}
class LevelSettingsLayer : FLAlertLayer, ColorSelectDelegate, SelectArtDelegate, FLAlertLayerProtocol, CustomSongLayerDelegate{
   int onDualMode(cocos2d::CCObject*)
   int onLiveEdit(cocos2d::CCObject*)
   int onMiniMode(cocos2d::CCObject*)
   int onSongMode(cocos2d::CCObject*)
   _DWORD * selectSong(int)
   int showPicker(int, ColorAction*)
   int onSelectFont(cocos2d::CCObject*)
   unsigned int onSelectMode(cocos2d::CCObject*)
   int audioPrevious(cocos2d::CCObject*)
   unsigned int onSelectSpeed(cocos2d::CCObject*)
   int keyBackClicked()
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int onTwoPlayerMode(cocos2d::CCObject*)
   LevelEditorLayer * selectArtClosed(SelectArtLayer*)
   int onGravityFlipped(cocos2d::CCObject*)
   int onOpenCustomSong(cocos2d::CCObject*)
   _DWORD * updateAudioLabel()
   int colorSelectClosed(cocos2d::CCNode*)
   int updateColorSprite(ColorChannelSprite*)
   cocos2d::CCLabelBMFont * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint)
   int updateColorSprites()
   _DWORD * onTwoPlayerModeInfo(cocos2d::CCObject*)
   int showCustomSongSelect()
   int customSongLayerClosed()
   int registerWithTouchDispatcher()
   int onG(cocos2d::CCObject*)
   cocos2d::CCDirector * init(LevelSettingsObject*, LevelEditorLayer*)
   int onBG(cocos2d::CCObject*)
   int onG2(cocos2d::CCObject*)
   int onCol(cocos2d::CCObject*)
   int onObj(cocos2d::CCObject*)
   cocos2d::CCLabelBMFont * create(LevelSettingsObject*, LevelEditorLayer*)
   int onGArt(cocos2d::CCObject*)
   int onLine(cocos2d::CCObject*)
   int onBGArt(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   int on3DLine(cocos2d::CCObject*)
   int audioNext(cocos2d::CCObject*)
   cocos2d::CCLayerColor * LevelSettingsLayer()
   LevelSettingsLayer * ~LevelSettingsLayer()
   virtual LevelSettingsLayer * ~LevelSettingsLayer()
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual int colorSelectClosed(cocos2d::CCNode *)
   virtual int customSongLayerClosed(void)
   virtual LevelEditorLayer * selectArtClosed(SelectArtLayer *)
}
class SelectArtLayer : FLAlertLayer{
   int keyBackClicked()
   unsigned int onSelectCustom(cocos2d::CCObject*)
   int updateSelectedCustom(int)
   cocos2d::CCDirector * init(SelectArtType)
   cocos2d::CCLayerColor * create(SelectArtType)
   int onClose(cocos2d::CCObject*)
   unsigned int selectArt(cocos2d::CCObject*)
   SelectArtLayer * ~SelectArtLayer()
   virtual SelectArtLayer * ~SelectArtLayer()
   virtual int keyBackClicked(void)
}
class GJRotationControlDelegate{
    angleChanged(float)
    angleChangeBegin()
    angleChangeEnded()
   virtual  angleChanged(float)
   virtual  angleChangeBegin(void)
   virtual  angleChangeEnded(void)
}
class GJScaleControlDelegate{
    scaleChanged(float)
    scaleChangeBegin()
    scaleChangeEnded()
   virtual  scaleChanged(float)
   virtual  scaleChangeBegin(void)
   virtual  scaleChangeEnded(void)
}
class MusicDownloadDelegate{
    songStateChanged()
    downloadSongFailed(int, GJSongError)
    loadSongInfoFailed(int, GJSongError)
    downloadSongFinished(SongInfoObject*)
    loadSongInfoFinished(SongInfoObject*)
   virtual  loadSongInfoFinished(SongInfoObject *)
   virtual  loadSongInfoFailed(int,GJSongError)
   virtual  downloadSongFinished(SongInfoObject *)
   virtual  downloadSongFailed(int,GJSongError)
   virtual  songStateChanged(void)
}
class cocos2d::CCInteger : cocos2d::CCObject{
   int acceptVisitor(cocos2d::CCDataVisitor&)
   cocos2d::CCObject * create(int)
   cocos2d::CCInteger * ~CCInteger()
   virtual cocos2d::CCInteger * ~CCInteger()
   virtual int acceptVisitor(cocos2d::CCDataVisitor &)
}
class CreateMenuItem : CCMenuItemSpriteExtra{
   int init(cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   cocos2d::CCNodeRGBA * create(cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   CCMenuItemSpriteExtra * ~CreateMenuItem()
   virtual CCMenuItemSpriteExtra * ~CreateMenuItem()
}
class EditorUI : cocos2d::CCLayer, FLAlertLayerProtocol, ColorSelectDelegate, GJRotationControlDelegate, GJScaleControlDelegate, MusicDownloadDelegate{
   void createGlow()
   int editObject(cocos2d::CCObject*)
   cocos2d::CCObject * getModeBtn(char const*, int)
   void moveObject(GameObject*, cocos2d::CCPoint)
   int onPlayback(cocos2d::CCObject*)
   int onPlaytest(cocos2d::CCObject*)
   int onSettings(cocos2d::CCObject*)
   int shouldSnap(GameObject*)
   unsigned int toggleMode(cocos2d::CCObject*)
   int toggleSnap(cocos2d::CCObject*)
   int updateZoom(float)
   int applyOffset(GameObject*)
   int * copyObjects(cocos2d::CCArray*)
   _DWORD * deselectAll()
   int editObject2(cocos2d::CCObject*)
   int onCopyState(cocos2d::CCObject*)
   __int32 onDeleteAll(cocos2d::CCObject*)
   int onDuplicate(cocos2d::CCObject*)
   int onGoToLayer(cocos2d::CCObject*)
   int onGroupDown(cocos2d::CCObject*)
    onLockLayer(cocos2d::CCObject*)
   int scrollWheel(float, float)
   _DWORD * toggleSwipe(cocos2d::CCObject*)
   int alignObjects(cocos2d::CCArray*, bool)
   int angleChanged(float)
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   GameManager * ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int deleteObject(GameObject*, bool)
   int * enableButton(CreateMenuItem*)
   unsigned int flipObjectsX(cocos2d::CCArray*)
   unsigned int flipObjectsY(cocos2d::CCArray*)
   cocos2d::CCObject * getCreateBtn(int, int)
   EditorUI * offsetForKey(int)
   __int64 onDeleteInfo(cocos2d::CCObject*)
   int onPasteColor(cocos2d::CCObject*)
   int onPasteState(cocos2d::CCObject*)
   cocos2d::CCArray * pasteObjects(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int removeOffset(GameObject*)
   unsigned int scaleChanged(float)
   unsigned int scaleObjects(cocos2d::CCArray*, float, cocos2d::CCPoint)
   cocos2d::CCAction * selectObject(GameObject*, bool)
   int showMaxError()
   int updateSlider()
   int * disableButton(CreateMenuItem*)
   signed int edgeForObject(int, int)
   int getTouchPoint(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int moveGamelayer(cocos2d::CCPoint)
   _DWORD * onDeselectAll(cocos2d::CCObject*)
   int onGroupSticky(cocos2d::CCObject*)
   int onToggleGuide(cocos2d::CCObject*)
   unsigned int rotateObjects(cocos2d::CCArray*, float, cocos2d::CCPoint)
   int selectObjects(cocos2d::CCArray*, bool)
   int setupEditMenu()
   int sliderChanged(cocos2d::CCObject*)
   int updateButtons()
   int valueFromXPos(float)
   int xPosFromValue(float)
   cocos2d::CCDirector * zoomGameLayer(bool)
   int createMoveMenu()
   int createRockBase()
   int deselectObject(GameObject*)
   int deselectObject()
   unsigned int findSnapObject(cocos2d::CCPoint, float)
   unsigned int findSnapObject(cocos2d::CCArray*, float)
   EditorUI * getGroupCenter(cocos2d::CCArray*, bool)
   int keyBackClicked()
   int moveForCommand(EditCommand)
   int moveObjectCall(EditCommand)
   int moveObjectCall(cocos2d::CCObject*)
   unsigned int onCreateButton(cocos2d::CCObject*)
   int onCreateObject(int)
   int onStopPlaytest(cocos2d::CCObject*)
   int redoLastAction(cocos2d::CCObject*)
   void replaceGroupID(GameObject*, int, int)
   int selectBuildTab(int)
   _DWORD * toggleFreeMove(cocos2d::CCObject*)
   int undoLastAction(cocos2d::CCObject*)
   int updateEditMenu()
   int addSnapPosition(cocos2d::CCPoint)
   int clickOnPosition(cocos2d::CCPoint)
   int createRockEdges()
   __int32 FLAlert_Clicked(FLAlertLayer*, bool)
   int getCycledObject(cocos2d::CCArray*, bool)
   cocos2d::CCObject * getSimpleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), cocos2d::CCMenu*)
   cocos2d::CCObject * getSpriteButton(char const*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), cocos2d::CCMenu*, float)
   cocos2d::CCObject * getSpriteButton(char const*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), cocos2d::CCMenu*, float, int, cocos2d::CCPoint)
   cocos2d::CCObject * getSpriteButton(cocos2d::CCSprite*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), cocos2d::CCMenu*, float, int, cocos2d::CCPoint)
   int onGoToBaseLayer(cocos2d::CCObject*)
   _DWORD * onNewCustomItem(cocos2d::CCObject*)
   int onUngroupSticky(cocos2d::CCObject*)
   int playtestStopped()
   int * setupCreateMenu()
   int setupDeleteMenu()
   int transformObject(GameObject*, EditCommand, bool)
   int angleChangeBegin()
   int angleChangeEnded()
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int editButtonUsable()
   int onDeleteSelected(cocos2d::CCObject*)
   int onDeleteStartPos(cocos2d::CCObject*)
   int onSelectBuildTab(cocos2d::CCObject*)
   GameManager * playerTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   unsigned int playerTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int scaleChangeBegin()
   int scaleChangeEnded()
   int showMaxCoinError()
   int songStateChanged()
   int triggerSwipeMode()
   int * updateCreateMenu(bool)
   int updateDeleteMenu()
   int colorSelectClosed(cocos2d::_ccColor3B)
   int colorSelectClosed(cocos2d::CCNode*)
   cocos2d::CCArray * createCustomItems()
   int createRockOutline()
   int editButton2Usable()
   int getGridSnappedPos(cocos2d::CCPoint)
   EditorUI * getRelativeOffset(GameObject*)
   int orderUpCustomItem(cocos2d::CCObject*)
   cocos2d::CCMenu * reloadCustomItems()
   __int64 showMaxBasicError()
   int toggleGuideButton()
   int updateGroupIDBtn2()
   int updatePlaybackBtn()
   int applySpecialOffset(cocos2d::CCPoint, GameObject*, cocos2d::CCPoint)
   int dynamicGroupUpdate(bool)
   int getLimitedPosition(cocos2d::CCPoint)
   cocos2d::CCArray * getSelectedObjects()
   int onDeleteCustomItem(cocos2d::CCObject*)
   int recreateButtonTabs()
   int rotationforCommand(EditCommand)
   signed int shouldDeleteObject(GameObject*)
   unsigned int toggleEnableRotate(cocos2d::CCObject*)
   signed int updateGridNodeSize(int)
   signed int updateGridNodeSize()
   int updateGroupIDLabel()
   int updateScaleControl()
   GameObject * createEdgeForObject(GameObject*, int)
   cocos2d::CCArray * editorLayerForArray(cocos2d::CCArray*, bool)
   signed int isSpecialSnapObject(int)
   int liveEditColorUsable()
   int orderDownCustomItem(cocos2d::CCObject*)
   signed int positionIsInSnapped(cocos2d::CCPoint)
   void selectObjectsInRect(cocos2d::CCRect)
   int setStoredUndoObject(UndoObject*)
   DrawGridLayer * transformObjectCall(EditCommand)
   DrawGridLayer * transformObjectCall(cocos2d::CCObject*)
   int updateDeleteButtons()
   _DWORD * activateScaleControl(cocos2d::CCObject*)
   ColorSelectLiveOverlay * closeLiveColorSelect()
   int onDeleteSelectedType(cocos2d::CCObject*)
   int onUpdateDeleteFilter(cocos2d::CCObject*)
   int processSelectObjects(cocos2d::CCArray*)
   int toggleStickyControls(bool)
   DrawGridLayer * tryUpdateTimeMarkers()
   int changeSelectedObjects(cocos2d::CCArray*, bool)
   cocos2d::CCArray * deselectTargetPortals()
   EditorUI * positionWithoutOffset(GameObject*)
   _DWORD setupTransformControl()
   int toggleDuplicateButton()
   _DWORD * toggleObjectInfoLabel()
   _DWORD * updateObjectInfoLabel()
   _DWORD createUndoSelectObject(bool)
   _DWORD * deactivateScaleControl()
   _DWORD * selectAllWithDirection(bool)
   __int64 showDeleteConfirmation()
   int toggleEditObjectButton()
   int activateRotationControl(cocos2d::CCObject*)
   cocos2d::CCNodeRGBA * getCreateMenuItemButton(cocos2d::CCSprite*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), cocos2d::CCMenu*, float, int, cocos2d::CCPoint)
   int updateSpecialUIElements()
   int isLiveColorSelectTrigger(GameObject*)
   cocos2d::CCNodeRGBA * menuItemFromObjectString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int)
   unsigned int toggleSpecialEditButtons()
   int deactivateRotationControl()
   unsigned int repositionObjectsToCenter(cocos2d::CCArray*, cocos2d::CCPoint, bool)
   int constrainGameLayerPosition(float, float)
   int constrainGameLayerPosition()
   int showLiveColorSelectForMode(int)
   int registerWithTouchDispatcher()
   __int64 draw()
   signed int init(LevelEditorLayer*)
   unsigned int keyUp(cocos2d::enumKeyCodes)
   _DWORD create(LevelEditorLayer*)
   int onCopy(cocos2d::CCObject*)
   int showUI(bool)
   cocos2d::CCDirector * zoomIn(cocos2d::CCObject*)
   int getXMin(int)
   cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   int onPaste(cocos2d::CCObject*)
   int onPause(cocos2d::CCObject*)
   unsigned int resetUI()
   cocos2d::CCDirector * zoomOut(cocos2d::CCObject*)
   unsigned int onCreate()
   __int64 onDelete(cocos2d::CCObject*)
   GameManager * editColor(cocos2d::CCObject*)
   int editGroup(cocos2d::CCObject*)
   cocos2d::CCObject * getButton(char const*, int, void (cocos2d::CCObject::*)(cocos2d::CCObject*), cocos2d::CCMenu*)
   int onGroupUp(cocos2d::CCObject*)
   _DWORD * selectAll()
   cocos2d::CCLayer * EditorUI()
   EditorUI * ~EditorUI()
   virtual EditorUI * ~EditorUI()
   virtual __int64 draw(void)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual GameManager * ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   virtual __int32 FLAlert_Clicked(FLAlertLayer *,bool)
   virtual int songStateChanged(void)
   virtual int colorSelectClosed(cocos2d::CCNode *)
   virtual unsigned int keyUp(cocos2d::enumKeyCodes)
   virtual int scrollWheel(float,float)
   virtual int angleChangeBegin(void)
   virtual int angleChangeEnded(void)
   virtual int angleChanged(float)
   virtual int scaleChangeBegin(void)
   virtual int scaleChangeEnded(void)
   virtual unsigned int scaleChanged(float)
}
class GJRotationControl : cocos2d::CCLayer{
   int finishTouch()
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int updateSliderPosition(cocos2d::CCPoint)
   void draw()
   signed int init()
   cocos2d::CCLayer * create()
   int setAngle(float)
   cocos2d::CCLayer * GJRotationControl()
   GJRotationControl * ~GJRotationControl()
   virtual GJRotationControl * ~GJRotationControl()
   virtual signed int init(void)
   virtual void draw(void)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
}
class GJScaleControl : cocos2d::CCLayer{
   int loadValues(GameObject*, cocos2d::CCArray*)
   int finishTouch()
   int updateLabel(float)
   int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int sliderChanged(cocos2d::CCObject*)
   int scaleFromValue(float)
   int valueFromScale(float)
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   signed int init()
   cocos2d::CCLayer * create()
   GJScaleControl * ~GJScaleControl()
   virtual GJScaleControl * ~GJScaleControl()
   virtual signed int init(void)
   virtual int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
}
class GameEffectsManager : cocos2d::CCNode{
   int scaleParticle(cocos2d::CCParticleSystemQuad*, float)
    addParticleEffect(cocos2d::CCParticleSystemQuad*, int)
   signed int init(PlayLayer*)
   cocos2d::CCNode * create(PlayLayer*)
   GameEffectsManager * ~GameEffectsManager()
   virtual GameEffectsManager * ~GameEffectsManager()
}
class PauseLayer : CCBlockLayer{
   int customSetup()
   _DWORD * onAutoRetry(cocos2d::CCObject*)
   int onNormalMode(cocos2d::CCObject*)
   int onProgressBar(cocos2d::CCObject*)
   char * tryShowBanner(float)
   int keyBackClicked()
   int onPracticeMode(cocos2d::CCObject*)
   int onRecordReplays(cocos2d::CCObject*)
   int sfxSliderChanged(cocos2d::CCObject*)
   _DWORD * onAutoCheckpoints(cocos2d::CCObject*)
   int setupProgressBars()
   int createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint)
   int musicSliderChanged(cocos2d::CCObject*)
   cocos2d::CCDirector * init(bool)
   int keyUp(cocos2d::enumKeyCodes)
   cocos2d::CCLayerColor * create(bool)
   signed int goEdit()
   cocos2d::CCAction * onEdit(cocos2d::CCObject*)
   int onHelp(cocos2d::CCObject*)
   __int64 onQuit(cocos2d::CCObject*)
   int onTime(cocos2d::CCObject*)
   int keyDown(cocos2d::enumKeyCodes)
   int onResume(cocos2d::CCObject*)
   int onRestart(cocos2d::CCObject*)
   cocos2d::CCLayerColor * PauseLayer()
   PauseLayer * ~PauseLayer()
   virtual PauseLayer * ~PauseLayer()
   virtual int keyBackClicked(void)
   virtual int keyDown(cocos2d::enumKeyCodes)
   virtual int customSetup(void)
   virtual int keyUp(cocos2d::enumKeyCodes)
}
class MenuGameLayer : cocos2d::CCLayer{
   unsigned int getBGColor(int)
   int resetPlayer()
   unsigned int updateColor(float)
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   unsigned int updateColors()
   int destroyPlayer()
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int registerWithTouchDispatcher()
   signed int init()
   cocos2d::CCLayer * create()
   unsigned int update(float)
   int tryJump(float)
   cocos2d::CCLayer * MenuGameLayer()
   MenuGameLayer * ~MenuGameLayer()
   virtual MenuGameLayer * ~MenuGameLayer()
   virtual unsigned int update(float)
   virtual signed int init(void)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
}
class cocos2d::CCSceneTransitionDelegate{
    sceneWillResume()
   virtual  sceneWillResume(void)
}
class CreatorLayer : cocos2d::CCLayer, cocos2d::CCSceneTransitionDelegate, DialogDelegate{
   int onMapPacks(cocos2d::CCObject*)
   signed int onMyLevels(cocos2d::CCObject*)
   int onChallenge(cocos2d::CCObject*)
   int onGauntlets(cocos2d::CCObject*)
   int dialogClosed(DialogLayer*)
   signed int onDailyLevel(cocos2d::CCObject*)
   int onFameLevels(cocos2d::CCObject*)
   signed int onSavedLevels(cocos2d::CCObject*)
   _DWORD * onSecretVault(cocos2d::CCObject*)
   int onWeeklyLevel(cocos2d::CCObject*)
   signed int keyBackClicked()
   signed int onLeaderboards(cocos2d::CCObject*)
   signed int onOnlineLevels(cocos2d::CCObject*)
   _DWORD * onTreasureRoom(cocos2d::CCObject*)
   int sceneWillResume()
   signed int onFeaturedLevels(cocos2d::CCObject*)
   _DWORD * onOnlyFullVersion(cocos2d::CCObject*)
   signed int canPlayOnlineLevels()
   GameManager * init()
   int scene()
   cocos2d::CCLayer * create()
   signed int onBack(cocos2d::CCObject*)
   CreatorLayer * ~CreatorLayer()
   virtual CreatorLayer * ~CreatorLayer()
   virtual GameManager * init(void)
   virtual signed int keyBackClicked(void)
   virtual int sceneWillResume(void)
   virtual int dialogClosed(DialogLayer *)
}
class MyLevelsLayer : cocos2d::CCLayer{
   signed int keyBackClicked()
   int setupLevelBrowser()
   signed int init()
   signed int onNew(cocos2d::CCObject*)
   AppDelegate * scene()
   cocos2d::CCLayer * create()
   signed int onBack(cocos2d::CCObject*)
   MyLevelsLayer * ~MyLevelsLayer()
   virtual MyLevelsLayer * ~MyLevelsLayer()
   virtual signed int init(void)
   virtual signed int keyBackClicked(void)
}
class TextInputDelegate{
    textChanged(CCTextInputNode*)
   signed int allowTextInput(CCTextInputNode*)
    textInputClosed(CCTextInputNode*)
    textInputOpened(CCTextInputNode*)
    textInputReturn(CCTextInputNode*)
    textInputShouldOffset(CCTextInputNode*, float)
   virtual  textChanged(CCTextInputNode *)
   virtual  textInputOpened(CCTextInputNode *)
   virtual  textInputClosed(CCTextInputNode *)
   virtual  textInputShouldOffset(CCTextInputNode *,float)
   virtual  textInputReturn(CCTextInputNode *)
   virtual signed int allowTextInput(CCTextInputNode *)
}
class DemonFilterDelegate{
    demonFilterSelectClosed(int)
   virtual  demonFilterSelectClosed(int)
}
class SearchButton : cocos2d::CCSprite{
   int init(char const*, char const*, float, char const*)
   cocos2d::CCSprite * create(char const*, char const*, float, char const*)
   SearchButton * ~SearchButton()
   virtual SearchButton * ~SearchButton()
}
class LevelSearchLayer : cocos2d::CCLayer, TextInputDelegate, FLAlertLayerProtocol, DemonFilterDelegate{
   int getDiffKey(int)
   int getTimeKey(int)
   _DWORD * onFollowed(cocos2d::CCObject*)
   _DWORD * onTrending(cocos2d::CCObject*)
   _DWORD * toggleStar(cocos2d::CCObject*)
   __int64 toggleTime(cocos2d::CCObject*)
   _DWORD * onMostLikes(cocos2d::CCObject*)
   _DWORD * onStarAward(cocos2d::CCObject*)
   _DWORD * textChanged(CCTextInputNode*)
   _DWORD * clearFilters()
   _DWORD * onMostRecent(cocos2d::CCObject*)
   _DWORD * onSearchUser(cocos2d::CCObject*)
   _DWORD * onLatestStars(cocos2d::CCObject*)
   int onMoreOptions(cocos2d::CCObject*)
   void toggleTimeNum(int, bool)
   LevelSearchLayer * getLevelLenKey()
   signed int keyBackClicked()
   int onSpecialDemon(cocos2d::CCObject*)
   _DWORD * FLAlert_Clicked(FLAlertLayer*, bool)
   cocos2d::CCNode * getSearchObject(SearchType, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * textInputClosed(CCTextInputNode*)
   _DWORD * textInputOpened(CCTextInputNode*)
   LevelSearchLayer * getSearchDiffKey()
   _DWORD * onMostDownloaded(cocos2d::CCObject*)
   void toggleDifficulty(cocos2d::CCObject*)
   int updateSearchLabel(char const*)
   __int64 confirmClearFilters(cocos2d::CCObject*)
   void toggleDifficultyNum(int, bool)
   _DWORD * demonFilterSelectClosed(int)
   GameManager * init()
   AppDelegate * scene()
   cocos2d::CCLayer * create()
   signed int onBack(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   _DWORD * onMagic(cocos2d::CCObject*)
   _DWORD * onSearch(cocos2d::CCObject*)
   int checkDiff(int)
   int checkTime(int)
   _DWORD * onFriends(cocos2d::CCObject*)
   LevelSearchLayer * ~LevelSearchLayer()
   virtual LevelSearchLayer * ~LevelSearchLayer()
   virtual GameManager * init(void)
   virtual signed int keyBackClicked(void)
   virtual _DWORD * textInputOpened(CCTextInputNode *)
   virtual _DWORD * textInputClosed(CCTextInputNode *)
   virtual _DWORD * textChanged(CCTextInputNode *)
   virtual _DWORD * FLAlert_Clicked(FLAlertLayer *,bool)
   virtual _DWORD * demonFilterSelectClosed(int)
}
class MoreSearchLayer : FLAlertLayer, TextInputDelegate{
   _DWORD * onFeatured(cocos2d::CCObject*)
   _DWORD * onFollowed(cocos2d::CCObject*)
   _DWORD * onOriginal(cocos2d::CCObject*)
   _DWORD * onSongMode(cocos2d::CCObject*)
   _DWORD * selectSong(int)
   _DWORD * onCompleted(cocos2d::CCObject*)
   _DWORD * onTwoPlayer(cocos2d::CCObject*)
   unsigned int onSongFilter(cocos2d::CCObject*)
   _DWORD * audioPrevious(cocos2d::CCObject*)
   _DWORD * onUncompleted(cocos2d::CCObject*)
   int keyBackClicked()
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   unsigned int toggleSongNodes(bool, bool)
   _DWORD * updateAudioLabel()
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint)
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   signed int init()
   cocos2d::CCLayerColor * create()
   _DWORD * onEpic(cocos2d::CCObject*)
   __int64 onInfo(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   _DWORD * onCoins(cocos2d::CCObject*)
   _DWORD * onNoStar(cocos2d::CCObject*)
   _DWORD * audioNext(cocos2d::CCObject*)
   _DWORD * onFriends(cocos2d::CCObject*)
   MoreSearchLayer * ~MoreSearchLayer()
   virtual MoreSearchLayer * ~MoreSearchLayer()
   virtual signed int init(void)
   virtual int keyBackClicked(void)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class DemonFilterSelectLayer : FLAlertLayer{
   unsigned int selectRating(cocos2d::CCObject*)
   int keyBackClicked()
   cocos2d::CCDirector * init()
   cocos2d::CCLayerColor * create()
   int onClose(cocos2d::CCObject*)
   DemonFilterSelectLayer * ~DemonFilterSelectLayer()
   virtual DemonFilterSelectLayer * ~DemonFilterSelectLayer()
   virtual cocos2d::CCDirector * init(void)
   virtual int keyBackClicked(void)
}
class LevelDownloadDelegate{
    levelDownloadFailed(int)
    levelDownloadFinished(GJGameLevel*)
   virtual  levelDownloadFinished(GJGameLevel *)
   virtual  levelDownloadFailed(int)
}
class LevelUpdateDelegate{
    levelUpdateFailed(int)
    levelUpdateFinished(GJGameLevel*, UpdateResponse)
   virtual  levelUpdateFinished(GJGameLevel *,UpdateResponse)
   virtual  levelUpdateFailed(int)
}
class RateLevelDelegate{
    rateLevelClosed()
   virtual  rateLevelClosed(void)
}
class LevelDeleteDelegate{
    levelDeleteFailed(int)
    levelDeleteFinished(int)
   virtual  levelDeleteFinished(int)
   virtual  levelDeleteFailed(int)
}
class NumberInputDelegate{
    numberInputClosed(NumberInputLayer*)
   virtual  numberInputClosed(NumberInputLayer *)
}
class SetIDPopupDelegate{
    setIDPopupClosed(SetIDPopup*, int)
   virtual  setIDPopupClosed(SetIDPopup *,int)
}
class LevelInfoLayer : cocos2d::CCLayer, LevelDownloadDelegate, LevelUpdateDelegate, RateLevelDelegate, LikeItemDelegate, FLAlertLayerProtocol, LevelDeleteDelegate, NumberInputDelegate, SetIDPopupDelegate{
   int onFavorite(cocos2d::CCObject*)
    onFeatured(cocos2d::CCObject*)
   _DWORD * onLevelInfo(cocos2d::CCObject*)
   int onRateDemon(cocos2d::CCObject*)
   int onRateStars(cocos2d::CCObject*)
   int onSetFolder(cocos2d::CCObject*)
   int confirmClone(cocos2d::CCObject*)
   _DWORD * onPlayReplay(cocos2d::CCObject*)
   __int64 confirmDelete(cocos2d::CCObject*)
   int downloadLevel()
   int onOwnerDelete(cocos2d::CCObject*)
   int onViewProfile(cocos2d::CCObject*)
   __int64 tryCloneLevel(cocos2d::CCObject*)
   int incrementLikes()
   signed int keyBackClicked()
   int onRateStarsMod(cocos2d::CCObject*)
   int setupLevelInfo()
   GameLevelManager * FLAlert_Clicked(FLAlertLayer*, bool)
   int onLowDetailMode(cocos2d::CCObject*)
   int rateLevelClosed()
   __int64 showSongWarning()
   __int64 showUpdateAlert(UpdateResponse)
   __int64 confirmMoveToTop(cocos2d::CCObject*)
   int setIDPopupClosed(SetIDPopup*, int)
   int incrementDislikes()
   int levelDeleteFailed(int)
   int levelUpdateFailed(int)
   _DWORD * numberInputClosed(NumberInputLayer*)
   _DWORD * setupProgressBars()
   int updateLabelValues()
   GameLevelManager * updateSideButtons()
   __int64 confirmOwnerDelete(cocos2d::CCObject*)
   int onLevelLeaderboard(cocos2d::CCObject*)
   __int64 confirmMoveToBottom(cocos2d::CCObject*)
   int levelDeleteFinished(int)
   __int64 levelDownloadFailed(int)
   int levelUpdateFinished(GJGameLevel*, UpdateResponse)
   signed int shouldDownloadLevel()
   int levelDownloadFinished(GJGameLevel*)
   signed int init(GJGameLevel*)
   AppDelegate * scene(GJGameLevel*)
   cocos2d::CCLayer * create(GJGameLevel*)
   signed int onBack(cocos2d::CCObject*)
   int onInfo(cocos2d::CCObject*)
   int onLike(cocos2d::CCObject*)
   cocos2d::CCAction * onPlay(cocos2d::CCObject*)
   int onRate(cocos2d::CCObject*)
   cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   void onClone(cocos2d::CCObject*)
   int onDelete(cocos2d::CCObject*)
   int onGarage(cocos2d::CCObject*)
   int onUpdate(cocos2d::CCObject*)
   int likedItem(LikeItemType, int, bool)
   LevelInfoLayer * playStep2()
   signed int playStep3()
   signed int tryShowAd()
   cocos2d::CCLayer * LevelInfoLayer()
   LevelInfoLayer * ~LevelInfoLayer()
   virtual LevelInfoLayer * ~LevelInfoLayer()
   virtual signed int keyBackClicked(void)
   virtual cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   virtual _DWORD * numberInputClosed(NumberInputLayer *)
   virtual int levelDownloadFinished(GJGameLevel *)
   virtual __int64 levelDownloadFailed(int)
   virtual int levelUpdateFinished(GJGameLevel *,UpdateResponse)
   virtual int levelUpdateFailed(int)
   virtual int levelDeleteFinished(int)
   virtual int levelDeleteFailed(int)
   virtual int rateLevelClosed(void)
   virtual int likedItem(LikeItemType,int,bool)
   virtual GameLevelManager * FLAlert_Clicked(FLAlertLayer *,bool)
   virtual int setIDPopupClosed(SetIDPopup *,int)
}
class EditLevelLayer : cocos2d::CCLayer, TextInputDelegate, FLAlertLayerProtocol, UploadActionDelegate, UploadPopupDelegate, SetIDPopupDelegate{
   _DWORD * onLevelInfo(cocos2d::CCObject*)
   int onMoveToTop()
   int onSetFolder(cocos2d::CCObject*)
   _DWORD * textChanged(CCTextInputNode*)
   __int64 confirmClone(cocos2d::CCObject*)
   int onClosePopup(UploadActionPopup*)
   __int64 confirmDelete(cocos2d::CCObject*)
   int keyBackClicked()
   _DWORD * setupLevelInfo()
   int updateDescText(char const*)
   unsigned int closeTextInputs()
   EditLevelLayer * FLAlert_Clicked(FLAlertLayer*, bool)
   int onLowDetailMode(cocos2d::CCObject*)
   _DWORD * textInputClosed(CCTextInputNode*)
   _DWORD * textInputOpened(CCTextInputNode*)
   LocalLevelManager * verifyLevelName()
   __int64 confirmMoveToTop(cocos2d::CCObject*)
   int setIDPopupClosed(SetIDPopup*, int)
   int uploadActionFailed(int, int)
   __int64 onUpdateDescription(cocos2d::CCObject*)
   int uploadActionFinished(int, int)
   signed int init(GJGameLevel*)
   AppDelegate * scene(GJGameLevel*)
   cocos2d::CCLayer * create(GJGameLevel*)
   int onBack(cocos2d::CCObject*)
   int onEdit(cocos2d::CCObject*)
   __int64 onHelp(cocos2d::CCObject*)
   cocos2d::CCAction * onPlay(cocos2d::CCObject*)
   signed int onTest(cocos2d::CCObject*)
   cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   _DWORD * onClone()
   int onShare(cocos2d::CCObject*)
   int onDelete()
   EditLevelLayer * playStep2()
   signed int playStep3()
   cocos2d::CCLayer * EditLevelLayer()
   EditLevelLayer * ~EditLevelLayer()
   virtual EditLevelLayer * ~EditLevelLayer()
   virtual int keyBackClicked(void)
   virtual cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   virtual int setIDPopupClosed(SetIDPopup *,int)
   virtual EditLevelLayer * FLAlert_Clicked(FLAlertLayer *,bool)
   virtual _DWORD * textInputOpened(CCTextInputNode *)
   virtual _DWORD * textInputClosed(CCTextInputNode *)
   virtual _DWORD * textChanged(CCTextInputNode *)
   virtual int uploadActionFinished(int,int)
   virtual int uploadActionFailed(int,int)
   virtual int onClosePopup(UploadActionPopup *)
}
class LevelUploadDelegate{
    levelUploadFailed(GJGameLevel*)
    levelUploadFinished(GJGameLevel*)
   virtual  levelUploadFinished(GJGameLevel *)
   virtual  levelUploadFailed(GJGameLevel *)
   virtual  riptor
}
class ShareLevelLayer : FLAlertLayer{
   int onSettings(cocos2d::CCObject*)
   int setupStars()
   int selectRating(cocos2d::CCObject*)
   cocos2d::CCObject * getStarsButton(int, void (cocos2d::CCObject::*)(cocos2d::CCObject*), cocos2d::CCMenu*, float)
   int keyBackClicked()
   cocos2d::CCDirector * init(GJGameLevel*)
   cocos2d::CCLayerColor * create(GJGameLevel*)
   int onClose(cocos2d::CCObject*)
   int onShare(cocos2d::CCObject*)
   ShareLevelLayer * ~ShareLevelLayer()
   virtual ShareLevelLayer * ~ShareLevelLayer()
   virtual int keyBackClicked(void)
}
class UploadPopup : FLAlertLayer, LevelUploadDelegate{
   int keyBackClicked()
   GameManager * onReturnToLevel(cocos2d::CCObject*)
   int levelUploadFailed(GJGameLevel*)
   int levelUploadFinished(GJGameLevel*)
   cocos2d::CCDirector * init(GJGameLevel*)
   int show()
   cocos2d::CCLayerColor * create(GJGameLevel*)
   signed int onBack(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   UploadPopup * ~UploadPopup()
   virtual UploadPopup * ~UploadPopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int levelUploadFinished(GJGameLevel *)
   virtual int levelUploadFailed(GJGameLevel *)
}
class ShareLevelSettingsLayer : FLAlertLayer, NumberInputDelegate{
   int onCopyable(cocos2d::CCObject*)
   int onPassword(cocos2d::CCObject*)
   int onUnlisted(cocos2d::CCObject*)
   int keyBackClicked()
   int onEditPassword(cocos2d::CCObject*)
   int numberInputClosed(NumberInputLayer*)
   int updateSettingsState()
   cocos2d::CCDirector * init(GJGameLevel*)
   cocos2d::CCLayerColor * create(GJGameLevel*)
   int onClose(cocos2d::CCObject*)
   ShareLevelSettingsLayer * ~ShareLevelSettingsLayer()
   virtual ShareLevelSettingsLayer * ~ShareLevelSettingsLayer()
   virtual int keyBackClicked(void)
   virtual int numberInputClosed(NumberInputLayer *)
}
class LevelManagerDelegate{
    setupPageInfo(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
    loadLevelsFailed(char const*)
    loadLevelsFinished(cocos2d::CCArray*, char const*)
   virtual  loadLevelsFinished(cocos2d::CCArray *,char const*)
   virtual  loadLevelsFailed(char const*)
   virtual  setupPageInfo(std::string,char const*)
}
class SetTextPopupDelegate{
    setTextPopupClosed(SetTextPopup*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   virtual  setTextPopupClosed(SetTextPopup *,std::string)
}
class LevelBrowserLayer : cocos2d::CCLayer, LevelManagerDelegate, FLAlertLayerProtocol, SetIDPopupDelegate, SetTextPopupDelegate{
   int onGoToPage(cocos2d::CCObject*)
   _DWORD * onNextPage(cocos2d::CCObject*)
   _DWORD * onPrevPage(cocos2d::CCObject*)
   __int64 onDeleteAll(cocos2d::CCObject*)
   signed int onFavorites(cocos2d::CCObject*)
   int onGoToFolder(cocos2d::CCObject*)
   int onClearSearch(cocos2d::CCObject*)
   unsigned int setupPageInfo(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
   signed int keyBackClicked()
   _DWORD * onGoToLastPage(cocos2d::CCObject*)
   signed int FLAlert_Clicked(FLAlertLayer*, bool)
   int setSearchObject(GJSearchObject*)
   int updatePageLabel()
   int loadLevelsFailed(char const*)
   _DWORD * onMyOnlineLevels(cocos2d::CCObject*)
   GameManager * setIDPopupClosed(SetIDPopup*, int)
   _DWORD * setupLevelBrowser(cocos2d::CCArray*)
   int updateLevelsLabel()
   int loadLevelsFinished(cocos2d::CCArray*, char const*)
   LevelBrowserLayer * setTextPopupClosed(SetTextPopup*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   __int64 onRemoveAllFavorites(cocos2d::CCObject*)
   cocos2d::CCArray * getLevelMatchingSearch(cocos2d::CCArray*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
    onEnterTransitionDidFinish()
   signed int init(GJSearchObject*)
   signed int onNew(cocos2d::CCObject*)
   AppDelegate * scene(GJSearchObject*)
   cocos2d::CCLayer * create(GJSearchObject*)
   signed int onBack(cocos2d::CCObject*)
   __int64 onInfo(cocos2d::CCObject*)
   cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   void * onEnter()
   signed int onSaved(cocos2d::CCObject*)
   _DWORD * loadPage(GJSearchObject*)
   int onSearch(cocos2d::CCObject*)
   int isCorrect(char const*)
   GJSearchObject * onRefresh(cocos2d::CCObject*)
   cocos2d::CCLayer * LevelBrowserLayer()
   LevelBrowserLayer * ~LevelBrowserLayer()
   virtual LevelBrowserLayer * ~LevelBrowserLayer()
   virtual void * onEnter(void)
   virtual  onEnterTransitionDidFinish(void)
   virtual signed int keyBackClicked(void)
   virtual cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   virtual int loadLevelsFinished(cocos2d::CCArray *,char const*)
   virtual int loadLevelsFailed(char const*)
   virtual unsigned int setupPageInfo(std::string,char const*)
   virtual LevelBrowserLayer * setTextPopupClosed(SetTextPopup *,std::string)
   virtual signed int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual GameManager * setIDPopupClosed(SetIDPopup *,int)
}
class cocos2d::extension::CCHttpRequest : cocos2d::CCObject{
   cocos2d::extension::CCHttpRequest * CCHttpRequest()
   cocos2d::extension::CCHttpRequest * ~CCHttpRequest()
   virtual cocos2d::extension::CCHttpRequest * ~CCHttpRequest()
}
class GameLevelManager : cocos2d::CCNode{
   int dataLoaded(DS_Dictionary*)
   int firstSetup()
   void followUser(int)
   int getDailyID(bool)
   int getDescKey(int)
   int getDiffKey(int)
   int getDiffVal(int)
   __int64 handleItND(cocos2d::CCNode*, void*)
   int isDLActive(char const*)
   _DWORD * setDiffVal(int, bool)
   int * deleteLevel(GJGameLevel*)
   int getLevelKey(int)
   _DWORD * getMapPacks(GJSearchObject*)
   void * getPageInfo(char const*)
   cocos2d::CCString * getTimeLeft(char const*, float)
   _DWORD * getUserList(UserListType)
   signed int isTimeValid(char const*, float)
   int keyHasTimer(char const*)
   _DWORD * reportLevel(int)
   _DWORD * saveMapPack(GJMapPack*)
   int sharedState()
   signed int unblockUser(int)
   int updateLevel(GJGameLevel*)
   __int64 uploadLevel(GJGameLevel*)
   int encodeDataTo(DS_Dictionary*)
   _DWORD * getGauntlets()
   signed int getGJRewards(int)
   int getIntForKey(char const*)
   int * getLengthStr(bool, bool, bool, bool, bool)
   int getMainLevel(int, bool)
   int getReportKey(int)
   int hasLikedItem(LikeItemType, int, bool, int)
   signed int removeFriend(int)
   _DWORD * restoreItems()
   _DWORD * saveGauntlet(GJMapPack*)
   _DWORD * setIntForKey(int, char const*)
   _DWORD * unfollowUser(int)
   _DWORD * addDLToActive(char const*)
   cocos2d::CCNode * deleteComment(int, CommentType, int)
   _DWORD * downloadLevel(int, bool)
   int getBoolForKey(char const*)
   int getCommentKey(int, int, int, bool)
   int getDailyTimer(bool)
   GameLevelManager * getFolderName(int, bool)
   _DWORD * getGJUserInfo(int)
   int getLocalLevel(int)
   int getMapPackKey(int)
   int getMessageKey(int)
   cocos2d::CCArray * getSavedLevel(int)
   cocos2d::CCArray * getSavedLevel(GJGameLevel*)
   int getTopArtists(int, int)
   _DWORD * gotoLevelPage(GJGameLevel*)
   int hasRatedDemon(int)
   signed int isUpdateValid(int)
   _DWORD * makeTimeStamp(char const*)
   _DWORD * setBoolForKey(bool, char const*)
   int setFolderName(int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool)
   int setLevelStars(int, int, bool)
   int setMainLevels(cocos2d::CCDictionary*)
   int storeUserInfo(GJUserScore*)
   void storeUserName(int, int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCNode * uploadComment(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, CommentType, int, int)
   cocos2d::CCNode * createNewLevel()
   GameLevelManager * createPageInfo(int, int, int)
   int getGauntletKey(int)
   int getLikeItemKey(LikeItemType, int, bool, int)
   int getMessagesKey(bool, int)
   cocos2d::CCArray * getSavedLevels(bool, int)
   LevelBrowserLayer * getSearchScene(char const*)
   int getUserInfoKey(int)
   void resetAllTimers()
   void resetGauntlets()
   cocos2d::CCDictionary * responseToDict(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool)
   unsigned int storeUserNames(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * submitUserInfo()
   signed int getGJChallenges()
   _DWORD * getOnlineLevels(GJSearchObject*)
   int getRateStarsKey(int)
   int getSavedMapPack(int)
   _DWORD * getUserMessages(bool, int, int)
   int handleItDelayed(bool, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, GJHttpType)
   int isFollowingUser(int)
   int likeFromLikeKey(char const*)
   _DWORD * markItemAsLiked(LikeItemType, int, bool, int)
   int setSettingsDict(cocos2d::CCDictionary*)
   int typeFromLikeKey(char const*)
   int updateUsernames()
   _DWORD * updateUserScore()
   int getActiveDailyID(bool)
   int * getDifficultyStr(bool, bool, bool, bool, bool, bool, bool, bool)
   _DWORD * getLevelComments(int, int, int, int, bool)
   _DWORD * getLevelSaveData()
   int * getNextLevelName(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int getSavedGauntlet(int)
   int getTopArtistsKey(int)
   int hasReportedLevel(int)
   unsigned int limitSavedLevels()
   int parseRestoreData(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * resetTimerForKey(char const*)
   _DWORD setLevelFeatured(int, int, bool)
   int storeUserMessage(GJUserMessage*)
   GameStatsManager * verifyLevelState(GJGameLevel*)
   cocos2d::CCNode * deleteServerLevel(int)
   cocos2d::CCDictionary * getAllUsedSongIDs()
   GameLevelManager * getBasePostString(bool)
   _DWORD * getFriendRequests(bool, int, int)
   _DWORD * getGauntletLevels(int)
   int getPostCommentKey(int)
   int getStoredUserList(UserListType)
   int itemIDFromLikeKey(char const*)
   int * messageWasRemoved(int, bool)
   void purgeUnusedLevels()
   int readFriendRequest(int)
   signed int requestUserAccess()
   unsigned int saveFetchedLevels(cocos2d::CCArray*)
   int setLikedItemsDict(cocos2d::CCDictionary*)
   GameLevelManager * storeSearchResult(cocos2d::CCArray*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
   signed int suggestLevelStars(int, int, bool)
   signed int updateDescription(int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int updateLevelOrders()
   cocos2d::CCNode * uploadUserMessage(int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   GameLevelManager * userNameForUserID(int)
   int accountIDForUserID(int)
   _BOOL4 areGauntletsLoaded()
   unsigned int cleanupDailyLevels()
   cocos2d::CCArray * createAndGetLevels(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCArray * createAndGetScores(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, GJScoreType)
   cocos2d::CCNode * deleteLevelComment(int, int)
   cocos2d::CCArray * deleteUserMessages(GJUserMessage*, cocos2d::CCArray*, bool)
   _DWORD * getAccountComments(int, int, int)
   cocos2d::CCArray * getCompletedLevels(bool)
   int getSavedDailyLevel(int)
   int getSplitIntFromKey(char const*, int)
   int hasDownloadedLevel(int)
   int hasRatedLevelStars(int)
   _DWORD * invalidateMessages(bool, bool)
   _DWORD * invalidateRequests(bool, bool)
   int invalidateUserList(UserListType, bool)
   _DWORD * onBanUserCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int pageFromCommentKey(char const*)
   int ProcessHttpRequest(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, GJHttpType)
   _DWORD * removeDLFromActive(char const*)
   unsigned int removeUserFromList(int, UserListType)
   int setFolderNamesDict(cocos2d::CCDictionary*)
   int setRatedDemonsDict(cocos2d::CCDictionary*)
   int setRatedLevelsDict(cocos2d::CCDictionary*)
   int setSavedLevelsDict(cocos2d::CCDictionary*)
   int specialFromLikeKey(char const*)
   int storeFriendRequest(GJFriendRequest*)
   int typeFromCommentKey(char const*)
   GameStatsManager * updateLevelRewards(GJGameLevel*)
   __int64 uploadLevelComment(int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int)
   int userIDForAccountID(int)
   signed int acceptFriendRequest(int, int)
   _DWORD * downloadUserMessage(int, bool)
   int getDeleteCommentKey(int, int, int)
   int getDeleteMessageKey(int, bool)
   int getFriendRequestKey(bool, int)
   int getLevelDownloadKey(int, bool)
   int getLevelLeaderboard(GJGameLevel*, LevelLeaderboardType)
   int getLowestLevelOrder()
   int getUploadMessageKey(int)
   int hasLikedAccountItem(LikeItemType, int, bool, int)
   _DWORD * markLevelAsReported(int)
   _DWORD * onGetUsersCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   GameStatsManager * onLikeItemCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   void resetStoredUserInfo(int)
   void resetStoredUserList(UserListType)
   unsigned int saveFetchedMapPacks(cocos2d::CCArray*)
   _DWORD * storeCommentsResult(cocos2d::CCArray*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
   signed int uploadFriendRequest(int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCArray * createAndGetMapPacks(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCNode * deleteAccountComment(int)
   int deleteFriendRequests(int, cocos2d::CCArray*, bool)
   int getAccountCommentKey(int, int)
   GameLevelManager * getGauntletSearchKey(int)
   signed int getGJDailyLevelState(bool)
   int getHighestLevelOrder()
   _DWORD * getLeaderboardScores(char const*)
   int getStoredUserMessage(int)
   unsigned int onBlockUserCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onRateDemonCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   void * onRateStarsCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   size_t removeDelimiterChars(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool)
   _DWORD * resetAccountComments(int)
   int resetDailyLevelState(bool)
   int setFollowedUsersDict(cocos2d::CCDictionary*)
   int storeDailyLevelState(int, int, bool)
   __int64 uploadAccountComment(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int userInfoForAccountID(int)
   GameLevelManager * getBasePostStringFull()
   int getLikeAccountItemKey(LikeItemType, int, bool, int)
   int getSavedGauntletLevel(int)
   int getStoredOnlineLevels(char const*)
   signed int hasLikedItemFullCheck(LikeItemType, int, int)
   int levelIDFromCommentKey(char const*)
   _DWORD * markLevelAsDownloaded(int)
   int markLevelAsRatedDemon(int)
   _DWORD * markLevelAsRatedStars(int)
   int setReportedLevelsDict(cocos2d::CCDictionary*)
   int storeUserMessageReply(int, GJUserMessage*)
   int getLevelLeaderboardKey(int, LevelLeaderboardType)
   int getStoredLevelComments(char const*)
   _DWORD * onGetMapPacksCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onGetUserListCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onReportLevelCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   unsigned int onUnblockUserCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onUpdateLevelCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onUploadLevelCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int deleteSentFriendRequest(int)
   int * friendRequestWasRemoved(int, bool)
   int hasDailyStateBeenLoaded(bool)
   _DWORD * onGetGauntletsCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onGetGJRewardsCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   unsigned int onRemoveFriendCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onRestoreItemsCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int setDownloadedLevelsDict(cocos2d::CCDictionary*)
   int setSavedDailyLevelsDict(cocos2d::CCDictionary*)
   cocos2d::CCArray * createAndGetCommentsFull(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, bool)
   _DWORD * onDeleteCommentCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onDownloadLevelCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onGetGJUserInfoCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onGetTopArtistsCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onSetLevelStarsCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onUploadCommentCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCArray * createAndGetLevelComments(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int)
   int getStoredUserMessageReply(int)
   int levelIDFromPostCommentKey(char const*)
   _DWORD * onSubmitUserInfoCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int setFolderNamesCreatedDict(cocos2d::CCDictionary*)
   int friendRequestFromAccountID(int)
   _DWORD * onGetGJChallengesCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onGetOnlineLevelsCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onGetUserMessagesCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onUpdateUserScoreCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int setSavedGauntletLevelsDict(cocos2d::CCDictionary*)
   cocos2d::CCArray * createAndGetAccountComments(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int)
   _DWORD * onGetLevelCommentsCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onGetLevelSaveDataCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onSetLevelFeaturedCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onDeleteServerLevelCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onGetFriendRequestsCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onReadFriendRequestCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   GameManager * onRequestUserAccessCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onSuggestLevelStarsCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onUpdateDescriptionCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onUploadUserMessageCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int resetCommentTimersForLevelID(int, bool)
   int getSavedDailyLevelFromLevelID(int)
   _DWORD * onDeleteUserMessagesCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onGetAccountCommentsCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onProcessHttpRequestCompleted(cocos2d::extension::CCHttpClient*, cocos2d::extension::CCHttpResponse*)
   int onAcceptFriendRequestCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onDeleteFriendRequestCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onDownloadUserMessageCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onGetLevelLeaderboardCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onUploadFriendRequestCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int ongetGJDailyLevelStateCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onGetLeaderboardScoresCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * processOnDownloadLevelCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool)
   void * removeLevelDownloadedKeysFromDict(cocos2d::CCDictionary*)
   signed int init()
   _DWORD banUser(int)
   _DWORD * getUsers(GJSearchObject*)
   int handleIt(bool, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, GJHttpType)
   _DWORD * likeItem(LikeItemType, int, bool, int)
   signed int blockUser(int)
   int getLenKey(int)
   int getLenVal(int)
   signed int rateDemon(int, int, bool)
   _DWORD * rateStars(int, int)
   _DWORD * saveLevel(GJGameLevel*)
   _DWORD * setLenVal(int, bool)
   cocos2d::CCNode * GameLevelManager()
   GameLevelManager * ~GameLevelManager()
   virtual GameLevelManager * ~GameLevelManager()
   virtual signed int init(void)
}
class GJGameLevel : cocos2d::CCNode{
   int dataLoaded(DS_Dictionary*)
   int getCoinKey(int)
   __int32 setDailyID(int)
   __int32 setLevelID(int)
   int * getSongName()
   __int32 setAttempts(int)
   __int32 setPassword(int)
   signed int getLengthKey(int)
   __int32 setAccountID(int)
   int * setLevelName(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   __int32 unverifyCoins()
   int savePercentage(int, bool, int, int, bool)
   __int32 setAttemptTime(int)
   GJGameLevel * createWithCoder(DS_Dictionary*)
   int encodeWithCoder(DS_Dictionary*)
   int * levelWasAltered()
   signed int areCoinsVerified()
   GJGameLevel * getAudioFileName()
   int getNormalPercent()
   __int32 setCoinsVerified(int)
   int setLastBuildSave(cocos2d::CCDictionary*)
   __int32 setNormalPercent(int)
   GJGameLevel * lengthKeyToString(int)
   int levelWasSubmitted()
   int * setCapacityString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   __int32 handleStatsConflict(GJGameLevel*)
   __int32 setNewNormalPercent(int)
   int getAverageDifficulty()
   __int32 setNewNormalPercent2(int)
   signed int demonIconForDifficulty(DemonDifficultyType)
   int getLastBuildPageForTab(int)
   _DWORD * setLastBuildPageForTab(int, int)
   int * getUnpackedLevelDescription()
   signed int init()
   cocos2d::CCNode * create(cocos2d::CCDictionary*, bool)
   cocos2d::CCNode * create()
   __int32 setDemon(int)
   __int32 setJumps(int)
   __int32 setStars(int)
   signed int canEncode()
   __int32 setClicks(int)
   cocos2d::CCNode * GJGameLevel()
   GJGameLevel * ~GJGameLevel()
   GJGameLevel * getLevelName() const
   virtual GJGameLevel * ~GJGameLevel()
   virtual int encodeWithCoder(DS_Dictionary *)
   virtual signed int canEncode(void)
   virtual signed int init(void)
}
class GJMapPack : cocos2d::CCNode{
   int completedMaps()
   void parsePackColors(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int parsePackLevels(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCArray * hasCompletedMapPack()
   signed int init()
   cocos2d::CCObject * create(cocos2d::CCDictionary*)
   cocos2d::CCObject * create()
   cocos2d::CCArray * totalMaps()
   cocos2d::CCNode * GJMapPack()
   GJMapPack * ~GJMapPack()
   virtual GJMapPack * ~GJMapPack()
   virtual signed int init(void)
}
class GJUserScore : cocos2d::CCNode{
   _BOOL4 isCurrentUser()
   int mergeWithScore(GJUserScore*)
   signed int init()
   cocos2d::CCNode * create(cocos2d::CCDictionary*)
   cocos2d::CCNode * create()
   cocos2d::CCNode * GJUserScore()
   GJUserScore * ~GJUserScore()
   virtual GJUserScore * ~GJUserScore()
   virtual signed int init(void)
}
class GJFriendRequest : cocos2d::CCNode{
   _DWORD init()
   cocos2d::CCNode * create(cocos2d::CCDictionary*)
   cocos2d::CCNode * create()
   GJFriendRequest * ~GJFriendRequest()
   virtual GJFriendRequest * ~GJFriendRequest()
   virtual _DWORD init(void)
}
class GJUserMessage : cocos2d::CCNode{
   int init()
   cocos2d::CCNode * create(cocos2d::CCDictionary*)
   cocos2d::CCNode * create()
   GJUserMessage * ~GJUserMessage()
   virtual GJUserMessage * ~GJUserMessage()
   virtual int init(void)
}
class GJSearchObject : cocos2d::CCNode{
   int getSearchKey(SearchType, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, bool, bool, bool, int, bool, bool, bool, bool, bool, bool, bool, bool, int, int)
   cocos2d::CCNode * createFromKey(char const*)
   cocos2d::CCNode * getPageObject(int)
   int getNextPageKey()
   cocos2d::CCNode * getNextPageObject()
   cocos2d::CCNode * getPrevPageObject()
   signed int init(SearchType, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, bool, bool, bool, int, bool, bool, bool, bool, bool, bool, bool, bool, int, int)
   cocos2d::CCNode * create(SearchType)
   cocos2d::CCNode * create(SearchType, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCNode * create(SearchType, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, bool, bool, bool, int, bool, bool, bool, bool, bool, bool, bool, bool, int, int)
   int getKey()
   cocos2d::CCNode * GJSearchObject()
   GJSearchObject * ~GJSearchObject()
   GJSearchObject * getString() const
   virtual GJSearchObject * ~GJSearchObject()
}
class GJComment : cocos2d::CCNode{
   signed int init()
   void * create(cocos2d::CCDictionary*)
   void * create()
   GJComment * ~GJComment()
   virtual GJComment * ~GJComment()
   virtual signed int init(void)
}
class GJHttpResult : cocos2d::CCNode{
   signed int init(bool, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, GJHttpType)
   cocos2d::CCNode * create(bool, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, GJHttpType)
   GJHttpResult * ~GJHttpResult()
   virtual GJHttpResult * ~GJHttpResult()
}
class ButtonPage : cocos2d::CCLayer{
   cocos2d::CCMenu * init(cocos2d::CCArray*, cocos2d::CCPoint, int, float)
   cocos2d::CCLayer * create(cocos2d::CCArray*, cocos2d::CCPoint, int, float)
   ButtonPage * ~ButtonPage()
   virtual ButtonPage * ~ButtonPage()
}
class EditButtonBar : cocos2d::CCNode{
   int reloadItems(int, int)
   cocos2d::CCMenu * loadFromItems(cocos2d::CCArray*, int, int, bool)
   cocos2d::CCArray * init(cocos2d::CCArray*, cocos2d::CCPoint, int, bool, int, int)
   cocos2d::CCNode * create(cocos2d::CCArray*, cocos2d::CCPoint, int, bool, int, int)
   int onLeft(cocos2d::CCObject*)
   int getPage()
   int onRight(cocos2d::CCObject*)
   int goToPage(int)
   EditButtonBar * ~EditButtonBar()
   virtual EditButtonBar * ~EditButtonBar()
}
class cocos2d::extension::ColorPickerDelegate{
   void colorValueChanged(cocos2d::_ccColor3B)
   virtual void colorValueChanged(cocos2d::_ccColor3B)
}
class GJSpecialColorSelectDelegate{
    colorSelectClosed(GJSpecialColorSelect*, int)
   virtual  colorSelectClosed(GJSpecialColorSelect *,int)
}
class ColorSelectPopup : FLAlertLayer, cocos2d::extension::ColorPickerDelegate, TextInputDelegate, GJSpecialColorSelectDelegate{
   int selectColor(cocos2d::_ccColor3B)
   int textChanged(CCTextInputNode*)
   int onTintGround(cocos2d::CCObject*)
   unsigned int getColorValue()
   int onCopyOpacity(cocos2d::CCObject*)
   _DWORD * sliderChanged(cocos2d::CCObject*)
   int updateHSVMode()
   int updateOpacity()
   __int64 keyBackClicked()
   int onMultiTrigger(cocos2d::CCObject*)
   unsigned int onPlayerColor1(cocos2d::CCObject*)
   unsigned int onPlayerColor2(cocos2d::CCObject*)
   int updateDuration()
   _DWORD * updateDurLabel()
   int updateHSVValue()
   int onToggleHSVMode(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   EffectGameObject * updateCopyColor()
   __int64 closeColorSelect(cocos2d::CCObject*)
   int onToggleTintMode(cocos2d::CCObject*)
   int onTouchTriggered(cocos2d::CCObject*)
   int updateColorValue()
   int colorSelectClosed(GJSpecialColorSelect*, int)
   int colorValueChanged(cocos2d::_ccColor3B)
   ColorSelectPopup * onUpdateCopyColor(cocos2d::CCObject*)
   unsigned int updateEditorLabel()
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint, cocos2d::CCArray*)
   int onSpawnedByTrigger(cocos2d::CCObject*)
   int updateOpacityLabel()
   ColorSelectPopup * onUpdateCustomColor(cocos2d::CCObject*)
   cocos2d::CCArray * determineStartValues()
   int onSelectSpecialColor(cocos2d::CCObject*)
   int updateCustomColorIdx()
   void updateTextInputLabel()
   int updateTouchTriggered()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int updateMultiTriggerBtn()
   int updateSpawnedByTrigger()
   void updateCopyColorTextInputLabel()
   cocos2d::CCArray * init(EffectGameObject*, cocos2d::CCArray*, ColorAction*)
   int show()
   cocos2d::CCNodeRGBA * create(ColorAction*)
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*)
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*, ColorAction*)
   int onCopy(cocos2d::CCObject*)
   int onPaste(cocos2d::CCObject*)
   ColorAction * onDefault(cocos2d::CCObject*)
   cocos2d::CCLayerColor * ColorSelectPopup()
   ColorSelectPopup * ~ColorSelectPopup()
   virtual ColorSelectPopup * ~ColorSelectPopup()
   virtual __int64 keyBackClicked(void)
   virtual int show(void)
   virtual int colorValueChanged(cocos2d::_ccColor3B)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual int colorSelectClosed(GJSpecialColorSelect *,int)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class CustomSongWidget : cocos2d::CCNode, MusicDownloadDelegate, FLAlertLayerProtocol{
   GameManager * onDownload(cocos2d::CCObject*)
   int onPlayback(cocos2d::CCObject*)
   int updateError(GJSongError)
   int verifySongID(int)
   int onGetSongInfo(cocos2d::CCObject*)
   int setSongObject(SongInfoObject*)
   __int64 startDownload()
   int downloadFailed()
   int updateSongInfo()
   GameManager * FLAlert_Clicked(FLAlertLayer*, bool)
   int onCancelDownload(cocos2d::CCObject*)
   int songStateChanged()
   int updateSongObject(SongInfoObject*)
   int updatePlaybackBtn()
   int updateProgressBar(int)
   int downloadSongFailed(int, GJSongError)
   int loadSongInfoFailed(int, GJSongError)
   int toggleUpdateButton(bool)
   int downloadSongFinished(SongInfoObject*)
   cocos2d::CCAction * loadSongInfoFinished(SongInfoObject*)
   __int64 startMonitorDownload()
   int getSongInfoIfUnloaded()
   int updateDownloadProgress(float)
   signed int init(SongInfoObject*, LevelSettingsObject*, bool, bool, bool, bool, bool)
   cocos2d::CCNode * create(SongInfoObject*, LevelSettingsObject*, bool, bool, bool, bool, bool)
   int onMore(cocos2d::CCObject*)
   int onSelect(cocos2d::CCObject*)
   cocos2d::CCNode * CustomSongWidget()
   CustomSongWidget * ~CustomSongWidget()
   virtual CustomSongWidget * ~CustomSongWidget()
   virtual cocos2d::CCAction * loadSongInfoFinished(SongInfoObject *)
   virtual int loadSongInfoFailed(int,GJSongError)
   virtual int downloadSongFinished(SongInfoObject *)
   virtual int downloadSongFailed(int,GJSongError)
   virtual int songStateChanged(void)
   virtual GameManager * FLAlert_Clicked(FLAlertLayer *,bool)
}
class SpritePartDelegate{
    displayFrameChanged(cocos2d::CCObject*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   virtual  displayFrameChanged(cocos2d::CCObject *,std::string)
}
class AnimatedGameObject : GameObject, AnimatedSpriteDelegate, SpritePartDelegate{
   unsigned int setOpacity(unsigned char)
   int resetObject()
   signed int getTweenTime(int, int)
   _DWORD * playAnimation(int)
   int activateObject()
   AnimatedGameObject * animationForID(int, int)
   int setObjectColor(cocos2d::_ccColor3B const&)
   void deactivateObject(bool)
   int animationFinished(char const*)
   int setupAnimatedSize(int)
   int setupChildSprites()
   _DWORD * displayFrameChanged(cocos2d::CCObject*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   unsigned int updateChildSpriteColor(cocos2d::_ccColor3B)
   int init(int)
   cocos2d::CCSprite * create(int)
   AnimatedGameObject * ~AnimatedGameObject()
   virtual AnimatedGameObject * ~AnimatedGameObject()
   virtual unsigned int setOpacity(uchar)
   virtual int resetObject(void)
   virtual int activateObject(void)
   virtual void deactivateObject(bool)
   virtual int setObjectColor(cocos2d::_ccColor3B const&)
   virtual int animationFinished(char const*)
   virtual _DWORD * displayFrameChanged(cocos2d::CCObject *,std::string)
}
class EffectGameObject : GameObject{
   signed int customSetup()
   EffectGameObject * getSaveString()
   int triggerObject(GJBaseGameLayer*)
   int spawnXPosition()
   int triggerActivated(float)
   _DWORD * customObjectSetup(std::map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&)
   _DWORD * resetSpawnTrigger()
   int updateSpecialColor()
   signed int getTargetColorIndex()
   int init(char const*)
   cocos2d::CCSprite * create(char const*)
   cocos2d::CCSprite * EffectGameObject()
   EffectGameObject * ~EffectGameObject()
   virtual EffectGameObject * ~EffectGameObject()
   virtual signed int customSetup(void)
   virtual int triggerObject(GJBaseGameLayer *)
   virtual _DWORD * customObjectSetup(std::map<std::string,std::string,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>> &)
   virtual EffectGameObject * getSaveString(void)
   virtual int triggerActivated(float)
   virtual int spawnXPosition(void)
}
class RingObject : EffectGameObject{
   int resetObject()
   int setRotation(float)
   int spawnCircle()
   RingObject * getSaveString()
   int powerOnObject()
   int powerOffObject()
   int triggerActivated(float)
   _DWORD * customObjectSetup(std::map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&)
   int init(char const*)
   cocos2d::CCSprite * create(char const*)
   int setScale(float)
   int setRScale(float)
   RingObject * ~RingObject()
   virtual RingObject * ~RingObject()
   virtual int setScale(float)
   virtual int setRotation(float)
   virtual int resetObject(void)
   virtual _DWORD * customObjectSetup(std::map<std::string,std::string,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>> &)
   virtual RingObject * getSaveString(void)
   virtual int setRScale(float)
   virtual int triggerActivated(float)
   virtual int powerOnObject(void)
   virtual int powerOffObject(void)
}
class StartPosObject : EffectGameObject{
   int setSettings(LevelSettingsObject*)
   int * getSaveString()
   LevelSettingsObject * init()
   cocos2d::CCSprite * create()
   EffectGameObject * ~StartPosObject()
   virtual EffectGameObject * ~StartPosObject()
   virtual LevelSettingsObject * init(void)
   virtual int * getSaveString(void)
}
class TeleportPortalObject : GameObject{
   int addToGroup(int)
    addToGroup2(int)
   int setPosition(cocos2d::CCPoint const&)
   int setRotation(float)
   int setStartPos(cocos2d::CCPoint)
    setRotation2(float)
   TeleportPortalObject * getSaveString()
   signed int getTeleportXOff(cocos2d::CCNode*)
   int removeFromGroup(int)
    removeFromGroup2(int)
   _DWORD * customObjectSetup(std::map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&)
   int setPositionOverride(cocos2d::CCPoint)
   int setStartPosOverride(cocos2d::CCPoint)
   _DWORD init(char const*)
   cocos2d::CCSprite * create(char const*)
   TeleportPortalObject * ~TeleportPortalObject()
   virtual TeleportPortalObject * ~TeleportPortalObject()
   virtual int setPosition(cocos2d::CCPoint const&)
   virtual int setRotation(float)
   virtual int setStartPos(cocos2d::CCPoint)
   virtual _DWORD * customObjectSetup(std::map<std::string,std::string,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>> &)
   virtual TeleportPortalObject * getSaveString(void)
   virtual int addToGroup(int)
   virtual int removeFromGroup(int)
   virtual  setRotation2(float)
   virtual  addToGroup2(int)
   virtual  removeFromGroup2(int)
}
class LabelGameObject : EffectGameObject{
   int setOpacity(unsigned char)
   int updateLabel(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   LabelGameObject * getSaveString()
   int setObjectColor(cocos2d::_ccColor3B const&)
   int * queueUpdateLabel(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * customObjectSetup(std::map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&)
   int setupCustomSprites()
   int updateLabelIfDirty()
   int addMainSpriteToParent(bool)
   int init()
   cocos2d::CCSprite * create()
   EffectGameObject * ~LabelGameObject()
   virtual EffectGameObject * ~LabelGameObject()
   virtual int init(void)
   virtual int setOpacity(uchar)
   virtual int setupCustomSprites(void)
   virtual int addMainSpriteToParent(bool)
   virtual _DWORD * customObjectSetup(std::map<std::string,std::string,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>> &)
   virtual LabelGameObject * getSaveString(void)
   virtual int setObjectColor(cocos2d::_ccColor3B const&)
}
class EndPortalObject : GameObject{
   cocos2d::CCDirector * setVisible(bool)
   int setPosition(cocos2d::CCPoint const&)
   int updateColors(cocos2d::_ccColor3B)
   cocos2d::CCAction * triggerObject(GJBaseGameLayer*)
   int calculateSpawnXPos()
   int init()
   cocos2d::CCSprite * create()
   EndPortalObject * ~EndPortalObject()
   virtual EndPortalObject * ~EndPortalObject()
   virtual int init(void)
   virtual int setPosition(cocos2d::CCPoint const&)
   virtual cocos2d::CCDirector * setVisible(bool)
   virtual cocos2d::CCAction * triggerObject(GJBaseGameLayer *)
   virtual int calculateSpawnXPos(void)
}
class EditorPauseLayer : CCBlockLayer, FLAlertLayerProtocol{
   int customSetup()
   _DWORD * onSelectAll(cocos2d::CCObject*)
   int onCreateBase(cocos2d::CCObject*)
   GameSoundManager * onExitEditor(cocos2d::CCObject*)
   __int64 onExitNoSave(cocos2d::CCObject*)
   void doResetUnused()
   int onBuildHelper(cocos2d::CCObject*)
   int onCreateEdges(cocos2d::CCObject*)
   int onKeybindings(cocos2d::CCObject*)
   int onSaveAndExit(cocos2d::CCObject*)
   int onSaveAndPlay(cocos2d::CCObject*)
   int onSaveAndTest(cocos2d::CCObject*)
   int keyBackClicked()
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int onCreateOutline(cocos2d::CCObject*)
   _DWORD * onSelectAllLeft(cocos2d::CCObject*)
   _DWORD * toggleDebugDraw(cocos2d::CCObject*)
   int toggleGridOnTop(cocos2d::CCObject*)
   _DWORD * onSelectAllRight(cocos2d::CCObject*)
   _DWORD * toggleEditorGrid(cocos2d::CCObject*)
   int updateSongButton()
   int onUnlockAllLayers(cocos2d::CCObject*)
   _DWORD * toggleEffectLines(cocos2d::CCObject*)
   int uncheckAllPortals(cocos2d::CCObject*)
   int toggleEditorGround(cocos2d::CCObject*)
   _DWORD * toggleFollowPlayer(cocos2d::CCObject*)
   _DWORD * toggleIgnoreDamage(cocos2d::CCObject*)
   _DWORD * toggleSelectFilter(cocos2d::CCObject*)
   __int64 onResetUnusedColors(cocos2d::CCObject*)
   _DWORD * togglePlaytestMusic(cocos2d::CCObject*)
   _DWORD * toggleEffectDuration(cocos2d::CCObject*)
   _DWORD * toggleShowObjectInfo(cocos2d::CCObject*)
   int toggleEditorColorMode(cocos2d::CCObject*)
   int toggleEditorBackground(cocos2d::CCObject*)
   cocos2d::CCDirector * init(LevelEditorLayer*)
   cocos2d::CCLayerColor * create(LevelEditorLayer*)
   int onHelp(cocos2d::CCObject*)
   __int64 onSave(cocos2d::CCObject*)
   int onSong(cocos2d::CCObject*)
   int keyDown(cocos2d::enumKeyCodes)
   _DWORD onAlignX(cocos2d::CCObject*)
   _DWORD onAlignY(cocos2d::CCObject*)
   int onResume(cocos2d::CCObject*)
   int onOptions(cocos2d::CCObject*)
   EditorPauseLayer * playStep2()
   signed int playStep3()
   _DWORD * saveLevel()
   cocos2d::CCLayerColor * EditorPauseLayer()
   CCBlockLayer * ~EditorPauseLayer()
   virtual CCBlockLayer * ~EditorPauseLayer()
   virtual int keyBackClicked(void)
   virtual int keyDown(cocos2d::enumKeyCodes)
   virtual int customSetup(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
}
class AudioEffectsLayer : cocos2d::CCLayerColor{
   cocos2d::CCSprite * getBGSquare()
   int triggerEffect(float)
   int resetAudioVars()
   void updateTweenAction(float, char const*)
    draw()
   signed int init(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCLayerColor * create(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int audioStep(float)
   int goingDown()
   AudioEffectsLayer * ~AudioEffectsLayer()
   virtual AudioEffectsLayer * ~AudioEffectsLayer()
   virtual  draw(void)
   virtual void updateTweenAction(float,char const*)
}
class GameRateDelegate{
    updateRate()
   virtual  updateRate(void)
}
class ListButtonBarDelegate{
    listButtonBarSwitchedPage(ListButtonBar*, int)
   virtual  listButtonBarSwitchedPage(ListButtonBar *,int)
}
class GJGarageLayer : cocos2d::CCLayer, TextInputDelegate, FLAlertLayerProtocol, GameRateDelegate, ListButtonBarDelegate, DialogDelegate{
   signed int checkColor(int, bool)
   signed int checkRobot(int)
   signed int onBallIcon(cocos2d::CCObject*)
   signed int onBirdIcon(cocos2d::CCObject*)
   signed int onDartIcon(cocos2d::CCObject*)
   signed int onShipIcon(cocos2d::CCObject*)
   int selectPage(IconType)
   int toggleGlow()
   __int64 updateRate()
   signed int checkSpider(int)
   signed int onRobotIcon(cocos2d::CCObject*)
   int onSelectTab(cocos2d::CCObject*)
   _DWORD * textChanged(CCTextInputNode*)
   signed int checkSpecial(int)
   int dialogClosed(DialogLayer*)
   int getLockFrame(int, UnlockType)
   int onPlayerIcon(cocos2d::CCObject*)
   signed int onSpiderIcon(cocos2d::CCObject*)
   __int32 onDeathEffect(cocos2d::CCObject*)
   signed int onSpecialIcon(cocos2d::CCObject*)
   int keyBackClicked()
   signed int onPlayerColor1(cocos2d::CCObject*)
   GameManager * onPlayerColor2(cocos2d::CCObject*)
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int setupIconSelect()
   _DWORD * showUnlockPopup(int, UnlockType)
   _DWORD * textInputClosed(CCTextInputNode*)
   _DWORD * textInputOpened(CCTextInputNode*)
   signed int checkDeathEffect(int)
   int playShadowEffect()
   int setupColorSelect()
   void updatePlayerName(char const*)
   int playRainbowEffect()
   int updateColorSelect(cocos2d::CCNode*, bool)
   int updatePlayerColors()
   void updatePlayerSelect(cocos2d::CCNode*)
   AchievementManager * achievementForUnlock(int, UnlockType)
   AchievementManager * descriptionForUnlock(int, UnlockType)
   int listButtonBarSwitchedPage(ListButtonBar*, int)
   GameManager * init()
   cocos2d::CCLayer * node()
   AppDelegate * scene()
   int onBack(cocos2d::CCObject*)
   _DWORD * onInfo(cocos2d::CCObject*)
   signed int onKeys(cocos2d::CCObject*)
   signed int onShop(cocos2d::CCObject*)
   int onShards(cocos2d::CCObject*)
   signed int checkBall(int)
   signed int checkBird(int)
   signed int checkDart(int)
   signed int checkIcon(int)
   signed int checkShip(int)
   cocos2d::CCLayer * GJGarageLayer()
   GJGarageLayer * ~GJGarageLayer()
   virtual GJGarageLayer * ~GJGarageLayer()
   virtual GameManager * init(void)
   virtual int keyBackClicked(void)
   virtual _DWORD * textInputOpened(CCTextInputNode *)
   virtual _DWORD * textInputClosed(CCTextInputNode *)
   virtual _DWORD * textChanged(CCTextInputNode *)
   virtual int listButtonBarSwitchedPage(ListButtonBar *,int)
   virtual __int64 updateRate(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual int dialogClosed(DialogLayer *)
}
class GaragePage : cocos2d::CCLayer, ListButtonBarDelegate{
   void updateSelect(cocos2d::CCNode*)
   GaragePage * listButtonBarSwitchedPage(ListButtonBar*, int)
   signed int init(IconType, GJGarageLayer*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   cocos2d::CCLayer * create(IconType, GJGarageLayer*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   int onGlow(cocos2d::CCObject*)
   int onSelect(cocos2d::CCObject*)
   GaragePage * ~GaragePage()
   virtual GaragePage * ~GaragePage()
   virtual GaragePage * listButtonBarSwitchedPage(ListButtonBar *,int)
}
class SimplePlayer : cocos2d::CCSprite{
   int setOpacity(unsigned char)
   int updateColors()
   int setSecondColor(cocos2d::_ccColor3B const&)
   _DWORD * updatePlayerFrame(int, IconType)
   signed int init(int)
   cocos2d::CCSprite * create(int)
   int setColor(cocos2d::_ccColor3B const&)
   void setFrames(char const*, char const*, char const*, char const*, char const*)
   SimplePlayer * ~SimplePlayer()
   virtual SimplePlayer * ~SimplePlayer()
   virtual int setOpacity(uchar)
   virtual int setColor(cocos2d::_ccColor3B const&)
}
class GJItemIcon : cocos2d::CCSprite{
   unsigned int setOpacity(unsigned char)
   cocos2d::CCSprite * createStoreItem(UnlockType, int, bool, cocos2d::_ccColor3B)
   cocos2d::CCSprite * createBrowserItem(UnlockType, int)
   int init(UnlockType, int, cocos2d::_ccColor3B, cocos2d::_ccColor3B, bool, bool, bool, cocos2d::_ccColor3B)
   cocos2d::CCSprite * create(UnlockType, int, cocos2d::_ccColor3B, cocos2d::_ccColor3B, bool, bool, bool, cocos2d::_ccColor3B)
   GJItemIcon * ~GJItemIcon()
   virtual GJItemIcon * ~GJItemIcon()
   virtual unsigned int setOpacity(uchar)
}
class RateLevelLayer : FLAlertLayer{
   int selectRating(cocos2d::CCObject*)
   int keyBackClicked()
   cocos2d::CCDirector * init(int)
   cocos2d::CCLayerColor * create(int)
   int onRate(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   RateLevelLayer * ~RateLevelLayer()
   virtual RateLevelLayer * ~RateLevelLayer()
   virtual int keyBackClicked(void)
}
class BoomScrollLayerDelegate{
    scrollLayerMoved(cocos2d::CCPoint)
    scrollLayerScrolledToPage(BoomScrollLayer*, int)
    scrollLayerScrollingStarted(BoomScrollLayer*)
    scrollLayerWillScrollToPage(BoomScrollLayer*, int)
   virtual  scrollLayerScrollingStarted(BoomScrollLayer *)
   virtual  scrollLayerScrolledToPage(BoomScrollLayer *,int)
   virtual  scrollLayerMoved(cocos2d::CCPoint)
   virtual  scrollLayerWillScrollToPage(BoomScrollLayer *,int)
}
class DynamicScrollDelegate{
}
class LevelSelectLayer : cocos2d::CCLayer, BoomScrollLayerDelegate, DynamicScrollDelegate{
   int onDownload(cocos2d::CCObject*)
   unsigned int colorForPage(int)
   unsigned int getColorValue(int, int, float)
   signed int keyBackClicked()
   unsigned int scrollLayerMoved(cocos2d::CCPoint)
   cocos2d::CCAction * updatePageWithObject(cocos2d::CCObject*, cocos2d::CCObject*)
   signed int init(int)
   AppDelegate * scene(int)
   cocos2d::CCLayer * create(int)
   signed int onBack(cocos2d::CCObject*)
   int onInfo(cocos2d::CCObject*)
   int onNext(cocos2d::CCObject*)
   int onPlay(cocos2d::CCObject*)
   int onPrev(cocos2d::CCObject*)
   cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   signed int tryShowAd()
   LevelSelectLayer * ~LevelSelectLayer()
   virtual LevelSelectLayer * ~LevelSelectLayer()
   virtual signed int keyBackClicked(void)
   virtual cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   virtual cocos2d::CCAction * updatePageWithObject(cocos2d::CCObject *,cocos2d::CCObject *)
   virtual unsigned int scrollLayerMoved(cocos2d::CCPoint)
}
class LevelPage : cocos2d::CCLayer, DialogDelegate{
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   void dialogClosed(DialogLayer*)
   int onSecretDoor(cocos2d::CCObject*)
   cocos2d::CCAction * addSecretCoin()
   GameManager * addSecretDoor()
   cocos2d::CCAction * playCoinEffect()
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int updateDynamicPage(GJGameLevel*)
   int registerWithTouchDispatcher()
   signed int init(GJGameLevel*)
   cocos2d::CCLayer * create(GJGameLevel*)
   int onInfo(cocos2d::CCObject*)
   int onPlay(cocos2d::CCObject*)
   LevelPage * playStep2()
   signed int playStep3()
   cocos2d::CCLayer * LevelPage()
   LevelPage * ~LevelPage()
   virtual LevelPage * ~LevelPage()
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
   virtual void dialogClosed(DialogLayer *)
}
class GJListLayer : cocos2d::CCLayerColor{
   int init(BoomListView*, char const*, cocos2d::_ccColor4B, float, float)
   cocos2d::CCLayerColor * create(BoomListView*, char const*, cocos2d::_ccColor4B, float, float)
   cocos2d::CCLayerColor * ~GJListLayer()
   virtual cocos2d::CCLayerColor * ~GJListLayer()
}
class GJStoreItem : cocos2d::CCNode{
   signed int init(int, int, int, int, ShopType)
   cocos2d::CCNode * create(int, int, int, int, ShopType)
   GJStoreItem * ~GJStoreItem()
   virtual GJStoreItem * ~GJStoreItem()
}
class GJUnlockableItem : cocos2d::CCObject{
   signed int init()
   void * create()
   GJUnlockableItem * ~GJUnlockableItem()
   virtual GJUnlockableItem * ~GJUnlockableItem()
   virtual  s name
}
class GameStatsManager : cocos2d::CCNode{
   int dataLoaded(DS_Dictionary*)
   void firstSetup()
   _DWORD * getItemKey(int, UnlockType)
   GameStatsManager * getLevelKey(int, bool, bool, bool)
   GameStatsManager * getLevelKey(GJGameLevel*)
   int hasUserCoin(char const*)
   int sharedState()
   int addStoreItem(int, int, int, int, ShopType)
   int encodeDataTo(DS_Dictionary*)
   int getChallenge(int)
   _DWORD * getRewardKey(GJRewardType, int)
   int getStoreItem(int)
   int getStoreItem(int, int)
   _BOOL4 isSecretCoin(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int purchaseItem(int)
    resetPreSync()
   int setValueDict(cocos2d::CCDictionary*)
   int collectReward(GJRewardType, GJRewardItem*)
   int getMapPackKey(int)
   int getRewardItem(GJRewardType)
   int hasSecretCoin(char const*)
   GameManager * incrementStat(char const*)
   GameManager * incrementStat(char const*, int)
   _DWORD * storeUserCoin(char const*)
   signed int awardSecretKey()
   _DWORD * completedLevel(GJGameLevel*)
   GameStatsManager * getCurrencyKey(GJGameLevel*)
   int isItemUnlocked(UnlockType, int)
   void resetUserCoins()
   int storeChallenge(int, GJChallengeItem*)
   int getBaseCurrency(int, bool, int)
   int getBaseDiamonds(int)
   GameStatsManager * getChallengeKey(GJChallengeItem*)
   int getStarLevelKey(GJGameLevel*)
   GameStatsManager * getStoreItemKey(int, int)
   _DWORD * removeChallenge(int)
    restorePostSync()
   GameStatsManager * setStatIfHigher(char const*, int)
   int starsForMapPack(int)
   _DWORD * storeSecretCoin(char const*)
   _DWORD * uncompleteLevel(GJGameLevel*)
   AchievementManager * verifyUserCoins()
   _BOOL4 areRewardsLoaded()
   AchievementManager * checkAchievement(char const*)
   void * completedMapPack(GJMapPack*)
   int createStoreItems()
   signed int getBonusDiamonds(int)
   GameStatsManager * getDailyLevelKey(int)
   int getDemonLevelKey(GJGameLevel*)
   int getSecretCoinKey(char const*)
   int isLiteUnlockable(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int preProcessReward(GJRewardItem*)
   void preSaveGameStats()
   int recountUserCoins(bool)
   int setUserCoinsDict(cocos2d::CCDictionary*)
   int storeRewardState(GJRewardType, int, int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int hasCompletedLevel(GJGameLevel*)
   signed int isSecretCoinValid(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int postLoadGameStats()
   int setRewardItemDict(cocos2d::CCDictionary*)
   int unlockSecretChest(int)
   int checkCoinsForLevel(GJGameLevel*)
   _DWORD * collectVideoReward(int)
   int completedChallenge(GJChallengeItem*)
   GameManager * completedStarLevel(GJGameLevel*)
   int getBonusShardCount()
   int getItemUnlockState(int, UnlockType)
   int getQueuedChallenge(int)
   int hasPendingUserCoin(char const*)
   _DWORD * incrementChallenge(GJChallengeType, int)
   int setCompletedLevels(cocos2d::CCDictionary*)
   int setRandomContainer(cocos2d::CCDictionary*)
   _DWORD * setStarsForMapPack(int, int)
   int storeChallengeTime(int)
   GJRewardItem * unlockSpecialChest(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int areChallengesLoaded()
   GJRewardItem * completedDailyLevel(GJGameLevel*)
   void * completedDemonLevel(GJGameLevel*)
   cocos2d::CCArray * getLiteAchievements()
   int hasCompletedMapPack(int)
   int isStoreItemUnlocked(int)
   int recountSpecialStats()
   int resetChallengeTimer()
   __int32 setAwardedBonusKeys(int)
   int setCollectedRewards(cocos2d::CCDictionary*)
   int setDiamondAwardDict(cocos2d::CCDictionary*)
   int checkCoinAchievement(GJGameLevel*)
   cocos2d::CCArray * getCompletedMapPacks()
   GameStatsManager * getGauntletRewardKey(int)
   int setChallengeItemDict(cocos2d::CCDictionary*)
   int setCurrencyAwardDict(cocos2d::CCDictionary*)
   int setCurrencyLevelDict(cocos2d::CCDictionary*)
   int setDiamondsLevelDict(cocos2d::CCDictionary*)
   signed int shouldAwardSecretKey()
   _DWORD * storePendingUserCoin(char const*)
   _DWORD * storeQueuedChallenge(int, GJChallengeItem*)
   int awardCurrencyForLevel(GJGameLevel*)
   int awardDiamondsForLevel(GJGameLevel*)
   int getSecretChestForItem(int, UnlockType)
   signed int hasCompletedChallenge(GJChallengeItem*)
   signed int hasCompletedMainLevel(int)
   int hasCompletedStarLevel(GJGameLevel*)
   int isSecretChestUnlocked(int)
   _DWORD * processChallengeQueue(int)
   _DWORD * removeQueuedChallenge(int)
   int setCurrencyUnlockDict(cocos2d::CCDictionary*)
   int createSecretChestItems()
   int hasCompletedDailyLevel(int)
   int hasCompletedDemonLevel(GJGameLevel*)
   signed int hasRewardBeenCollected(GJRewardType, int)
   int isSpecialChestUnlocked(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int createSpecialChestItems()
   int getBaseCurrencyForLevel(GJGameLevel*)
   int getRewardForSecretChest(int)
   signed int hasCompletedOnlineLevel(int)
   int registerRewardsFromItem(GJRewardItem*)
   int setPendingUserCoinsDict(cocos2d::CCDictionary*)
   int setUnlockedSecretChests(cocos2d::CCDictionary*)
   int createSecretChestRewards()
   int getRewardForSpecialChest(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int setCollectedVideoRewards(cocos2d::CCDictionary*)
   int setCurrencyMainLevelDict(cocos2d::CCDictionary*)
   int setUnlockedSpecialChests(cocos2d::CCDictionary*)
   int getCollectedCoinsForLevel(GJGameLevel*)
   int getSpecialChestKeyForItem(int, UnlockType)
   int getTotalCollectedCurrency()
   int getTotalCollectedDiamonds()
   signed int hasCompletedGauntletLevel(int)
   int setCurrencyDailyLevelDict(cocos2d::CCDictionary*)
   int setCurrencyLevelStarsDict(cocos2d::CCDictionary*)
   int setDiamondsDailyLevelDict(cocos2d::CCDictionary*)
   int generateItemUnlockableData()
   int getAwardedCurrencyForLevel(GJGameLevel*)
   int getAwardedDiamondsForLevel(GJGameLevel*)
   int setChallengeItemQueuedDict(cocos2d::CCDictionary*)
   int getSecondaryQueuedChallenge(int)
   unsigned int removeErrorFromSpecialChests()
   _DWORD * resetSpecialStatAchievements()
   int setCurrencyGauntletLevelDict(cocos2d::CCDictionary*)
   _DWORD * storeSecondaryQueuedChallenge(int, GJChallengeItem*)
   _DWORD * markLevelAsCompletedAndClaimed(GJGameLevel*)
   _DWORD * removeQueuedSecondaryChallenge(int)
   int setCollectedWeeklyLevelRewards(cocos2d::CCDictionary*)
   int setCurrencyDailyLevelStarsDict(cocos2d::CCDictionary*)
   signed int init()
   int getStat(char const*)
   GameStatsManager * setStat(char const*, int)
   unsigned int logCoins()
    tempClear()
   cocos2d::CCNode * GameStatsManager()
   GameStatsManager * ~GameStatsManager()
   virtual GameStatsManager * ~GameStatsManager()
   virtual signed int init(void)
}
class GJRewardObject : cocos2d::CCObject{
   int dataLoaded(DS_Dictionary*)
   _BOOL4 isSpecialType()
   cocos2d::CCObject * createWithCoder(DS_Dictionary*)
   int encodeWithCoder(DS_Dictionary*)
   cocos2d::CCObject * createItemUnlock(UnlockType, int)
   signed int init(SpecialRewardItem, int, int)
   cocos2d::CCObject * create(SpecialRewardItem, int, int)
   cocos2d::CCObject * create()
   signed int canEncode()
   GJRewardObject * ~GJRewardObject()
   virtual GJRewardObject * ~GJRewardObject()
   virtual int encodeWithCoder(DS_Dictionary *)
   virtual signed int canEncode(void)
}
class GJRewardItem : cocos2d::CCObject{
   int dataLoaded(DS_Dictionary*)
   int setObjects(cocos2d::CCArray*)
   _BOOL4 isShardType(SpecialRewardItem)
   _DWORD * createSpecial(GJRewardType, int, int, SpecialRewardItem, int, SpecialRewardItem, int, int, int)
   int getRewardCount(SpecialRewardItem)
   GJRewardItem * createWithCoder(DS_Dictionary*)
   int encodeWithCoder(DS_Dictionary*)
   _DWORD * createWithObject(GJRewardType, GJRewardObject*)
   int getNextShardType(SpecialRewardItem)
   _DWORD * rewardItemToStat(SpecialRewardItem)
   _DWORD * createWithObjects(GJRewardType, cocos2d::CCArray*)
   signed int getRandomShardType()
   cocos2d::CCObject * getRewardObjectForType(SpecialRewardItem)
   int getRandomNonMaxShardType()
   signed int init(int, int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * create(int, int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * create()
   signed int canEncode()
   cocos2d::CCObject * ~GJRewardItem()
   virtual cocos2d::CCObject * ~GJRewardItem()
   virtual int encodeWithCoder(DS_Dictionary *)
   virtual signed int canEncode(void)
}
class GJChallengeItem : cocos2d::CCObject{
   int dataLoaded(DS_Dictionary*)
   int incrementCount(int)
   GJChallengeItem * createWithCoder(DS_Dictionary*)
   int encodeWithCoder(DS_Dictionary*)
   _DWORD * createFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int init(GJChallengeType, int, int, int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * create(GJChallengeType, int, int, int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * create()
   __int32 setCount(int)
   signed int canEncode()
   cocos2d::CCObject * ~GJChallengeItem()
   virtual cocos2d::CCObject * ~GJChallengeItem()
   virtual int encodeWithCoder(DS_Dictionary *)
   virtual signed int canEncode(void)
}
class GJDropDownLayer : cocos2d::CCLayerColor{
   int enterLayer()
   void customSetup()
   int layerHidden()
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int layerVisible()
   int keyBackClicked()
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
    enterAnimFinished()
   int registerWithTouchDispatcher()
   void draw()
   signed int init(char const*)
   signed int init(char const*, float)
   cocos2d::CCLayerColor * create(char const*)
   cocos2d::CCLayerColor * create(char const*, float)
   int enableUI()
   int disableUI()
   int exitLayer(cocos2d::CCObject*)
   cocos2d::CCAction * hideLayer(bool)
   cocos2d::CCAction * showLayer(bool)
   cocos2d::CCLayerColor * GJDropDownLayer()
   GJDropDownLayer * ~GJDropDownLayer()
   virtual GJDropDownLayer * ~GJDropDownLayer()
   virtual void draw(void)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual void customSetup(void)
   virtual int enterLayer(void)
   virtual int exitLayer(cocos2d::CCObject *)
   virtual cocos2d::CCAction * showLayer(bool)
   virtual cocos2d::CCAction * hideLayer(bool)
   virtual int layerVisible(void)
   virtual int layerHidden(void)
   virtual  enterAnimFinished(void)
   virtual int disableUI(void)
   virtual int enableUI(void)
}
class OptionsLayer : GJDropDownLayer, FLAlertLayerProtocol{
   int customSetup()
   int layerHidden()
   int onProgressBar(cocos2d::CCObject*)
   _DWORD * onSecretVault(cocos2d::CCObject*)
   int onSoundtracks(cocos2d::CCObject*)
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int onRecordReplays(cocos2d::CCObject*)
   int tryEnableRecord()
   int sfxSliderChanged(cocos2d::CCObject*)
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint)
   FMODAudioEngine * musicSliderChanged(cocos2d::CCObject*)
   cocos2d::CCLayerColor * create()
   int onHelp(cocos2d::CCObject*)
   GameToolbox * onRate(cocos2d::CCObject*)
   int onVideo(cocos2d::CCObject*)
   int exitLayer()
   int onAccount(cocos2d::CCObject*)
   int onOptions(cocos2d::CCObject*)
   int onSupport(cocos2d::CCObject*)
   OptionsLayer * ~OptionsLayer()
   virtual OptionsLayer * ~OptionsLayer()
   virtual int customSetup(void)
   virtual int layerHidden(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
}
class MoreOptionsLayer : FLAlertLayer, TextInputDelegate, GooglePlayDelegate{
   int onGPSignIn(cocos2d::CCObject*)
   int onNextPage(cocos2d::CCObject*)
   int onParental(cocos2d::CCObject*)
   int onPrevPage(cocos2d::CCObject*)
   int onGPSignOut(cocos2d::CCObject*)
   int countForPage(int)
   cocos2d::CCLayer * layerForPage(int)
   MoreOptionsLayer * nextPosition(int)
   int onKeybindings(cocos2d::CCObject*)
   int onSongBrowser(cocos2d::CCObject*)
   int keyBackClicked()
   int objectsForPage(int)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int googlePlaySignedIn()
   _DWORD * incrementCountForPage(int)
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   cocos2d::CCDirector * init()
   cocos2d::CCLayerColor * create()
   int onInfo(cocos2d::CCObject*)
   int infoKey(int)
   int onClose(cocos2d::CCObject*)
   int pageKey(int)
   int goToPage(int)
   int layerKey(int)
   GameManager * onToggle(cocos2d::CCObject*)
   int toggleGP()
   int addToggle(char const*, char const*, char const*)
   int objectKey(int)
   MoreOptionsLayer * ~MoreOptionsLayer()
   virtual MoreOptionsLayer * ~MoreOptionsLayer()
   virtual cocos2d::CCDirector * init(void)
   virtual int keyBackClicked(void)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
   virtual int googlePlaySignedIn(void)
}
class VideoOptionsLayer : FLAlertLayer{
   int onAdvanced(cocos2d::CCObject*)
   int onFullscreen(cocos2d::CCObject*)
   int keyBackClicked()
   int onResolutionNext(cocos2d::CCObject*)
   int onResolutionPrev(cocos2d::CCObject*)
   int toggleResolution()
   int updateResolution(int)
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint, float, float, bool)
   int onTextureQualityNext(cocos2d::CCObject*)
   int onTextureQualityPrev(cocos2d::CCObject*)
   int updateTextureQuality(int)
   cocos2d::CCDirector * init()
   cocos2d::CCLayerColor * create()
   __int64 onInfo(cocos2d::CCObject*)
   signed int onApply(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   VideoOptionsLayer * ~VideoOptionsLayer()
   virtual VideoOptionsLayer * ~VideoOptionsLayer()
   virtual cocos2d::CCDirector * init(void)
   virtual int keyBackClicked(void)
}
class MoreVideoOptionsLayer : FLAlertLayer{
   int onNextPage(cocos2d::CCObject*)
   int onPrevPage(cocos2d::CCObject*)
   int countForPage(int)
   cocos2d::CCLayer * layerForPage(int)
   MoreVideoOptionsLayer * nextPosition(int)
   int keyBackClicked()
   int objectsForPage(int)
   _DWORD * incrementCountForPage(int)
   cocos2d::CCDirector * init()
   cocos2d::CCLayerColor * create()
   int onInfo(cocos2d::CCObject*)
   int infoKey(int)
   int onClose(cocos2d::CCObject*)
   int pageKey(int)
   int goToPage(int)
   int layerKey(int)
   GameManager * onToggle(cocos2d::CCObject*)
   int addToggle(char const*, char const*, char const*)
   int objectKey(int)
   MoreVideoOptionsLayer * ~MoreVideoOptionsLayer()
   virtual MoreVideoOptionsLayer * ~MoreVideoOptionsLayer()
   virtual cocos2d::CCDirector * init(void)
   virtual int keyBackClicked(void)
}
class ParentalOptionsLayer : FLAlertLayer{
   int onNextPage(cocos2d::CCObject*)
   int onPrevPage(cocos2d::CCObject*)
   int countForPage(int)
   cocos2d::CCLayer * layerForPage(int)
   ParentalOptionsLayer * nextPosition(int)
   int keyBackClicked()
   int objectsForPage(int)
   _DWORD * incrementCountForPage(int)
   cocos2d::CCDirector * init()
   cocos2d::CCLayerColor * create()
   int onInfo(cocos2d::CCObject*)
   int infoKey(int)
   int onClose(cocos2d::CCObject*)
   int pageKey(int)
   int goToPage(int)
   int layerKey(int)
   GameManager * onToggle(cocos2d::CCObject*)
   int addToggle(char const*, char const*, char const*)
   int objectKey(int)
   ParentalOptionsLayer * ~ParentalOptionsLayer()
   virtual ParentalOptionsLayer * ~ParentalOptionsLayer()
   virtual cocos2d::CCDirector * init(void)
   virtual int keyBackClicked(void)
}
class EndLevelLayer : GJDropDownLayer{
   const char * getEndText()
   int customSetup()
   signed int onEveryplay(cocos2d::CCObject*)
   EndLevelLayer * getCoinString()
   int playEndEffect()
   char * tryShowBanner(float)
   __int64 keyBackClicked()
   cocos2d::CCArray * playCoinEffect(float)
   cocos2d::CCAction * playStarEffect(float)
   int coinEnterFinished(cocos2d::CCPoint)
   int enterAnimFinished()
   cocos2d::CCAction * playDiamondEffect(float)
   int starEnterFinished()
   int coinEnterFinishedO(cocos2d::CCObject*)
   cocos2d::CCAction * playCurrencyEffect(float)
   int diamondEnterFinished()
   int currencyEnterFinished()
   int keyUp(cocos2d::enumKeyCodes)
   cocos2d::CCLayerColor * create()
   signed int goEdit()
   int onEdit(cocos2d::CCObject*)
   __int64 onMenu(cocos2d::CCObject*)
   cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   int onReplay(cocos2d::CCObject*)
   cocos2d::CCAction * showLayer(bool)
   cocos2d::CCLayerColor * EndLevelLayer()
   GJDropDownLayer * ~EndLevelLayer()
   virtual GJDropDownLayer * ~EndLevelLayer()
   virtual __int64 keyBackClicked(void)
   virtual cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   virtual int customSetup(void)
   virtual cocos2d::CCAction * showLayer(bool)
   virtual int enterAnimFinished(void)
   virtual int keyUp(cocos2d::enumKeyCodes)
}
class AchievementBar : cocos2d::CCNodeRGBA{
   int setOpacity(unsigned char)
   cocos2d::CCDirector * init(char const*, char const*, char const*, bool)
   cocos2d::CCAction * show()
   cocos2d::CCNodeRGBA * create(char const*, char const*, char const*, bool)
   AchievementBar * ~AchievementBar()
   virtual AchievementBar * ~AchievementBar()
   virtual int setOpacity(uchar)
}
class GJMoreGamesLayer : GJDropDownLayer{
   int customSetup()
   cocos2d::CCArray * getMoreGamesList()
   cocos2d::CCLayerColor * create()
   GJMoreGamesLayer * ~GJMoreGamesLayer()
   virtual GJMoreGamesLayer * ~GJMoreGamesLayer()
   virtual int customSetup(void)
}
class StatsLayer : GJDropDownLayer{
   int customSetup()
   cocos2d::CCLayerColor * create()
   StatsLayer * ~StatsLayer()
   virtual StatsLayer * ~StatsLayer()
   virtual int customSetup(void)
}
class TutorialLayer : FLAlertLayer{
   int keyBackClicked()
   int removeTutorialTexture()
   signed int init()
   cocos2d::CCLayerColor * create()
   _DWORD * onNext(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   _DWORD * loadPage(int)
   TutorialLayer * ~TutorialLayer()
   virtual TutorialLayer * ~TutorialLayer()
   virtual signed int init(void)
   virtual int keyBackClicked(void)
}
class SupportLayer : GJDropDownLayer, FLAlertLayerProtocol, UploadActionDelegate, UploadPopupDelegate{
   int customSetup()
    onGetReward(cocos2d::CCObject*)
   __int64 onLowDetail(cocos2d::CCObject*)
   int onClosePopup(UploadActionPopup*)
   SupportLayer * FLAlert_Clicked(FLAlertLayer*, bool)
   signed int onRequestAccess(cocos2d::CCObject*)
   _DWORD * sendSupportMail()
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint, cocos2d::CCArray*)
   int uploadActionFailed(int, int)
   SupportLayer * uploadActionFinished(int, int)
   int onFAQ(cocos2d::CCObject*)
   cocos2d::CCLayerColor * create()
   __int64 onEmail(cocos2d::CCObject*)
   int onRobTop(cocos2d::CCObject*)
   int exitLayer()
   int onCocos2d(cocos2d::CCObject*)
   GameLevelManager * onRestore(cocos2d::CCObject*)
   GJDropDownLayer * ~SupportLayer()
   virtual GJDropDownLayer * ~SupportLayer()
   virtual int customSetup(void)
   virtual SupportLayer * uploadActionFinished(int,int)
   virtual int uploadActionFailed(int,int)
   virtual int onClosePopup(UploadActionPopup *)
   virtual SupportLayer * FLAlert_Clicked(FLAlertLayer *,bool)
}
class SongInfoLayer : FLAlertLayer{
   int onDownload(cocos2d::CCObject*)
   int keyBackClicked()
   cocos2d::CCDirector * init(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onFB(cocos2d::CCObject*)
   int onNG(cocos2d::CCObject*)
   int onYT(cocos2d::CCObject*)
   cocos2d::CCLayerColor * create(int)
   cocos2d::CCLayerColor * create(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onClose(cocos2d::CCObject*)
   SongInfoLayer * ~SongInfoLayer()
   virtual SongInfoLayer * ~SongInfoLayer()
   virtual int keyBackClicked(void)
}
class SongsLayer : GJDropDownLayer{
   int customSetup()
   cocos2d::CCLayerColor * create()
   SongsLayer * ~SongsLayer()
   virtual SongsLayer * ~SongsLayer()
   virtual int customSetup(void)
}
class LevelCommentDelegate{
    setupPageInfo(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
    loadCommentsFailed(char const*)
    loadCommentsFinished(cocos2d::CCArray*, char const*)
    updateUserScoreFinished()
   virtual  loadCommentsFinished(cocos2d::CCArray *,char const*)
   virtual  loadCommentsFailed(char const*)
   virtual  updateUserScoreFinished(void)
   virtual  setupPageInfo(std::string,char const*)
}
class CommentUploadDelegate{
    commentDeleteFailed(int, int)
    commentUploadFailed(int, CommentError)
    commentUploadFinished(int)
   virtual  commentUploadFinished(int)
   virtual  commentUploadFailed(int,CommentError)
   virtual  commentDeleteFailed(int,int)
}
class InfoLayer : FLAlertLayer, LevelCommentDelegate, CommentUploadDelegate, FLAlertLayerProtocol{
   __int64 onNextPage(cocos2d::CCObject*)
   int onOriginal(cocos2d::CCObject*)
   __int64 onPrevPage(cocos2d::CCObject*)
   _DWORD * onLevelInfo(cocos2d::CCObject*)
   int reloadWindow()
   __int64 confirmReport(cocos2d::CCObject*)
   _DWORD * onCopyLevelID(cocos2d::CCObject*)
   __int64 onGetComments(cocos2d::CCObject*)
   unsigned int setupPageInfo(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
   signed int keyBackClicked()
   int setupLevelInfo()
   GameLevelManager * FLAlert_Clicked(FLAlertLayer*, bool)
   cocos2d::CCObject * getSpriteButton(char const*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), cocos2d::CCMenu*, float, cocos2d::CCPoint)
   GameLevelManager * onRefreshComments(cocos2d::CCObject*)
   __int64 toggleCommentMode(cocos2d::CCObject*)
   int updateLevelsLabel()
   int loadCommentsFailed(char const*)
   int toggleExtendedMode(cocos2d::CCObject*)
   __int64 commentUploadFailed(int, CommentError)
   int loadCommentsFinished(cocos2d::CCArray*, char const*)
   int setupCommentsBrowser(cocos2d::CCArray*)
   int commentUploadFinished(int)
   int toggleSmallCommentMode(cocos2d::CCObject*)
   int updateUserScoreFinished()
   int updateCommentModeButtons()
   int registerWithTouchDispatcher()
   signed int init(GJGameLevel*, GJUserScore*)
   __int64 show()
   cocos2d::CCLayer * create(GJGameLevel*, GJUserScore*)
   ProfilePage * onMore(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   __int64 loadPage(int, bool)
   int isCorrect(char const*)
   int onComment(cocos2d::CCObject*)
   int onSimilar(cocos2d::CCObject*)
   cocos2d::CCLayerColor * InfoLayer()
   InfoLayer * ~InfoLayer()
   virtual InfoLayer * ~InfoLayer()
   virtual int registerWithTouchDispatcher(void)
   virtual signed int keyBackClicked(void)
   virtual __int64 show(void)
   virtual int loadCommentsFinished(cocos2d::CCArray *,char const*)
   virtual int loadCommentsFailed(char const*)
   virtual unsigned int setupPageInfo(std::string,char const*)
   virtual int commentUploadFinished(int)
   virtual __int64 commentUploadFailed(int,CommentError)
   virtual int updateUserScoreFinished(void)
   virtual GameLevelManager * FLAlert_Clicked(FLAlertLayer *,bool)
}
class ShareCommentLayer : FLAlertLayer, TextInputDelegate, UploadActionDelegate, UploadPopupDelegate{
   _DWORD * textChanged(CCTextInputNode*)
   int onClosePopup(UploadActionPopup*)
   int keyBackClicked()
   int updateDescText(char const*)
   _DWORD * textInputClosed(CCTextInputNode*)
   ShareCommentLayer * textInputOpened(CCTextInputNode*)
   int updatePercentLabel()
   int uploadActionFailed(int, int)
   int updateCharCountLabel()
   int uploadActionFinished(int, int)
   int registerWithTouchDispatcher()
   cocos2d::CCDirector * init(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, CommentType, int)
   cocos2d::CCLayerColor * create(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, CommentType, int)
   int onClose(cocos2d::CCObject*)
   int onShare(cocos2d::CCObject*)
   int onPercent(cocos2d::CCObject*)
   cocos2d::CCLayerColor * ShareCommentLayer()
   ShareCommentLayer * ~ShareCommentLayer()
   virtual ShareCommentLayer * ~ShareCommentLayer()
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual ShareCommentLayer * textInputOpened(CCTextInputNode *)
   virtual _DWORD * textInputClosed(CCTextInputNode *)
   virtual _DWORD * textChanged(CCTextInputNode *)
   virtual int uploadActionFinished(int,int)
   virtual int uploadActionFailed(int,int)
   virtual int onClosePopup(UploadActionPopup *)
}
class LocalLevelManager : GManager{
   int dataLoaded(DS_Dictionary*)
   int sharedState()
   int encodeDataTo(DS_Dictionary*)
   LocalLevelManager * getLoadString(int)
   void reorderLevels()
   int moveLevelToTop(GJGameLevel*)
   int setLocalLevels(cocos2d::CCArray*)
   cocos2d::CCArray * getCreatedLevels(int)
   unsigned int updateLevelOrder()
   cocos2d::CCDictionary * getAllLevelsInDict()
   int * getMainLevelString(int)
   unsigned int updateLevelRevision()
   cocos2d::CCArray * getAllLevelsWithName(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCDictionary * getLevelsInNameGroups()
   unsigned int markLevelsAsUnmodified()
   signed int init()
   int firstLoad()
   LocalLevelManager * ~LocalLevelManager()
   virtual LocalLevelManager * ~LocalLevelManager()
   virtual signed int init(void)
   virtual int encodeDataTo(DS_Dictionary *)
   virtual int dataLoaded(DS_Dictionary *)
   virtual int firstLoad(void)
}
class LikeItemLayer : FLAlertLayer{
   int triggerLike(bool)
   int keyBackClicked()
   cocos2d::CCDirector * init(LikeItemType, int, int)
   cocos2d::CCLayerColor * create(LikeItemType, int, int)
   int onLike(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   int onDislike(cocos2d::CCObject*)
   LikeItemLayer * ~LikeItemLayer()
   virtual LikeItemLayer * ~LikeItemLayer()
   virtual int keyBackClicked(void)
}
class PromoInterstitial : FLAlertLayer{
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int keyBackClicked()
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   cocos2d::CCDirector * init(bool)
   int show()
   int setup()
   cocos2d::CCLayerColor * create(bool)
   int onClick(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   PromoInterstitial * ~PromoInterstitial()
   virtual PromoInterstitial * ~PromoInterstitial()
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int keyBackClicked(void)
   virtual int show(void)
}
class GJGroundLayer : cocos2d::CCLayer{
   int createLine(int)
   int getGroundY()
   int showGround()
   int hideShadows()
   cocos2d::CCAction * fadeInGround(float)
   int fadeOutGround(float)
   int fadeInFinished()
   int positionGround(float)
   int updateGroundPos(cocos2d::CCPoint)
   int updateLineBlend(bool)
   void deactivateGround()
   int loadGroundSprites(int, bool)
   cocos2d::CCDirector * updateGroundWidth()
   unsigned int updateGround01Color(cocos2d::_ccColor3B)
   unsigned int updateGround02Color(cocos2d::_ccColor3B)
    draw()
   cocos2d::CCDirector * init(int, int)
   int create(int, int)
   GJGroundLayer * ~GJGroundLayer()
   virtual GJGroundLayer * ~GJGroundLayer()
   virtual  draw(void)
   virtual int showGround(void)
   virtual cocos2d::CCAction * fadeInGround(float)
   virtual int fadeOutGround(float)
}
class GJFlyGroundLayer : GJGroundLayer{
   signed int init()
   cocos2d::CCLayer * create()
   GJFlyGroundLayer * ~GJFlyGroundLayer()
   virtual GJFlyGroundLayer * ~GJFlyGroundLayer()
   virtual signed int init(void)
}
class RetryLevelLayer : GJDropDownLayer{
   const char * getEndText()
   _DWORD * customSetup()
   signed int onEveryplay(cocos2d::CCObject*)
   int keyBackClicked()
   int enterAnimFinished()
   int setupLastProgress()
   int keyUp(cocos2d::enumKeyCodes)
   cocos2d::CCLayerColor * create()
   __int64 onMenu(cocos2d::CCObject*)
   cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   int onReplay(cocos2d::CCObject*)
   cocos2d::CCAction * showLayer(bool)
   RetryLevelLayer * ~RetryLevelLayer()
   virtual RetryLevelLayer * ~RetryLevelLayer()
   virtual int keyBackClicked(void)
   virtual cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   virtual _DWORD * customSetup(void)
   virtual cocos2d::CCAction * showLayer(bool)
   virtual int enterAnimFinished(void)
   virtual int keyUp(cocos2d::enumKeyCodes)
}
class ObjectToolbox : cocos2d::CCNode{
   const char * frameToKey(char const*)
   int keyToFrame(char const*)
   int sharedState()
   int intKeyToFrame(int)
   signed int gridNodeSizeForKey(int)
   const char * perspectiveBlockFrame(int)
   cocos2d::CCDictionary * init()
   cocos2d::CCArray * allKeys()
   ObjectToolbox * ~ObjectToolbox()
   virtual ObjectToolbox * ~ObjectToolbox()
   virtual cocos2d::CCDictionary * init(void)
}
class LeaderboardManagerDelegate{
    loadLeaderboardFailed(char const*)
    updateUserScoreFailed()
    loadLeaderboardFinished(cocos2d::CCArray*, char const*)
    updateUserScoreFinished()
   virtual  updateUserScoreFinished(void)
   virtual  updateUserScoreFailed(void)
   virtual  loadLeaderboardFinished(cocos2d::CCArray *,char const*)
   virtual  loadLeaderboardFailed(char const*)
   virtual  base class' type descriptor
}
class LeaderboardsLayer : cocos2d::CCLayer, LeaderboardManagerDelegate{
   int onCreators(cocos2d::CCObject*)
   unsigned int refreshTabs()
   signed int keyBackClicked()
   unsigned int toggleTabButtons()
   LeaderboardsLayer * selectLeaderboard(LeaderboardState)
   unsigned int setupLevelBrowser(cocos2d::CCArray*)
   _DWORD * loadLeaderboardFailed(char const*)
   int updateUserScoreFailed()
   signed int loadLeaderboardFinished(cocos2d::CCArray*, char const*)
   int updateUserScoreFinished()
   GameManager * init(LeaderboardState)
   int onTop(cocos2d::CCObject*)
   AppDelegate * scene(LeaderboardState)
   cocos2d::CCLayer * create(LeaderboardState)
   signed int onBack(cocos2d::CCObject*)
   signed __int64 onInfo(cocos2d::CCObject*)
   int onWeek(cocos2d::CCObject*)
   int onGlobal(cocos2d::CCObject*)
   signed int isCorrect(char const*)
   int setupTabs()
   LeaderboardsLayer * ~LeaderboardsLayer()
   virtual LeaderboardsLayer * ~LeaderboardsLayer()
   virtual signed int keyBackClicked(void)
   virtual int updateUserScoreFinished(void)
   virtual int updateUserScoreFailed(void)
   virtual signed int loadLeaderboardFinished(cocos2d::CCArray *,char const*)
   virtual _DWORD * loadLeaderboardFailed(char const*)
}
class SetIDLayer : FLAlertLayer{
   int keyBackClicked()
   cocos2d::CCDirector * init(GameObject*)
   int onUp(cocos2d::CCObject*)
   cocos2d::CCLayerColor * create(GameObject*)
   int onDown(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   int updateID()
   SetIDLayer * ~SetIDLayer()
   virtual SetIDLayer * ~SetIDLayer()
   virtual int keyBackClicked(void)
}
class LevelFeatureLayer : FLAlertLayer{
   int updateStars()
   int onToggleEpic(cocos2d::CCObject*)
   int onSetEpicOnly(cocos2d::CCObject*)
   int onSetFeatured(cocos2d::CCObject*)
   int keyBackClicked()
   int onRemoveValues(cocos2d::CCObject*)
   signed int init(int)
   int onUp(cocos2d::CCObject*)
   int onUp2(cocos2d::CCObject*)
   cocos2d::CCLayerColor * create(int)
   int onDown(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   int onDown2(cocos2d::CCObject*)
   LevelFeatureLayer * ~LevelFeatureLayer()
   virtual LevelFeatureLayer * ~LevelFeatureLayer()
   virtual int keyBackClicked(void)
}
class NumberInputLayer : FLAlertLayer{
   int deleteLast()
   int inputNumber(int)
   int keyBackClicked()
   int updateNumberState()
   int registerWithTouchDispatcher()
   int init()
   cocos2d::CCLayerColor * create()
   int onDone(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   int onNumber(cocos2d::CCObject*)
   NumberInputLayer * ~NumberInputLayer()
   virtual NumberInputLayer * ~NumberInputLayer()
   virtual int init(void)
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
}
class RateStarsLayer : FLAlertLayer, UploadPopupDelegate, UploadActionDelegate{
   int onClosePopup(UploadActionPopup*)
   int selectRating(cocos2d::CCObject*)
   int onToggleCoins(cocos2d::CCObject*)
   cocos2d::CCObject * getStarsButton(int, void (cocos2d::CCObject::*)(cocos2d::CCObject*), cocos2d::CCMenu*, float)
   int keyBackClicked()
   int onToggleFeature(cocos2d::CCObject*)
   int uploadActionFailed(int, int)
   int uploadActionFinished(int, int)
   cocos2d::CCDirector * init(int, bool)
   cocos2d::CCLayerColor * create(int, bool)
   int onRate(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   cocos2d::CCLayerColor * RateStarsLayer()
   RateStarsLayer * ~RateStarsLayer()
   virtual RateStarsLayer * ~RateStarsLayer()
   virtual int keyBackClicked(void)
   virtual int uploadActionFinished(int,int)
   virtual int uploadActionFailed(int,int)
   virtual int onClosePopup(UploadActionPopup *)
}
class ObjectDecoderDelegate{
   int getDecodedObject(int, DS_Dictionary*)
   virtual int getDecodedObject(int,DS_Dictionary *)
}
class GJObjectDecoder : cocos2d::CCNode, ObjectDecoderDelegate{
   int sharedDecoder()
   GJGameLevel * getDecodedObject(int, DS_Dictionary*)
   _DWORD init()
   GJObjectDecoder * ~GJObjectDecoder()
   virtual GJObjectDecoder * ~GJObjectDecoder()
   virtual _DWORD init(void)
   virtual GJGameLevel * getDecodedObject(int,DS_Dictionary *)
}
class PointNode : cocos2d::CCObject{
   signed int init(cocos2d::CCPoint)
   void * create(cocos2d::CCPoint)
   PointNode * ~PointNode()
   virtual PointNode * ~PointNode()
   virtual  o type's name
}
class HardStreak : cocos2d::CCDrawNode{
   void firstSetup()
   char * stopStroke()
   __int64 resumeStroke()
   unsigned int updateStroke(float)
   int normalizeAngle(double)
   unsigned int clearBehindXPos(float)
   int quadCornerOffset(cocos2d::CCPoint, cocos2d::CCPoint, float)
   cocos2d::CCArray * init()
   int reset()
   cocos2d::CCDrawNode * create()
   int addPoint(cocos2d::CCPoint)
   HardStreak * ~HardStreak()
   virtual HardStreak * ~HardStreak()
   virtual cocos2d::CCArray * init(void)
}
class PlatformDownloadDelegate{
    downloadFailed(char const*)
    downloadFinished(char const*)
   virtual  downloadFinished(char const*)
   virtual  downloadFailed(char const*)
   virtual  r
}
class MusicDelegateHandler : cocos2d::CCNode{
   signed int init(MusicDownloadDelegate*)
   cocos2d::CCNode * create(MusicDownloadDelegate*)
   MusicDelegateHandler * ~MusicDelegateHandler()
   virtual MusicDelegateHandler * ~MusicDelegateHandler()
}
class MusicDownloadManager : cocos2d::CCNode, PlatformDownloadDelegate{
   int dataLoaded(DS_Dictionary*)
   _DWORD * deleteSong(int)
   int firstSetup()
   __int64 handleItND(cocos2d::CCNode*, void*)
   _BOOL4 isDLActive(char const*)
   cocos2d::CCArray * getAllSongs()
   int getDLObject(char const*)
   int getSongInfo(int, bool)
   int * pathForSong(int)
   int sharedState()
   unsigned int downloadSong(int)
   int encodeDataTo(DS_Dictionary*)
   _DWORD * stopDownload(int)
   _DWORD * addDLToActive(char const*)
   _DWORD * addDLToActive(char const*, cocos2d::CCObject*)
   int getSongInfoKey(int)
   cocos2d::CCDictionary * responseToDict(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
   unsigned int createSongsInfo(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int getSongPriority()
   int handleItDelayed(bool, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, GJHttpType)
   unsigned int clearUnusedSongs()
   int isSongDownloaded(int)
   unsigned int songStateChanged()
   int getSongInfoObject(int)
   unsigned int downloadSongFailed(int, GJSongError)
   cocos2d::CCArray * getDownloadedSongs()
   int getSongDownloadKey(int)
   unsigned int loadSongInfoFailed(int, GJSongError)
   int ProcessHttpRequest(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, GJHttpType)
   _DWORD * removeDLFromActive(char const*)
   signed int getDownloadProgress(int)
   unsigned int downloadSongFinished(SongInfoObject*)
   unsigned int limitDownloadedSongs()
   unsigned int loadSongInfoFinished(SongInfoObject*)
   unsigned int onGetSongInfoCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int setDownloadedSongsDict(cocos2d::CCDictionary*)
   cocos2d::CCNode * addSongObjectFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onDownloadSongCompleted(cocos2d::extension::CCHttpClient*, cocos2d::extension::CCHttpResponse*)
   int addMusicDownloadDelegate(MusicDownloadDelegate*)
   int incrementPriorityForSong(int)
   _BOOL4 isRunningActionForSongID(int)
   int * removeMusicDownloadDelegate(MusicDownloadDelegate*)
   _DWORD * onProcessHttpRequestCompleted(cocos2d::extension::CCHttpClient*, cocos2d::extension::CCHttpResponse*)
   cocos2d::CCDictionary * init()
   int showTOS(FLAlertLayerProtocol*)
   int handleIt(bool, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, GJHttpType)
   _DWORD * clearSong(int)
   MusicDownloadManager * ~MusicDownloadManager()
   virtual MusicDownloadManager * ~MusicDownloadManager()
   virtual cocos2d::CCDictionary * init(void)
}
class SongInfoObject : cocos2d::CCNode{
   cocos2d::CCNode * createWithCoder(DS_Dictionary*)
   int encodeWithCoder(DS_Dictionary*)
   signed int init(int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, float, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int)
   cocos2d::CCNode * create(int)
   cocos2d::CCNode * create(int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, float, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int)
   cocos2d::CCNode * create(cocos2d::CCDictionary*)
   signed int canEncode()
   SongInfoObject * ~SongInfoObject()
   virtual SongInfoObject * ~SongInfoObject()
   virtual int encodeWithCoder(DS_Dictionary *)
   virtual signed int canEncode(void)
}
class GJDropDownLayerDelegate{
    dropDownLayerWillClose(GJDropDownLayer*)
   virtual  dropDownLayerWillClose(GJDropDownLayer *)
}
class CustomSongLayer : FLAlertLayer, FLAlertLayerProtocol, TextInputDelegate, GJDropDownLayerDelegate{
   int onSupporter(cocos2d::CCObject*)
   int textChanged(CCTextInputNode*)
   int onGuidelines(cocos2d::CCObject*)
   int onNewgrounds(cocos2d::CCObject*)
   int onCreateLines(cocos2d::CCObject*)
   int onSongBrowser(cocos2d::CCObject*)
   int keyBackClicked()
   cocos2d::CCApplication * FLAlert_Clicked(FLAlertLayer*, bool)
   _DWORD * textInputClosed(CCTextInputNode*)
   _DWORD * textInputOpened(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   __int64 showNewgroundsMessage()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int dropDownLayerWillClose(GJDropDownLayer*)
   signed int init(LevelSettingsObject*)
   int show()
   cocos2d::CCLayerColor * create(LevelSettingsObject*)
   __int64 onInfo(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   int onSearch(cocos2d::CCObject*)
   int onArtists(cocos2d::CCObject*)
   __int64 onChanges(cocos2d::CCObject*)
   int onOptions(cocos2d::CCObject*)
   CustomSongLayer * ~CustomSongLayer()
   virtual CustomSongLayer * ~CustomSongLayer()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textChanged(CCTextInputNode *)
   virtual _DWORD * textInputOpened(CCTextInputNode *)
   virtual _DWORD * textInputClosed(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
   virtual int dropDownLayerWillClose(GJDropDownLayer *)
   virtual cocos2d::CCApplication * FLAlert_Clicked(FLAlertLayer *,bool)
}
class SongOptionsLayer : FLAlertLayer{
   int onPlayback(cocos2d::CCObject*)
   int keyBackClicked()
   int updatePlaybackBtn()
   cocos2d::CCDirector * init(LevelSettingsObject*)
   cocos2d::CCLayerColor * create(LevelSettingsObject*)
   __int64 onInfo(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   int onFadeIn(cocos2d::CCObject*)
   int onFadeOut(cocos2d::CCObject*)
   SongOptionsLayer * ~SongOptionsLayer()
   virtual SongOptionsLayer * ~SongOptionsLayer()
   virtual int keyBackClicked(void)
}
class HSVWidgetPopupDelegate{
   void hsvPopupClosed(HSVWidgetPopup*, cocos2d::_ccHSVValue)
   virtual void hsvPopupClosed(HSVWidgetPopup *,cocos2d::_ccHSVValue)
}
class ColorSetupDelegate{
    colorSetupClosed(int)
   virtual  colorSetupClosed(int)
}
class CustomizeObjectLayer : FLAlertLayer, TextInputDelegate, HSVWidgetPopupDelegate, ColorSelectDelegate, ColorSetupDelegate{
   int onEditColor(cocos2d::CCObject*)
   int textChanged(CCTextInputNode*)
   int onBreakApart(cocos2d::CCObject*)
   int onSelectMode(cocos2d::CCObject*)
   int onToggleGlow(cocos2d::CCObject*)
   signed int getActiveMode(bool)
   int onSelectColor(cocos2d::CCObject*)
   int toggleVisible()
   int getButtonByTag(int)
   int hsvPopupClosed(HSVWidgetPopup*, cocos2d::_ccHSVValue)
   int keyBackClicked()
   GameObject * updateSelected(int)
   int textInputClosed(CCTextInputNode*)
   _DWORD * textInputOpened(CCTextInputNode*)
   int colorSetupClosed(int)
   int updateHSVButtons()
   int colorSelectClosed(cocos2d::CCNode*)
   int highlightSelected(ButtonSprite*)
   int updateColorSprite()
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint)
   int onNextColorChannel(cocos2d::CCObject*)
   int updateChannelLabel(int)
   int onUpdateCustomColor(cocos2d::CCObject*)
   unsigned int determineStartValues()
   int updateCurrentSelection()
   _DWORD * updateCustomColorLabels()
   cocos2d::CCArray * init(GameObject*, cocos2d::CCArray*)
   int onHSV(cocos2d::CCObject*)
   cocos2d::CCNodeRGBA * create(GameObject*, cocos2d::CCArray*)
   CustomizeObjectLayer * getHSV()
   int onCopy(cocos2d::CCObject*)
   int onClear(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   int onPaste(cocos2d::CCObject*)
   int onBrowse(cocos2d::CCObject*)
   cocos2d::CCLayerColor * CustomizeObjectLayer()
   CustomizeObjectLayer * ~CustomizeObjectLayer()
   virtual CustomizeObjectLayer * ~CustomizeObjectLayer()
   virtual int keyBackClicked(void)
   virtual _DWORD * textInputOpened(CCTextInputNode *)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual int hsvPopupClosed(HSVWidgetPopup *,cocos2d::_ccHSVValue)
   virtual int colorSelectClosed(cocos2d::CCNode *)
   virtual int colorSetupClosed(int)
}
class GJAccountManager : cocos2d::CCNode{
   int dataLoaded(DS_Dictionary*)
   _DWORD firstSetup()
   __int64 handleItND(cocos2d::CCNode*, void*)
   _BOOL4 isDLActive(char const*)
   int getDLObject(char const*)
   int sharedState()
   signed int syncAccount(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int encodeDataTo(DS_Dictionary*)
   signed int loginAccount(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * addDLToActive(char const*)
   _DWORD * addDLToActive(char const*, cocos2d::CCObject*)
   signed int backupAccount(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   MenuLayer * linkToAccount(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int)
   int handleItDelayed(bool, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, GJHttpType)
   signed int registerAccount(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int getAccountSyncURL()
   MenuLayer * unlinkFromAccount()
   int ProcessHttpRequest(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, GJHttpType)
   _DWORD * removeDLFromActive(char const*)
   signed int getAccountBackupURL()
   signed int updateAccountSettings(int, int, int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onSyncAccountCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onLoginAccountCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onBackupAccountCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onRegisterAccountCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onGetAccountSyncURLCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * onProcessHttpRequestCompleted(cocos2d::extension::CCHttpClient*, cocos2d::extension::CCHttpResponse*)
   _DWORD * onGetAccountBackupURLCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onUpdateAccountSettingsCompleted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCDictionary * init()
   GJAccountManager * getGJP()
   int handleIt(bool, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, GJHttpType)
   GJAccountManager * ~GJAccountManager()
   virtual GJAccountManager * ~GJAccountManager()
   virtual cocos2d::CCDictionary * init(void)
}
class GJAccountDelegate{
    accountStatusChanged()
   virtual  accountStatusChanged(void)
}
class GJAccountBackupDelegate{
    backupAccountFailed(BackupAccountError)
    backupAccountFinished()
   virtual  backupAccountFinished(void)
   virtual  backupAccountFailed(BackupAccountError)
}
class GJAccountSyncDelegate{
    syncAccountFailed(BackupAccountError)
    syncAccountFinished()
   virtual  syncAccountFinished(void)
   virtual  syncAccountFailed(BackupAccountError)
   virtual  ptor
}
class AccountLayer : GJDropDownLayer, GJAccountDelegate, GJAccountBackupDelegate, GJAccountSyncDelegate, FLAlertLayerProtocol{
   int onRegister(cocos2d::CCObject*)
   int updatePage(bool)
   int customSetup()
   int layerHidden()
   int hideLoadingUI()
   int showLoadingUI()
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int syncAccountFailed(BackupAccountError)
   int createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint)
   int backupAccountFailed(BackupAccountError)
   int syncAccountFinished()
   int accountStatusChanged()
   int backupAccountFinished()
   cocos2d::CCObject * create()
   int doSync()
   __int64 onHelp(cocos2d::CCObject*)
   int onMore(cocos2d::CCObject*)
   int onSync(cocos2d::CCObject*)
   int onLogin(cocos2d::CCObject*)
   int doBackup()
   int onBackup(cocos2d::CCObject*)
   int toggleUI(bool)
   int exitLayer()
   cocos2d::CCLayerColor * AccountLayer()
   GJDropDownLayer * ~AccountLayer()
   virtual GJDropDownLayer * ~AccountLayer()
   virtual int customSetup(void)
   virtual int layerHidden(void)
   virtual int backupAccountFinished(void)
   virtual int backupAccountFailed(BackupAccountError)
   virtual int syncAccountFinished(void)
   virtual int syncAccountFailed(BackupAccountError)
   virtual int accountStatusChanged(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
}
class AccountHelpLayer : GJDropDownLayer, GJAccountDelegate, FLAlertLayerProtocol{
   int updatePage()
   int customSetup()
   int layerHidden()
   __int64 verifyUnlink()
   int FLAlert_Clicked(FLAlertLayer*, bool)
   __int64 onAccountManagement(cocos2d::CCObject*)
   int accountStatusChanged()
   cocos2d::CCLayerColor * create()
   int doUnlink()
   int onUnlink(cocos2d::CCObject*)
   int exitLayer()
   int onReLogin(cocos2d::CCObject*)
   GJDropDownLayer * ~AccountHelpLayer()
   virtual GJDropDownLayer * ~AccountHelpLayer()
   virtual int customSetup(void)
   virtual int layerHidden(void)
   virtual int accountStatusChanged(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
}
class GJAccountRegisterDelegate{
    registerAccountFailed(AccountError)
    registerAccountFinished()
   virtual  registerAccountFinished(void)
   virtual  registerAccountFailed(AccountError)
}
class GJAccountLoginDelegate{
    loginAccountFailed(AccountError)
    loginAccountFinished(int, int)
   virtual  loginAccountFinished(int,int)
   virtual  loginAccountFailed(AccountError)
   virtual  tor
}
class AccountRegisterLayer : FLAlertLayer, TextInputDelegate, GJAccountRegisterDelegate, FLAlertLayerProtocol{
   int resetLabel(int)
   int validEmail(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int resetLabels()
   int textChanged(CCTextInputNode*)
   int updateLabel(AccountError)
   int disableNodes()
   int hideLoadingUI()
   int showLoadingUI()
   _BOOL4 validPassword(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int allowTextInput(CCTextInputNode*)
   int keyBackClicked()
   cocos2d::CCObject * createTextInput(cocos2d::CCPoint, cocos2d::CCSize, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int)
   cocos2d::CCLabelBMFont * createTextLabel(cocos2d::CCPoint, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, cocos2d::CCSize)
   int FLAlert_Clicked(FLAlertLayer*, bool)
   _DWORD * textInputClosed(CCTextInputNode*)
   int textInputOpened(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   cocos2d::extension::CCScale9Sprite * createTextBackground(cocos2d::CCPoint, cocos2d::CCSize)
   int registerAccountFailed(AccountError)
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int registerAccountFinished()
   int registerWithTouchDispatcher()
   cocos2d::CCDirector * init()
   cocos2d::CCLayerColor * create()
   int onClose(cocos2d::CCObject*)
   _DWORD * onSubmit(cocos2d::CCObject*)
   int toggleUI(bool)
   _BOOL4 validUser(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCLayerColor * AccountRegisterLayer()
   AccountRegisterLayer * ~AccountRegisterLayer()
   virtual AccountRegisterLayer * ~AccountRegisterLayer()
   virtual cocos2d::CCDirector * init(void)
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual int textInputOpened(CCTextInputNode *)
   virtual _DWORD * textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
   virtual int allowTextInput(CCTextInputNode *)
   virtual int registerAccountFinished(void)
   virtual int registerAccountFailed(AccountError)
}
class AccountLoginLayer : FLAlertLayer, TextInputDelegate, GJAccountLoginDelegate, FLAlertLayerProtocol{
   int resetLabel(int)
   int resetLabels()
   int textChanged(CCTextInputNode*)
   int updateLabel(AccountError)
   int disableNodes()
   int onForgotUser(cocos2d::CCObject*)
   int hideLoadingUI()
   int showLoadingUI()
   int keyBackClicked()
   cocos2d::CCObject * createTextInput(cocos2d::CCPoint, cocos2d::CCSize, char const*, int)
   cocos2d::CCLabelBMFont * createTextLabel(cocos2d::CCPoint, char const*, cocos2d::CCSize)
   int FLAlert_Clicked(FLAlertLayer*, bool)
   _DWORD * textInputClosed(CCTextInputNode*)
   int textInputOpened(CCTextInputNode*)
   int onForgotPassword(cocos2d::CCObject*)
   int loginAccountFailed(AccountError)
   cocos2d::extension::CCScale9Sprite * createTextBackground(cocos2d::CCPoint, char const*, cocos2d::CCSize)
   int loginAccountFinished(int, int)
   int registerWithTouchDispatcher()
   cocos2d::CCDirector * init(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::extension::CCScale9Sprite * create(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onClose(cocos2d::CCObject*)
   int onSubmit(cocos2d::CCObject*)
   int toggleUI(bool)
   int AccountLoginLayer()
   AccountLoginLayer * ~AccountLoginLayer()
   virtual AccountLoginLayer * ~AccountLoginLayer()
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual int textInputOpened(CCTextInputNode *)
   virtual _DWORD * textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual int loginAccountFinished(int,int)
   virtual int loginAccountFailed(AccountError)
}
class KeybindingsLayer : FLAlertLayer{
   cocos2d::CCLabelBMFont * addKeyPair(char const*, char const*)
   int onNextPage(cocos2d::CCObject*)
   int onPrevPage(cocos2d::CCObject*)
   int countForPage(int)
   cocos2d::CCLayer * layerForPage(int)
   KeybindingsLayer * nextPosition(int)
   int keyBackClicked()
   int objectsForPage(int)
   _DWORD * incrementCountForPage(int)
   signed int init()
   cocos2d::CCLayerColor * create()
   int onInfo(cocos2d::CCObject*)
   int infoKey(int)
   int onClose(cocos2d::CCObject*)
   int pageKey(int)
   int goToPage(int)
   int layerKey(int)
   GameManager * onToggle(cocos2d::CCObject*)
   int objectKey(int)
   KeybindingsLayer * ~KeybindingsLayer()
   virtual KeybindingsLayer * ~KeybindingsLayer()
   virtual signed int init(void)
   virtual int keyBackClicked(void)
}
class KeybindingsManager : cocos2d::CCNode{
   int dataLoaded(DS_Dictionary*)
   int firstSetup()
   int sharedState()
   int encodeDataTo(DS_Dictionary*)
   int commandForKey(cocos2d::enumKeyCodes, GJKeyGroup, bool, bool, bool)
   int keyForCommand(GJKeyCommand)
   signed int groupForCommand(GJKeyCommand)
   int commandForKeyMods(cocos2d::enumKeyCodes, GJKeyGroup)
   int commandForKeyNoMods(cocos2d::enumKeyCodes, GJKeyGroup)
   int setCommandToKeyDict(cocos2d::CCDictionary*)
   int setKeyToCommandDict(cocos2d::CCDictionary*)
   int commandToKeyForGroup(GJKeyGroup)
   int keyToCommandForGroup(GJKeyGroup)
   signed int init()
   KeybindingsManager * ~KeybindingsManager()
   virtual KeybindingsManager * ~KeybindingsManager()
   virtual signed int init(void)
}
class CCNodeContainer : cocos2d::CCNode{
   _DWORD init()
   int visit()
   void * create()
   CCNodeContainer * ~CCNodeContainer()
   virtual CCNodeContainer * ~CCNodeContainer()
   virtual _DWORD init(void)
   virtual int visit(void)
}
class GJBaseGameLayer : cocos2d::CCLayer, TriggerEffectDelegate{
   int addToGroup(GameObject*, int, bool)
   signed int atlasValue(int)
   int bumpPlayer(PlayerObject*, GameObject*)
   unsigned int pushButton(int, bool)
   int spawnGroup(int)
   int updateOBB2(cocos2d::CCRect)
   int addToGroups(GameObject*, bool)
   int collectItem(int, int)
    flipGravity(PlayerObject*, bool, bool)
   int setupLayers()
   int toggleGroup(int, bool)
   int updateColor(cocos2d::_ccColor3B, float, int, bool, float, cocos2d::_ccHSVValue, int, bool, int, EffectGameObject*)
   int addToSection(GameObject*)
   unsigned int releaseButton(int, bool)
   int sectionForPos(float)
   cocos2d::CCObject * getStaticGroup(int)
   int updateCounters(int, int)
   int collectedObject(EffectGameObject*)
   int objectsCollided(int, int)
   int objectTriggered(EffectGameObject*)
   int parentForZLayer(int, bool, int)
   int removeFromGroup(GameObject*, int)
   int addObjectCounter(LabelGameObject*, int)
   int createTextLayers()
   int loadUpToPosition(float)
   int removeFromGroups(GameObject*)
   int checkSpawnObjects()
   cocos2d::CCObject * createMoveCommand(cocos2d::CCPoint, int, float, int, float, bool, bool, int)
   GJBaseGameLayer * getCapacityString()
   cocos2d::CCObject * getOptimizedGroup(int)
   signed int playerTouchedRing(PlayerObject*, GameObject*)
   unsigned int optimizeMoveGroups()
   int processColorObject(EffectGameObject*, int, cocos2d::CCDictionary*, float, GJEffectManager*)
   int processMoveActions()
   int resetGroupCounters(bool)
   int triggerMoveCommand(EffectGameObject*)
   int updateQueuedLabels()
   int spawnGroupTriggered(int, float, int)
   cocos2d::CCArray * staticObjectsInRect(cocos2d::CCRect)
   cocos2d::CCObject * stopTriggersInGroup(int)
   unsigned int updateLayerCapacity(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
    calculateColorValues(EffectGameObject*, EffectGameObject*, int, float, ColorActionSprite*, GJEffectManager*)
   void processFollowActions()
   int processOpacityObject(EffectGameObject*, cocos2d::CCDictionary*, float, GJEffectManager*)
   signed int rectIntersectsCircle(cocos2d::CCRect, cocos2d::CCPoint, float)
   int refreshCounterLabels()
   int reorderObjectSection(GameObject*)
   int toggleGroupTriggered(int, bool)
   cocos2d::CCArray * damagingObjectsInRect(cocos2d::CCRect)
   _BOOL4 shouldExitHackedLevel()
   int * updateCollisionBlocks()
   int calculateOpacityValues(EffectGameObject*, EffectGameObject*, float, GJEffectManager*)
   unsigned int enableHighCapacityMode()
   signed int getGroundHeightForMode(int)
   GJBaseGameLayer * getMoveDeltaForObjects(int, int)
   signed int objectIntersectsCircle(GameObject*, GameObject*)
   void processMoveActionsStep(float)
   int processRotationActions()
   int togglePlayerVisibility(bool)
   int removeObjectFromSection(GameObject*)
   int resetMoveOptimizedValue()
   int testInstantCountTrigger(int, int, int, bool, int)
   signed int isGroupDisabledForObject(GameObject*)
   unsigned int updateLegacyLayerCapacity(int, int, int, int)
   int processPlayerFollowActions(float)
   cocos2d::CCArray * isGroupDisabledForObjectFull(GameObject*, cocos2d::CCArray*)
   int updateDisabledObjectsLastPos(cocos2d::CCArray*)
   cocos2d::CCArray * init()
   cocos2d::CCObject * getGroup(int)
   cocos2d::CCLayer * GJBaseGameLayer()
   GJBaseGameLayer * ~GJBaseGameLayer()
   virtual GJBaseGameLayer * ~GJBaseGameLayer()
   virtual cocos2d::CCArray * init(void)
   virtual int objectsCollided(int,int)
   virtual cocos2d::CCObject * createMoveCommand(cocos2d::CCPoint,int,float,int,float,bool,bool,int)
   virtual int updateColor(cocos2d::_ccColor3B,float,int,bool,float,cocos2d::_ccHSVValue,int,bool,int,EffectGameObject *)
   virtual  flipGravity(PlayerObject *,bool,bool)
   virtual  calculateColorValues(EffectGameObject *,EffectGameObject *,int,float,ColorActionSprite *,GJEffectManager *)
   virtual int toggleGroupTriggered(int,bool)
   virtual int spawnGroup(int)
   virtual int addToSection(GameObject *)
   virtual int addToGroup(GameObject *,int,bool)
   virtual int removeFromGroup(GameObject *,int)
}
class GJColorSetupLayer : FLAlertLayer, ColorSelectDelegate, FLAlertLayerProtocol{
   int keyBackClicked()
   int colorSelectClosed(cocos2d::CCNode*)
   int updateSpriteColor(ColorChannelSprite*, cocos2d::CCLabelBMFont*, int)
   unsigned int updateSpriteColors()
   cocos2d::CCDirector * init(LevelSettingsObject*)
   cocos2d::CCLayerColor * create(LevelSettingsObject*)
   unsigned int onPage(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   int onColor(cocos2d::CCObject*)
   unsigned int showPage(int)
   cocos2d::CCLayerColor * GJColorSetupLayer()
   GJColorSetupLayer * ~GJColorSetupLayer()
   virtual GJColorSetupLayer * ~GJColorSetupLayer()
   virtual int keyBackClicked(void)
   virtual int colorSelectClosed(cocos2d::CCNode *)
}
class InheritanceNode : cocos2d::CCObject{
   signed int init(int, InheritanceNode*)
   _BYTE * create(int, InheritanceNode*)
   InheritanceNode * ~InheritanceNode()
   virtual InheritanceNode * ~InheritanceNode()
   virtual  's name
}
class SimpleObject : cocos2d::CCObject{
   signed int init()
   cocos2d::CCObject * create()
   SimpleObject * ~SimpleObject()
   virtual SimpleObject * ~SimpleObject()
   virtual  ype's name
}
class CountTriggerAction : cocos2d::CCNode{
   CountTriggerAction * getSaveString()
   cocos2d::CCNode * createFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int init(int, int, bool, bool)
   cocos2d::CCNode * create(int, int, bool, bool)
   CountTriggerAction * ~CountTriggerAction()
   virtual CountTriggerAction * ~CountTriggerAction()
}
class ToggleTriggerAction : cocos2d::CCNode{
   ToggleTriggerAction * getSaveString()
   cocos2d::CCNode * createFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int init(int, bool)
   cocos2d::CCNode * create(int, bool)
   ToggleTriggerAction * ~ToggleTriggerAction()
   virtual ToggleTriggerAction * ~ToggleTriggerAction()
}
class CollisionTriggerAction : cocos2d::CCNode{
   CollisionTriggerAction * getSaveString()
   cocos2d::CCNode * createFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int init(int, int, int, bool, bool)
   cocos2d::CCNode * create(int, int, int, bool, bool)
   CollisionTriggerAction * ~CollisionTriggerAction()
   virtual CollisionTriggerAction * ~CollisionTriggerAction()
}
class TouchToggleAction : cocos2d::CCNode{
   TouchToggleAction * getSaveString()
   cocos2d::CCNode * createFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int init(int, bool, TouchTriggerType)
   cocos2d::CCNode * create(int, bool, TouchTriggerType)
   TouchToggleAction * ~TouchToggleAction()
   virtual TouchToggleAction * ~TouchToggleAction()
}
class OpacityEffectAction : cocos2d::CCNode{
   OpacityEffectAction * getSaveString()
   cocos2d::CCNode * createFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int init(float, float, float, int)
   int step(float)
   cocos2d::CCNode * create(float, float, float, int)
   OpacityEffectAction * ~OpacityEffectAction()
   virtual OpacityEffectAction * ~OpacityEffectAction()
}
class PulseEffectAction : cocos2d::CCNode{
   signed int isFinished()
   PulseEffectAction * getSaveString()
   int valueForDelta(float, float, float, float)
   cocos2d::CCNode * createFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int init(float, float, float, PulseEffectType, int, cocos2d::_ccColor3B, cocos2d::_ccHSVValue, int, bool, bool)
   int step(float)
   cocos2d::CCNode * create(float, float, float, PulseEffectType, int, cocos2d::_ccColor3B, cocos2d::_ccHSVValue, int, bool, bool)
   cocos2d::CCNode * PulseEffectAction()
   PulseEffectAction * ~PulseEffectAction()
   virtual PulseEffectAction * ~PulseEffectAction()
}
class SpawnTriggerAction : cocos2d::CCNode{
   int isFinished()
   SpawnTriggerAction * getSaveString()
   cocos2d::CCNode * createFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int init(float, int)
   int step(float)
   cocos2d::CCNode * create(float, int)
   SpawnTriggerAction * ~SpawnTriggerAction()
   virtual SpawnTriggerAction * ~SpawnTriggerAction()
}
class ColorAction : cocos2d::CCNode{
   int resetAction()
   ColorAction * getSaveString()
   int setupFromDict(cocos2d::CCDictionary*)
   _DWORD * setupFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int updateCustomColor(cocos2d::_ccColor3B, cocos2d::_ccColor3B)
   signed int init(cocos2d::_ccColor3B, cocos2d::_ccColor3B, float, double, bool, int, float, float)
   int step(float)
   cocos2d::CCNode * create(cocos2d::_ccColor3B, bool, int)
   cocos2d::CCNode * create(cocos2d::_ccColor3B, cocos2d::_ccColor3B, float, double, bool)
   cocos2d::CCNode * create(cocos2d::_ccColor3B, cocos2d::_ccColor3B, float, double, bool, int, float, float)
   cocos2d::CCNode * create()
   cocos2d::CCNode * getCopy()
   cocos2d::CCNode * ColorAction()
   ColorAction * ~ColorAction()
   virtual ColorAction * ~ColorAction()
}
class ColorChannelSprite : cocos2d::CCSprite{
   int updateValues(ColorAction*)
   int updateOpacity(float)
   int updateBlending(bool)
   int updateCopyLabel(int, bool)
   int init()
   cocos2d::CCSprite * create()
   ColorChannelSprite * ~ColorChannelSprite()
   virtual ColorChannelSprite * ~ColorChannelSprite()
   virtual int init(void)
}
class GroupCommandObject : cocos2d::CCNode{
   const char * easeToText(int)
   int resetDelta(bool)
   GroupCommandObject * getSaveString()
   cocos2d::CCEaseInOut * getEasedAction(cocos2d::CCActionInterval*, int, float)
   int runMoveCommand(cocos2d::CCPoint, float, int, float, bool, bool)
   cocos2d::CCNode * createFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int runFollowCommand(float, float, float, bool)
   int runRotateCommand(float, float, int, float, bool)
   int updateTweenAction(float, char const*)
   int runPlayerFollowCommand(float, float, int, float, float)
    init()
   int step(float)
   cocos2d::CCNode * create()
   cocos2d::CCNode * GroupCommandObject()
   GroupCommandObject * ~GroupCommandObject()
   virtual GroupCommandObject * ~GroupCommandObject()
   virtual  init(void)
   virtual int updateTweenAction(float,char const*)
}
class ColorActionSprite : cocos2d::CCNode{
   signed int init()
   cocos2d::CCNode * create()
   ColorActionSprite * ~ColorActionSprite()
   virtual ColorActionSprite * ~ColorActionSprite()
   virtual signed int init(void)
}
class GJEffectManager : cocos2d::CCNode{
   int playerDied()
   int spawnGroup(int, float, int)
   _BOOL4 colorExists(int)
   int shouldBlend(int)
   int toggleGroup(int, bool)
   int countForItem(int)
   unsigned int playerButton(bool, bool)
   void resetEffects()
   void setFollowing(int, int, bool)
   int updateColors(cocos2d::_ccColor3B, cocos2d::_ccColor3B)
   _BOOL4 wasFollowing(int, int)
   unsigned int colorForIndex(int)
   unsigned int getMixedColor(cocos2d::_ccColor3B, cocos2d::_ccColor3B, float)
   GJEffectManager * getSaveString()
   __int64 processColors()
   unsigned int updateEffects(float)
   unsigned int colorForEffect(cocos2d::_ccColor3B, cocos2d::_ccHSVValue)
   ColorAction * getColorAction(int)
   cocos2d::CCObject * getColorSprite(int)
   _BOOL4 isGroupEnabled(int)
   cocos2d::CCNode * runPulseEffect(int, bool, float, float, float, PulseEffectType, cocos2d::_ccColor3B, cocos2d::_ccHSVValue, int, bool, bool, bool, int)
   cocos2d::CCObject * setColorAction(ColorAction*, int)
   unsigned int colorForGroupID(int, cocos2d::_ccColor3B const&, bool)
   int objectsCollided(int, int)
   signed int opacityForIndex(int)
   void resetColorCache()
   int runCountTrigger(int, int, bool, int, bool, int)
   int runDeathTrigger(int, bool, int)
   unsigned int setupFromString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int wouldCreateLoop(InheritanceNode*, int)
   _BOOL4 hasBeenTriggered(int)
   void resetMoveActions()
   int storeTriggeredID(int)
   cocos2d::CCObject * createMoveCommand(cocos2d::CCPoint, int, float, int, float, bool, bool, int)
   unsigned int preCollisionCheck()
   void removeColorAction(int)
   void resetTriggeredIDs()
   void * updateColorAction(ColorAction*)
   void colorActionChanged(ColorAction*)
   cocos2d::CCArray * getAllColorActions()
   cocos2d::CCArray * getAllColorSprites()
   signed int hasActiveDualTouch()
   int keyForGroupIDColor(int, cocos2d::_ccColor3B const&, bool)
   signed int opacityModForGroup(int)
   unsigned int postCollisionCheck()
   void prepareMoveActions(float, bool)
   int resetToggledGroups()
   int updateColorEffects(float)
   unsigned int updatePulseEffects(float)
   unsigned int activeColorForIndex(int)
   int addGroupPulseEffect(PulseEffectAction*)
   unsigned int colorForPulseEffect(cocos2d::_ccColor3B const&, PulseEffectAction*)
   unsigned int countChangedForItem(int)
   cocos2d::CCObject * createFollowCommand(float, float, float, int, int, bool, int)
   cocos2d::CCObject * createRotateCommand(int, float, int, int, int, float, bool, int)
   cocos2d::CCDictionary * getLoadedMoveOffset()
   unsigned int processPulseActions()
   void updateOpacityAction(OpacityEffectAction*)
   unsigned int updateSpawnTriggers(float)
   void updateOpacityEffects(float)
   int activeOpacityForIndex(int)
   void * calculateLightBGColor(cocos2d::_ccColor3B)
   unsigned int decrementCountForItem(int)
   GJEffectManager * getCurrentStateString()
   int handleObjectCollision(bool, int, int)
   unsigned int incrementCountForItem(int)
   int removeAllPulseActions()
   int stopActionsForTrigger(EffectGameObject*)
   int processInheritedColors()
   int runTouchTriggerCommand(int, bool, TouchTriggerType, bool, int)
   int calculateInheritedColor(int, ColorAction*)
   cocos2d::CCNode * runOpacityActionOnGroup(int, float, float, int)
   unsigned int stopMoveActionsForGroup(int)
   int getOpacityActionForGroup(int)
   cocos2d::CCArray * hasPulseEffectForGroupID(int)
   int registerCollisionTrigger(int, int, int, bool, bool, int)
   int traverseInheritanceChain(InheritanceNode*)
   int calculateBaseActiveColors()
   cocos2d::CCObject * createPlayerFollowCommand(float, float, int, float, float, int, int)
   unsigned int updateActiveOpacityEffects()
   int addAllInheritedColorActions(cocos2d::CCArray*)
   __int64 processCopyColorPulseActions()
   cocos2d::CCDictionary * init()
   void reset()
   cocos2d::CCNode * create()
   _DWORD * loadState(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCNode * GJEffectManager()
   GJEffectManager * ~GJEffectManager()
   virtual GJEffectManager * ~GJEffectManager()
   virtual cocos2d::CCDictionary * init(void)
}
class CCMoveCNode : cocos2d::CCNode{
   _DWORD init()
   cocos2d::CCNode * create()
   CCMoveCNode * ~CCMoveCNode()
   virtual CCMoveCNode * ~CCMoveCNode()
   virtual _DWORD init(void)
}
class GJAccountSettingsDelegate{
    updateSettingsFailed()
    updateSettingsFinished()
   virtual  updateSettingsFinished(void)
   virtual  updateSettingsFailed(void)
}
class DownloadMessageDelegate{
    downloadMessageFailed(int)
    downloadMessageFinished(GJUserMessage*)
   virtual  downloadMessageFinished(GJUserMessage *)
   virtual  downloadMessageFailed(int)
}
class UploadMessageDelegate{
    uploadMessageFailed(int)
    uploadMessageFinished(int)
   virtual  uploadMessageFinished(int)
   virtual  uploadMessageFailed(int)
}
class TextAlertPopup : cocos2d::CCNode{
   signed int init(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, float)
   void * create(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, float)
   TextAlertPopup * ~TextAlertPopup()
   virtual TextAlertPopup * ~TextAlertPopup()
}
class SelectFontLayer : FLAlertLayer{
   int onChangeFont(cocos2d::CCObject*)
   int keyBackClicked()
   void updateFontLabel()
   cocos2d::CCDirector * init(LevelEditorLayer*)
   cocos2d::CCLayerColor * create(LevelEditorLayer*)
   int onClose(cocos2d::CCObject*)
   SelectFontLayer * ~SelectFontLayer()
   virtual SelectFontLayer * ~SelectFontLayer()
   virtual int keyBackClicked(void)
}
class EditTriggersPopup : FLAlertLayer{
   int keyBackClicked()
   int onMultiTrigger(cocos2d::CCObject*)
   int onTouchTriggered(cocos2d::CCObject*)
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint, cocos2d::CCArray*)
   int onSpawnedByTrigger(cocos2d::CCObject*)
   int determineStartValues()
   int updateTouchTriggered()
   int updateMultiTriggerBtn()
   int updateSpawnedByTrigger()
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   EditTriggersPopup * ~EditTriggersPopup()
   virtual EditTriggersPopup * ~EditTriggersPopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
}
class GJOptionsLayer : FLAlertLayer{
   int onNextPage(cocos2d::CCObject*)
   int onPrevPage(cocos2d::CCObject*)
   int countForPage(int)
   cocos2d::CCLayer * layerForPage(int)
   GJOptionsLayer * nextPosition(int)
   void setupOptions()
   int keyBackClicked()
   int objectsForPage(int)
   _DWORD * incrementCountForPage(int)
   cocos2d::CCDirector * init()
   cocos2d::CCLayerColor * create()
   int onInfo(cocos2d::CCObject*)
   int infoKey(int)
   int onClose(cocos2d::CCObject*)
   int pageKey(int)
   int goToPage(int)
   int layerKey(int)
   GameManager * onToggle(cocos2d::CCObject*)
   int addToggle(char const*, char const*, char const*)
   int objectKey(int)
   GJOptionsLayer * ~GJOptionsLayer()
   virtual GJOptionsLayer * ~GJOptionsLayer()
   virtual cocos2d::CCDirector * init(void)
   virtual int keyBackClicked(void)
   virtual void setupOptions(void)
   virtual int onClose(cocos2d::CCObject *)
}
class EditorOptionsLayer : GJOptionsLayer{
   int onButtonRows(cocos2d::CCObject*)
   int setupOptions()
   int onButtonsPerRow(cocos2d::CCObject*)
   cocos2d::CCDirector * init()
   cocos2d::CCLayerColor * create()
   int onClose(cocos2d::CCObject*)
   cocos2d::CCLayerColor * EditorOptionsLayer()
   EditorOptionsLayer * ~EditorOptionsLayer()
   virtual EditorOptionsLayer * ~EditorOptionsLayer()
   virtual cocos2d::CCDirector * init(void)
   virtual int setupOptions(void)
   virtual int onClose(cocos2d::CCObject *)
}
class GJCommentListLayer : cocos2d::CCLayerColor{
   cocos2d::CCDirector * init(BoomListView*, char const*, cocos2d::_ccColor4B, float, float, bool)
   cocos2d::CCLayerColor * create(BoomListView*, char const*, cocos2d::_ccColor4B, float, float, bool)
   cocos2d::CCLayerColor * ~GJCommentListLayer()
   virtual cocos2d::CCLayerColor * ~GJCommentListLayer()
}
class GJAccountSettingsLayer : FLAlertLayer, TextInputDelegate{
   int keyBackClicked()
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int onCommentSetting(cocos2d::CCObject*)
   int onFriendRequests(cocos2d::CCObject*)
   int onMessageSetting(cocos2d::CCObject*)
   _DWORD * updateScoreValues()
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint, float, float)
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int init(int)
   cocos2d::CCNodeRGBA * create(int)
   int onClose(cocos2d::CCObject*)
   int onUpdate(cocos2d::CCObject*)
   cocos2d::CCLayerColor * GJAccountSettingsLayer()
   GJAccountSettingsLayer * ~GJAccountSettingsLayer()
   virtual GJAccountSettingsLayer * ~GJAccountSettingsLayer()
   virtual int keyBackClicked(void)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class UpdateAccountSettingsPopup : FLAlertLayer, GJAccountSettingsDelegate{
   GJAccountSettingsLayer * keyBackClicked()
   _DWORD * updateSettingsFailed()
   _DWORD * updateSettingsFinished()
   cocos2d::CCDirector * init(GJAccountSettingsLayer*, int, int, int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCLayerColor * create(GJAccountSettingsLayer*, int, int, int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   GJAccountSettingsLayer * onClose(cocos2d::CCObject*)
   UpdateAccountSettingsPopup * ~UpdateAccountSettingsPopup()
   virtual UpdateAccountSettingsPopup * ~UpdateAccountSettingsPopup()
   virtual GJAccountSettingsLayer * keyBackClicked(void)
   virtual _DWORD * updateSettingsFinished(void)
   virtual _DWORD * updateSettingsFailed(void)
}
class UploadActionPopup : FLAlertLayer{
   int closePopup()
   int keyBackClicked()
   _DWORD * showFailMessage(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * showSuccessMessage(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCDirector * init(UploadPopupDelegate*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCLayerColor * create(UploadPopupDelegate*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onClose(cocos2d::CCObject*)
   UploadActionPopup * ~UploadActionPopup()
   virtual UploadActionPopup * ~UploadActionPopup()
   virtual int keyBackClicked(void)
}
class FriendRequestPopup : FLAlertLayer, UploadActionDelegate, UploadPopupDelegate, FLAlertLayerProtocol{
   int onClosePopup(UploadActionPopup*)
   int keyBackClicked()
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int uploadActionFailed(int, int)
   int uploadActionFinished(int, int)
   int loadFromGJFriendRequest(GJFriendRequest*)
   cocos2d::CCDirector * init(GJFriendRequest*)
   cocos2d::CCLayerColor * create(GJFriendRequest*)
   _DWORD * onBlock(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   signed int onAccept(cocos2d::CCObject*)
   int onRemove(cocos2d::CCObject*)
   signed int blockUser()
   FriendRequestPopup * ~FriendRequestPopup()
   virtual FriendRequestPopup * ~FriendRequestPopup()
   virtual int keyBackClicked(void)
   virtual int uploadActionFinished(int,int)
   virtual int uploadActionFailed(int,int)
   virtual int onClosePopup(UploadActionPopup *)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
}
class GJMessagePopup : FLAlertLayer, UploadActionDelegate, UploadPopupDelegate, FLAlertLayerProtocol, DownloadMessageDelegate{
   int onClosePopup(UploadActionPopup*)
   int keyBackClicked()
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int loadFromGJMessage(GJUserMessage*)
   int uploadActionFailed(int, int)
   int uploadActionFinished(int, int)
   int downloadMessageFailed(int)
   int downloadMessageFinished(GJUserMessage*)
   cocos2d::CCDirector * init(GJUserMessage*)
   cocos2d::CCLayerColor * create(GJUserMessage*)
   _DWORD * onBlock(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   void onReply(cocos2d::CCObject*)
   int onRemove(cocos2d::CCObject*)
   signed int blockUser()
   cocos2d::CCLayerColor * GJMessagePopup()
   GJMessagePopup * ~GJMessagePopup()
   virtual GJMessagePopup * ~GJMessagePopup()
   virtual int keyBackClicked(void)
   virtual int downloadMessageFinished(GJUserMessage *)
   virtual int downloadMessageFailed(int)
   virtual int uploadActionFinished(int,int)
   virtual int uploadActionFailed(int,int)
   virtual int onClosePopup(UploadActionPopup *)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
}
class GJWriteMessagePopup : FLAlertLayer, TextInputDelegate, UploadMessageDelegate, UploadPopupDelegate, FLAlertLayerProtocol{
   _DWORD * updateBody(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * updateText(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int)
   int onClearBody(cocos2d::CCObject*)
   _DWORD * textChanged(CCTextInputNode*)
   int onClosePopup(UploadActionPopup*)
   _DWORD * updateSubject(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int keyBackClicked()
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int textInputClosed(CCTextInputNode*)
   _DWORD * textInputOpened(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int closeMessagePopup(bool)
   int uploadMessageFailed(int)
   int updateCharCountLabel(int)
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int uploadMessageFinished(int)
   int registerWithTouchDispatcher()
   cocos2d::CCDirector * init(int, int)
   cocos2d::CCLayerColor * create(int, int)
   int onSend(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   cocos2d::CCLayerColor * GJWriteMessagePopup()
   GJWriteMessagePopup * ~GJWriteMessagePopup()
   virtual GJWriteMessagePopup * ~GJWriteMessagePopup()
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual _DWORD * textInputOpened(CCTextInputNode *)
   virtual int textInputClosed(CCTextInputNode *)
   virtual _DWORD * textChanged(CCTextInputNode *)
   virtual int uploadMessageFinished(int)
   virtual int uploadMessageFailed(int)
   virtual int onClosePopup(UploadActionPopup *)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class EditGameObjectPopup : FLAlertLayer{
   int keyBackClicked()
   int determineStartValues()
   int onAllowMultiActivate(cocos2d::CCObject*)
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCLayerColor * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   EditGameObjectPopup * ~EditGameObjectPopup()
   virtual EditGameObjectPopup * ~EditGameObjectPopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
}
class SetTextPopup : FLAlertLayer, TextInputDelegate{
   int textChanged(CCTextInputNode*)
   _DWORD * onResetValue(cocos2d::CCObject*)
   int keyBackClicked()
   int textInputClosed(CCTextInputNode*)
   _DWORD * updateTextInputLabel()
   signed int init(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool)
   int show()
   cocos2d::CCLayerColor * create(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool)
   int onClose(cocos2d::CCObject*)
   int onCancel(cocos2d::CCObject*)
   SetTextPopup * ~SetTextPopup()
   virtual SetTextPopup * ~SetTextPopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
}
class SetIDPopup : FLAlertLayer, TextInputDelegate{
   int textChanged(CCTextInputNode*)
   int onResetValue(cocos2d::CCObject*)
    valueChanged()
   int onItemIDArrow(cocos2d::CCObject*)
   int keyBackClicked()
   int textInputClosed(CCTextInputNode*)
   int updateTextInputLabel()
   int init(int, int, int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, int)
   int show()
   cocos2d::CCLayerColor * create(int, int, int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, int)
   int onClose(cocos2d::CCObject*)
   int onCancel(cocos2d::CCObject*)
   SetIDPopup * ~SetIDPopup()
   virtual SetIDPopup * ~SetIDPopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual  valueChanged(void)
}
class SetFolderPopup : SetIDPopup, SetTextPopupDelegate{
   SetFolderPopup * valueChanged()
   int onSetFolderName(cocos2d::CCObject*)
   int setTextPopupClosed(SetTextPopup*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCDirector * init(int, bool, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCLayerColor * create(int, bool, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCLayerColor * SetFolderPopup()
   SetFolderPopup * ~SetFolderPopup()
   virtual SetFolderPopup * ~SetFolderPopup()
   virtual SetFolderPopup * valueChanged(void)
   virtual int setTextPopupClosed(SetTextPopup *,std::string)
}
class HSVWidgetPopup : FLAlertLayer{
   int keyBackClicked()
   cocos2d::CCDirector * init(cocos2d::_ccHSVValue, HSVWidgetPopupDelegate*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCLayerColor * create(cocos2d::_ccHSVValue, HSVWidgetPopupDelegate*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onClose(cocos2d::CCObject*)
   HSVWidgetPopup * ~HSVWidgetPopup()
   virtual HSVWidgetPopup * ~HSVWidgetPopup()
   virtual int keyBackClicked(void)
}
class ConfigureHSVWidget : cocos2d::CCNode{
   _DWORD * onResetHSV(cocos2d::CCObject*)
   _DWORD * updateLabels()
   _DWORD * sliderChanged(cocos2d::CCObject*)
   _DWORD * onToggleSConst(cocos2d::CCObject*)
   _DWORD * onToggleVConst(cocos2d::CCObject*)
   signed int init(cocos2d::_ccHSVValue, bool)
   cocos2d::CCNode * create(cocos2d::_ccHSVValue, bool)
   ConfigureHSVWidget * ~ConfigureHSVWidget()
   virtual ConfigureHSVWidget * ~ConfigureHSVWidget()
}
class GJRobotSprite : CCAnimatedSprite{
   int setOpacity(unsigned char)
   unsigned int updateFrame(int)
   int updateColors()
   int hideSecondary()
   int updateColor01(cocos2d::_ccColor3B)
   int updateColor02(cocos2d::_ccColor3B)
   unsigned int updateGlowColor(cocos2d::_ccColor3B, bool)
   signed int init(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int init()
   cocos2d::CCSprite * create()
   int hideGlow()
   int showGlow()
   cocos2d::CCSprite * GJRobotSprite()
   GJRobotSprite * ~GJRobotSprite()
   virtual GJRobotSprite * ~GJRobotSprite()
   virtual signed int init(void)
   virtual int setOpacity(uchar)
   virtual int hideSecondary(void)
}
class GJSpiderSprite : GJRobotSprite{
   signed int init()
   cocos2d::CCSprite * create()
   GJSpiderSprite * ~GJSpiderSprite()
   virtual GJSpiderSprite * ~GJSpiderSprite()
   virtual signed int init(void)
}
class ConfigureValuePopupDelegate{
    valuePopupClosed(ConfigureValuePopup*, float)
   virtual  valuePopupClosed(ConfigureValuePopup *,float)
}
class GJMoveCommandLayer : FLAlertLayer, TextInputDelegate, ConfigureValuePopupDelegate{
   int textChanged(CCTextInputNode*)
   int onEasingRate(cocos2d::CCObject*)
   int onTargetMode(cocos2d::CCObject*)
   int onLockPlayerX(cocos2d::CCObject*)
   int onLockPlayerY(cocos2d::CCObject*)
   _DWORD * sliderChanged(cocos2d::CCObject*)
   int keyBackClicked()
   int onMultiTrigger(cocos2d::CCObject*)
   unsigned int sliderXChanged(cocos2d::CCObject*)
   unsigned int sliderYChanged(cocos2d::CCObject*)
   int updateDuration()
   _DWORD * updateDurLabel(bool)
   _DWORD * onUpdateGroupID(cocos2d::CCObject*)
   int onUseMoveTarget(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int onTouchTriggered(cocos2d::CCObject*)
   _DWORD * onUpdateGroupID2(cocos2d::CCObject*)
   _DWORD * valuePopupClosed(ConfigureValuePopup*, float)
   int updateEasingLabel()
   unsigned int updateEditorLabel()
   _DWORD * updateValueXLabel()
   _DWORD * updateValueYLabel()
   int onSpawnedByTrigger(cocos2d::CCObject*)
   int posFromSliderValue(float)
   int sliderValueFromPos(int)
   int updateTargetGroupID()
   unsigned int determineStartValues()
   int updateTargetGroupID2()
   _DWORD * updateTextInputLabel()
   int updateTouchTriggered()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   _DWORD * updateEasingRateLabel()
   unsigned int updateMoveCommandPosX()
   unsigned int updateMoveCommandPosY()
   int updateMultiTriggerBtn()
   _DWORD * updateTextInputLabel2()
   int updateSpawnedByTrigger()
   int updateMoveCommandEasing()
   int updateMoveTargetElements()
   int toggleEasingRateVisibility()
   int updateMoveCommandEasingRate()
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   cocos2d::CCLayerColor * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   int onEasing(cocos2d::CCObject*)
   cocos2d::CCLayerColor * GJMoveCommandLayer()
   GJMoveCommandLayer * ~GJMoveCommandLayer()
   virtual GJMoveCommandLayer * ~GJMoveCommandLayer()
   virtual int keyBackClicked(void)
   virtual _DWORD * valuePopupClosed(ConfigureValuePopup *,float)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class InfoAlertButton : CCMenuItemSpriteExtra{
   int init(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float)
   void * create(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float)
   __int64 activate()
   InfoAlertButton * ~InfoAlertButton()
   virtual InfoAlertButton * ~InfoAlertButton()
   virtual __int64 activate(void)
}
class GJSpecialColorSelect : FLAlertLayer{
   unsigned int onSelectColor(cocos2d::CCObject*)
   int getButtonByTag(int)
   int keyBackClicked()
   const char * textForColorIdx(int)
   unsigned int highlightSelected(ButtonSprite*)
   cocos2d::CCDirector * init(int, GJSpecialColorSelectDelegate*, bool)
   cocos2d::CCLayerColor * create(int, GJSpecialColorSelectDelegate*, bool)
   int onClose(cocos2d::CCObject*)
   GJSpecialColorSelect * ~GJSpecialColorSelect()
   virtual GJSpecialColorSelect * ~GJSpecialColorSelect()
   virtual int keyBackClicked(void)
}
class SetupOpacityPopup : FLAlertLayer, TextInputDelegate{
   int textChanged(CCTextInputNode*)
   int sliderChanged(cocos2d::CCObject*)
   int updateOpacity()
   int keyBackClicked()
   int onMultiTrigger(cocos2d::CCObject*)
   int updateDuration()
   int updateDurLabel()
   int updateTargetID()
   _DWORD * onTargetIDArrow(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int onTouchTriggered(cocos2d::CCObject*)
   unsigned int updateEditorLabel()
   int onSpawnedByTrigger(cocos2d::CCObject*)
   int updateOpacityLabel()
   int determineStartValues()
   _DWORD * updateTextInputLabel()
   int updateTouchTriggered()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int updateMultiTriggerBtn()
   int updateSpawnedByTrigger()
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCLayerColor * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   cocos2d::CCLayerColor * SetupOpacityPopup()
   SetupOpacityPopup * ~SetupOpacityPopup()
   virtual SetupOpacityPopup * ~SetupOpacityPopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class SetupObjectTogglePopup : FLAlertLayer, TextInputDelegate{
   int textChanged(CCTextInputNode*)
   int onEnableGroup(cocos2d::CCObject*)
   int keyBackClicked()
   int onMultiTrigger(cocos2d::CCObject*)
   int updateTargetID()
   int onMultiActivate(cocos2d::CCObject*)
   _DWORD * onTargetIDArrow(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int onTouchTriggered(cocos2d::CCObject*)
   unsigned int updateEditorLabel()
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint, cocos2d::CCArray*)
   int onSpawnedByTrigger(cocos2d::CCObject*)
   int determineStartValues()
   _DWORD * updateTextInputLabel()
   int updateTouchTriggered()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int updateMultiTriggerBtn()
   int updateSpawnedByTrigger()
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   cocos2d::CCLayerColor * SetupObjectTogglePopup()
   SetupObjectTogglePopup * ~SetupObjectTogglePopup()
   virtual SetupObjectTogglePopup * ~SetupObjectTogglePopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class SetupSpawnPopup : FLAlertLayer, TextInputDelegate{
   int textChanged(CCTextInputNode*)
   _DWORD * updateDelay()
   _DWORD * sliderChanged(cocos2d::CCObject*)
   int keyBackClicked()
   int onMultiTrigger(cocos2d::CCObject*)
   int updateTargetID()
   int onEditorDisable(cocos2d::CCObject*)
   _DWORD * onTargetIDArrow(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int onTouchTriggered(cocos2d::CCObject*)
   _DWORD * updateDelayLabel(bool)
   unsigned int updateEditorLabel()
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint, cocos2d::CCArray*)
   int onSpawnedByTrigger(cocos2d::CCObject*)
   int determineStartValues()
   _DWORD * updateTextInputLabel()
   int updateTouchTriggered()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int updateMultiTriggerBtn()
   int updateSpawnedByTrigger()
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   SetupSpawnPopup * ~SetupSpawnPopup()
   virtual SetupSpawnPopup * ~SetupSpawnPopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class SetupPulsePopup : FLAlertLayer, cocos2d::extension::ColorPickerDelegate, TextInputDelegate, GJSpecialColorSelectDelegate{
   int onExclusive(cocos2d::CCObject*)
   int selectColor(cocos2d::_ccColor3B)
   int textChanged(CCTextInputNode*)
   unsigned int getColorValue()
   _DWORD * sliderChanged(cocos2d::CCObject*)
   __int64 keyBackClicked()
   int onMultiTrigger(cocos2d::CCObject*)
   int updateHoldTime()
   int updateHSVValue()
   int updateTargetID()
   int onGroupMainOnly(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   int textInputOpened(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int updateCopyColor()
   _DWORD * updateHoldLabel(bool)
   int updatePulseMode()
   __int64 closeColorSelect(cocos2d::CCObject*)
   int onTouchTriggered(cocos2d::CCObject*)
   int updateColorValue()
   int updateFadeInTime()
   int colorSelectClosed(GJSpecialColorSelect*, int)
   int colorValueChanged(cocos2d::_ccColor3B)
   int onSelectPulseMode(cocos2d::CCObject*)
   SetupPulsePopup * onUpdateCopyColor(cocos2d::CCObject*)
   unsigned int updateEditorLabel()
   _DWORD * updateFadeInLabel(bool)
   int updateFadeOutTime()
   int onSelectTargetMode(cocos2d::CCObject*)
   int onSpawnedByTrigger(cocos2d::CCObject*)
   _DWORD * updateFadeOutLabel(bool)
   SetupPulsePopup * onUpdateCustomColor(cocos2d::CCObject*)
   int updateGroupMainOnly()
   cocos2d::CCArray * determineStartValues()
   int onGroupSecondaryOnly(cocos2d::CCObject*)
   int onSelectSpecialColor(cocos2d::CCObject*)
   void updateTextInputLabel()
   int updateTouchTriggered()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int updateMultiTriggerBtn()
   int updatePulseTargetType()
   int updateSpawnedByTrigger()
   int onSelectSpecialTargetID(cocos2d::CCObject*)
   int updateGroupSecondaryOnly()
   void updateCopyColorTextInputLabel()
   cocos2d::CCArray * init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCLayerColor * create(EffectGameObject*, cocos2d::CCArray*)
   int onCopy(cocos2d::CCObject*)
   int onPaste(cocos2d::CCObject*)
   cocos2d::CCLayerColor * SetupPulsePopup()
   SetupPulsePopup * ~SetupPulsePopup()
   virtual SetupPulsePopup * ~SetupPulsePopup()
   virtual __int64 keyBackClicked(void)
   virtual int show(void)
   virtual int colorValueChanged(cocos2d::_ccColor3B)
   virtual int textInputOpened(CCTextInputNode *)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual int colorSelectClosed(GJSpecialColorSelect *,int)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class MessageListDelegate{
    setupPageInfo(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
    loadMessagesFailed(char const*, GJErrorCode)
    forceReloadMessages(bool)
    loadMessagesFinished(cocos2d::CCArray*, char const*)
   virtual  loadMessagesFinished(cocos2d::CCArray *,char const*)
   virtual  loadMessagesFailed(char const*,GJErrorCode)
   virtual  forceReloadMessages(bool)
   virtual  setupPageInfo(std::string,char const*)
   virtual  riptor
}
class MessagesProfilePage : FLAlertLayer, FLAlertLayerProtocol, UploadActionDelegate, UploadPopupDelegate, MessageListDelegate{
   _DWORD * onNextPage(cocos2d::CCObject*)
   _DWORD * onPrevPage(cocos2d::CCObject*)
   int untoggleAll()
   int onClosePopup(UploadActionPopup*)
   unsigned int setupPageInfo(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
   cocos2d::CCArray * deleteSelected()
   int keyBackClicked()
   int onSentMessages(cocos2d::CCObject*)
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int onDeleteSelected(cocos2d::CCObject*)
   int updatePageArrows()
   int updateLevelsLabel()
   int loadMessagesFailed(char const*, GJErrorCode)
   cocos2d::CCArray * onToggleAllObjects(cocos2d::CCObject*)
   int uploadActionFailed(int, int)
   int forceReloadMessages(bool)
   int loadMessagesFinished(cocos2d::CCArray*, char const*)
   int setupCommentsBrowser(cocos2d::CCArray*)
   int uploadActionFinished(int, int)
   int registerWithTouchDispatcher()
   signed int init(bool)
   cocos2d::CCLayerColor * create(bool)
   int onClose(cocos2d::CCObject*)
   _DWORD * loadPage(int)
   GameLevelManager * onUpdate(cocos2d::CCObject*)
   int isCorrect(char const*)
   cocos2d::CCLayerColor * MessagesProfilePage()
   MessagesProfilePage * ~MessagesProfilePage()
   virtual MessagesProfilePage * ~MessagesProfilePage()
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual int onClosePopup(UploadActionPopup *)
   virtual int uploadActionFinished(int,int)
   virtual int uploadActionFailed(int,int)
   virtual int loadMessagesFinished(cocos2d::CCArray *,char const*)
   virtual int loadMessagesFailed(char const*,GJErrorCode)
   virtual int forceReloadMessages(bool)
   virtual unsigned int setupPageInfo(std::string,char const*)
}
class FriendRequestDelegate{
    setupPageInfo(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
    forceReloadRequests(bool)
    loadFRequestsFailed(char const*, GJErrorCode)
    loadFRequestsFinished(cocos2d::CCArray*, char const*)
   virtual  loadFRequestsFinished(cocos2d::CCArray *,char const*)
   virtual  loadFRequestsFailed(char const*,GJErrorCode)
   virtual  setupPageInfo(std::string,char const*)
   virtual  forceReloadRequests(bool)
   virtual  ptor
}
class FRequestProfilePage : FLAlertLayer, FLAlertLayerProtocol, UploadActionDelegate, UploadPopupDelegate, FriendRequestDelegate{
   _DWORD * onNextPage(cocos2d::CCObject*)
   _DWORD * onPrevPage(cocos2d::CCObject*)
   int untoggleAll()
   int onClosePopup(UploadActionPopup*)
   unsigned int setupPageInfo(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
   int deleteSelected()
   int keyBackClicked()
   int onSentRequests(cocos2d::CCObject*)
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int onDeleteSelected(cocos2d::CCObject*)
   int updatePageArrows()
   _DWORD updateLevelsLabel()
   cocos2d::CCArray * onToggleAllObjects(cocos2d::CCObject*)
   int uploadActionFailed(int, int)
   int forceReloadRequests(bool)
   int loadFRequestsFailed(char const*, GJErrorCode)
   int setupCommentsBrowser(cocos2d::CCArray*)
   int uploadActionFinished(int, int)
   int loadFRequestsFinished(cocos2d::CCArray*, char const*)
   int registerWithTouchDispatcher()
   signed int init(bool)
   cocos2d::CCLayerColor * create(bool)
   int onClose(cocos2d::CCObject*)
   _DWORD * loadPage(int)
   GameLevelManager * onUpdate(cocos2d::CCObject*)
   int isCorrect(char const*)
   cocos2d::CCLayerColor * FRequestProfilePage()
   FRequestProfilePage * ~FRequestProfilePage()
   virtual FRequestProfilePage * ~FRequestProfilePage()
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual int onClosePopup(UploadActionPopup *)
   virtual int uploadActionFinished(int,int)
   virtual int uploadActionFailed(int,int)
   virtual int loadFRequestsFinished(cocos2d::CCArray *,char const*)
   virtual int loadFRequestsFailed(char const*,GJErrorCode)
   virtual unsigned int setupPageInfo(std::string,char const*)
   virtual int forceReloadRequests(bool)
}
class UserListDelegate{
    forceReloadList(UserListType)
    userListChanged(cocos2d::CCArray*, UserListType)
    getUserListFailed(UserListType, GJErrorCode)
    getUserListFinished(cocos2d::CCArray*, UserListType)
   virtual  getUserListFinished(cocos2d::CCArray *,UserListType)
   virtual  getUserListFailed(UserListType,GJErrorCode)
   virtual  userListChanged(cocos2d::CCArray *,UserListType)
   virtual  forceReloadList(UserListType)
   virtual  escriptor
}
class FriendsProfilePage : FLAlertLayer, FLAlertLayerProtocol, UploadActionDelegate, UploadPopupDelegate, UserListDelegate{
   int keyBackClicked()
   _DWORD * forceReloadList(UserListType)
   int userListChanged(cocos2d::CCArray*, UserListType)
   int getUserListFailed(UserListType, GJErrorCode)
   GameManager * setupUsersBrowser(cocos2d::CCArray*, UserListType)
   int getUserListFinished(cocos2d::CCArray*, UserListType)
   int registerWithTouchDispatcher()
   signed int init(UserListType)
   cocos2d::CCLayerColor * create(UserListType)
   int onClose(cocos2d::CCObject*)
   GameLevelManager * onUpdate(cocos2d::CCObject*)
   int onBlocked(cocos2d::CCObject*)
   cocos2d::CCLayerColor * FriendsProfilePage()
   FriendsProfilePage * ~FriendsProfilePage()
   virtual FriendsProfilePage * ~FriendsProfilePage()
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual int getUserListFinished(cocos2d::CCArray *,UserListType)
   virtual int getUserListFailed(UserListType,GJErrorCode)
   virtual int userListChanged(cocos2d::CCArray *,UserListType)
   virtual _DWORD * forceReloadList(UserListType)
}
class UserInfoDelegate{
    userInfoChanged(GJUserScore*)
    getUserInfoFailed(int)
    getUserInfoFinished(GJUserScore*)
   virtual  getUserInfoFinished(GJUserScore *)
   virtual  getUserInfoFailed(int)
   virtual  userInfoChanged(GJUserScore *)
}
class ProfilePage : FLAlertLayer, FLAlertLayerProtocol, LevelCommentDelegate, CommentUploadDelegate, UserInfoDelegate, UploadActionDelegate, UploadPopupDelegate, LeaderboardManagerDelegate{
   int onMessages(cocos2d::CCObject*)
   cocos2d::CCDirector * onMyLevels(cocos2d::CCObject*)
   _DWORD * onNextPage(cocos2d::CCObject*)
   _DWORD * onPrevPage(cocos2d::CCObject*)
   int onRequests(cocos2d::CCObject*)
   int onSettings(cocos2d::CCObject*)
   int onBlockUser(cocos2d::CCObject*)
   int onClosePopup(UploadActionPopup*)
   int onSendMessage(cocos2d::CCObject*)
   int setupComments()
   unsigned int setupPageInfo(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
   int keyBackClicked()
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int userInfoChanged(GJUserScore*)
   int onCommentHistory(cocos2d::CCObject*)
   int updatePageArrows()
   int getUserInfoFailed(int)
   int updateLevelsLabel()
   int loadCommentsFailed(char const*)
   signed __int64 showNoAccountError()
   int uploadActionFailed(int, int)
   cocos2d::CCArray * commentDeleteFailed(int, int)
   __int64 commentUploadFailed(int, CommentError)
   int getUserInfoFinished(GJUserScore*)
   int loadCommentsFinished(cocos2d::CCArray*, char const*)
   cocos2d::CCNode * loadPageFromUserInfo(GJUserScore*)
   int setupCommentsBrowser(cocos2d::CCArray*)
   int uploadActionFinished(int, int)
   _DWORD * commentUploadFinished(int)
   int updateUserScoreFailed()
   _DWORD * updateUserScoreFinished()
   int toggleMainPageVisibility(bool)
   int registerWithTouchDispatcher()
   signed int init(int, bool)
   int show()
   cocos2d::CCLayerColor * create(int, bool)
   int onClose(cocos2d::CCObject*)
   _DWORD * loadPage(int)
   int onFollow(cocos2d::CCObject*)
   int onFriend(cocos2d::CCObject*)
   int onTwitch(cocos2d::CCObject*)
   GameLevelManager * onUpdate(cocos2d::CCObject*)
   signed int blockUser()
   int isCorrect(char const*)
   int onComment(cocos2d::CCObject*)
   int onFriends(cocos2d::CCObject*)
   int onTwitter(cocos2d::CCObject*)
   int onYouTube(cocos2d::CCObject*)
   int ProfilePage()
   ProfilePage * ~ProfilePage()
   virtual ProfilePage * ~ProfilePage()
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual _DWORD * updateUserScoreFinished(void)
   virtual int updateUserScoreFailed(void)
   virtual int getUserInfoFinished(GJUserScore *)
   virtual int getUserInfoFailed(int)
   virtual int userInfoChanged(GJUserScore *)
   virtual int loadCommentsFinished(cocos2d::CCArray *,char const*)
   virtual int loadCommentsFailed(char const*)
   virtual unsigned int setupPageInfo(std::string,char const*)
   virtual _DWORD * commentUploadFinished(int)
   virtual __int64 commentUploadFailed(int,CommentError)
   virtual cocos2d::CCArray * commentDeleteFailed(int,int)
   virtual int onClosePopup(UploadActionPopup *)
   virtual int uploadActionFinished(int,int)
   virtual int uploadActionFailed(int,int)
}
class SecretLayer : cocos2d::CCLayer, TextInputDelegate, FLAlertLayerProtocol{
   SecretLayer * getMessage()
   cocos2d::CCNode * nodeWithTag(int)
   _DWORD * textChanged(CCTextInputNode*)
   int selectAThread()
   int keyBackClicked()
   cocos2d::CCAction * playCoinEffect()
   int FLAlert_Clicked(FLAlertLayer*, bool)
   SecretLayer * getBasicMessage()
   _DWORD * textInputClosed(CCTextInputNode*)
   _DWORD * textInputOpened(CCTextInputNode*)
   SecretLayer * getThreadMessage()
   int updateSearchLabel(char const*)
   int updateMessageLabel(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   GameManager * init()
   AppDelegate * scene()
   cocos2d::CCLayer * create()
   int onBack(cocos2d::CCObject*)
   _DWORD * onSubmit(cocos2d::CCObject*)
   SecretLayer * ~SecretLayer()
   virtual SecretLayer * ~SecretLayer()
   virtual GameManager * init(void)
   virtual int keyBackClicked(void)
   virtual _DWORD * textInputOpened(CCTextInputNode *)
   virtual _DWORD * textInputClosed(CCTextInputNode *)
   virtual _DWORD * textChanged(CCTextInputNode *)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
}
class GJChallengeDelegate{
    challengeStatusFailed()
    challengeStatusFinished()
   virtual  challengeStatusFinished(void)
   virtual  challengeStatusFailed(void)
   virtual  riptor
}
class ChallengesPage : FLAlertLayer, FLAlertLayerProtocol, GJChallengeDelegate, CurrencyRewardDelegate{
   int updateDots()
   _DWORD * updateTimers(float)
   void exitNodeAtSlot(int, float)
   int keyBackClicked()
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int currencyWillExit(CurrencyRewardLayer*)
   signed int tryGetChallenges()
   cocos2d::CCObject * createChallengeNode(int, bool, float, bool)
   int challengeStatusFailed()
   int challengeStatusFinished()
   int registerWithTouchDispatcher()
   signed int init()
   int show()
   cocos2d::CCObject * create()
   int onClose(cocos2d::CCObject*)
   int claimItem(ChallengeNode*, GJChallengeItem*, cocos2d::CCPoint)
   int ChallengesPage()
   ChallengesPage * ~ChallengesPage()
   virtual ChallengesPage * ~ChallengesPage()
   virtual signed int init(void)
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual int challengeStatusFinished(void)
   virtual int challengeStatusFailed(void)
   virtual int currencyWillExit(CurrencyRewardLayer *)
}
class ChallengeNode : cocos2d::CCNode{
   int onClaimReward(cocos2d::CCObject*)
   int updateTimeLabel(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   signed int init(GJChallengeItem*, ChallengesPage*, bool)
   cocos2d::CCNode * create(GJChallengeItem*, ChallengesPage*, bool)
   cocos2d::CCNode * ~ChallengeNode()
   virtual cocos2d::CCNode * ~ChallengeNode()
}
class CollisionBlockPopup : FLAlertLayer, TextInputDelegate{
   int textChanged(CCTextInputNode*)
   _DWORD * onNextItemID(cocos2d::CCObject*)
   int updateItemID()
   _DWORD * onItemIDArrow(cocos2d::CCObject*)
   int keyBackClicked()
   CollisionBlockPopup * onDynamicBlock(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   CollisionBlockPopup * updateEditorLabel()
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint)
   int determineStartValues()
   _DWORD * updateTextInputLabel()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   CollisionBlockPopup * ~CollisionBlockPopup()
   virtual CollisionBlockPopup * ~CollisionBlockPopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class ColorSelectLiveOverlay : FLAlertLayer{
   _DWORD * onSelectTab(cocos2d::CCObject*)
   int selectColor(cocos2d::_ccColor3B)
    textChanged(CCTextInputNode*)
   unsigned int getColorValue()
   int sliderChanged(cocos2d::CCObject*)
   int updateOpacity()
   int keyBackClicked()
   unsigned int toggleControls(bool)
    textInputClosed(CCTextInputNode*)
   int closeColorSelect(cocos2d::CCObject*)
   cocos2d::CCLayerColor * createWithObject(EffectGameObject*)
   _DWORD * updateColorLabel()
   int updateColorValue()
   void colorValueChanged(cocos2d::_ccColor3B)
   cocos2d::CCLayerColor * createWithActions(ColorAction*, ColorAction*)
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint)
   void * determineStartValues()
   cocos2d::CCArray * init(ColorAction*, ColorAction*, EffectGameObject*)
   int show()
   cocos2d::CCNodeRGBA * create(ColorAction*, ColorAction*, EffectGameObject*)
   cocos2d::CCLayerColor * ColorSelectLiveOverlay()
   ColorSelectLiveOverlay * ~ColorSelectLiveOverlay()
   virtual ColorSelectLiveOverlay * ~ColorSelectLiveOverlay()
   virtual int keyBackClicked(void)
   virtual int show(void)
}
class ConfigureValuePopup : FLAlertLayer, TextInputDelegate{
   int textChanged(CCTextInputNode*)
   _DWORD * sliderChanged(cocos2d::CCObject*)
   int keyBackClicked()
   int textInputClosed(CCTextInputNode*)
   _DWORD * updateTextInputLabel()
   cocos2d::CCDirector * init(ConfigureValuePopupDelegate*, float, float, float, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCLayerColor * create(ConfigureValuePopupDelegate*, float, float, float, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onClose(cocos2d::CCObject*)
   ConfigureValuePopup * ~ConfigureValuePopup()
   virtual ConfigureValuePopup * ~ConfigureValuePopup()
   virtual int keyBackClicked(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
}
class CurrencyRewardLayer : cocos2d::CCLayer{
   cocos2d::CCAction * pulseSprite(cocos2d::CCSprite*)
   int createObjects(CurrencySpriteType, int, cocos2d::CCPoint, float)
   int incrementCount(int)
   int createObjectsFull(CurrencySpriteType, int, cocos2d::CCSprite*, cocos2d::CCPoint, float)
   int createUnlockObject(cocos2d::CCSprite*, cocos2d::CCPoint, float)
   int incrementStarsCount(int)
   int incrementDiamondsCount(int)
   int incrementSpecialCount1(int)
   int incrementSpecialCount2(int)
   cocos2d::CCDirector * init(int, int, int, CurrencySpriteType, int, CurrencySpriteType, int, cocos2d::CCPoint, CurrencyRewardType, float)
   int create(int, int, int, CurrencySpriteType, int, CurrencySpriteType, int, cocos2d::CCPoint, CurrencyRewardType, float)
   int update(float)
   cocos2d::CCLayer * CurrencyRewardLayer()
   cocos2d::CCLayer * ~CurrencyRewardLayer()
   virtual cocos2d::CCLayer * ~CurrencyRewardLayer()
   virtual int update(float)
}
class CurrencySprite : CCSpritePlus{
   int initWithSprite(cocos2d::CCSprite*)
   cocos2d::CCSprite * createWithSprite(cocos2d::CCSprite*)
   _DWORD * spriteTypeToStat(CurrencySpriteType)
   int rewardToSpriteType(int)
   signed int init(CurrencySpriteType, bool)
   cocos2d::CCSprite * create(CurrencySpriteType, bool)
   cocos2d::CCSprite * CurrencySprite()
   CCSpritePlus * ~CurrencySprite()
   virtual CCSpritePlus * ~CurrencySprite()
}
class GJDailyLevelDelegate{
    dailyStatusFailed(bool)
    dailyStatusFinished(bool)
   virtual  dailyStatusFinished(bool)
   virtual  dailyStatusFailed(bool)
   virtual  iptor
}
class DailyLevelPage : FLAlertLayer, FLAlertLayerProtocol, GJDailyLevelDelegate, LevelDownloadDelegate{
   int getDailyTime()
   _DWORD * updateTimers(float)
   void exitDailyNode(DailyLevelNode*, float)
   int keyBackClicked()
   int skipDailyLevel(DailyLevelNode*, GJGameLevel*)
   DailyLevelNode * createDailyNode(GJGameLevel*, bool, float, bool)
   int FLAlert_Clicked(FLAlertLayer*, bool)
   DailyLevelNode * claimLevelReward(DailyLevelNode*, GJGameLevel*, cocos2d::CCPoint)
   int refreshDailyPage()
   cocos2d::CCAction * dailyStatusFailed(bool)
   signed int tryGetDailyStatus()
   GameLevelManager * createNodeIfLoaded()
   DailyLevelPage * getDailyTimeString(int)
   void * dailyStatusFinished(bool)
   int levelDownloadFailed(int)
   cocos2d::CCAction * downloadAndCreateNode()
   int levelDownloadFinished(GJGameLevel*)
   int registerWithTouchDispatcher()
   GameManager * init(bool)
   int show()
   DailyLevelNode * create(bool)
   int onClose(cocos2d::CCObject*)
   cocos2d::CCLayerColor * DailyLevelPage()
   DailyLevelPage * ~DailyLevelPage()
   virtual DailyLevelPage * ~DailyLevelPage()
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual void * dailyStatusFinished(bool)
   virtual cocos2d::CCAction * dailyStatusFailed(bool)
   virtual int levelDownloadFinished(GJGameLevel *)
   virtual int levelDownloadFailed(int)
}
class DailyLevelNode : cocos2d::CCNode, FLAlertLayerProtocol{
   __int64 onSkipLevel(cocos2d::CCObject*)
   int onClaimReward(cocos2d::CCObject*)
   int showSkipButton()
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int updateTimeLabel(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCDirector * init(GJGameLevel*, DailyLevelPage*, bool)
   cocos2d::CCNode * create(GJGameLevel*, DailyLevelPage*, bool)
   DailyLevelNode * ~DailyLevelNode()
   virtual DailyLevelNode * ~DailyLevelNode()
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
}
class DialogObject : cocos2d::CCObject{
   signed int init(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, float, bool, cocos2d::_ccColor3B)
   _DWORD * create(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, float, bool, cocos2d::_ccColor3B)
   DialogObject * ~DialogObject()
   virtual DialogObject * ~DialogObject()
   virtual  ype's name
}
class TextAreaDelegate{
    fadeInTextFinished(TextArea*)
   virtual  fadeInTextFinished(TextArea *)
}
class DialogLayer : cocos2d::CCLayerColor, TextAreaDelegate{
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int keyBackClicked()
   cocos2d::CCAction * animateInDialog()
   int handleDialogTap()
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   cocos2d::CCLayerColor * createDialogLayer(DialogObject*, cocos2d::CCArray*, int)
   cocos2d::CCLayerColor * createWithObjects(cocos2d::CCArray*, int)
   int displayNextObject()
   cocos2d::CCAction * fadeInTextFinished(TextArea*)
   cocos2d::CCAction * animateInRandomSide()
   int displayDialogObject(DialogObject*)
   cocos2d::CCDirector * updateChatPlacement(DialogChatPlacement)
   int updateNavButtonFrame()
   int finishCurrentAnimation()
   int registerWithTouchDispatcher()
   cocos2d::CCDirector * init(DialogObject*, cocos2d::CCArray*, int)
   cocos2d::CCLayerColor * create(DialogObject*, int)
   DialogLayer * keyDown(cocos2d::enumKeyCodes)
   int onClose()
   cocos2d::CCObject * onEnter()
   cocos2d::CCAction * animateIn(DialogAnimationType)
   cocos2d::CCLayerColor * DialogLayer()
   DialogLayer * ~DialogLayer()
   virtual DialogLayer * ~DialogLayer()
   virtual cocos2d::CCObject * onEnter(void)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual DialogLayer * keyDown(cocos2d::enumKeyCodes)
   virtual cocos2d::CCAction * fadeInTextFinished(TextArea *)
}
class GauntletSelectLayer : cocos2d::CCLayer, BoomScrollLayerDelegate, LevelManagerDelegate{
   int updateArrows()
   int keyBackClicked()
   GameManager * setupGauntlets()
   _DWORD * loadLevelsFailed(char const*)
   _DWORD * loadLevelsFinished(cocos2d::CCArray*, char const*)
   int scrollLayerScrolledToPage(BoomScrollLayer*, int)
   int scrollLayerWillScrollToPage(BoomScrollLayer*, int)
   cocos2d::CCTexture2D * init(int)
   AppDelegate * scene(int)
   cocos2d::CCLayer * create(int)
   int onBack(cocos2d::CCObject*)
   cocos2d::CCSpriteFrameCache * onExit()
   unsigned int onNext(cocos2d::CCObject*)
   int onPlay(cocos2d::CCObject*)
   unsigned int onPrev(cocos2d::CCObject*)
   unsigned int goToPage(int, bool)
   _DWORD * onRefresh(cocos2d::CCObject*)
   GauntletSelectLayer * ~GauntletSelectLayer()
   virtual GauntletSelectLayer * ~GauntletSelectLayer()
   virtual cocos2d::CCSpriteFrameCache * onExit(void)
   virtual int keyBackClicked(void)
   virtual int scrollLayerWillScrollToPage(BoomScrollLayer *,int)
   virtual int scrollLayerScrolledToPage(BoomScrollLayer *,int)
   virtual _DWORD * loadLevelsFinished(cocos2d::CCArray *,char const*)
   virtual _DWORD * loadLevelsFailed(char const*)
}
class GauntletNode : cocos2d::CCNode{
   _DWORD * nameForType(GauntletType)
   _DWORD * frameForType(GauntletType)
   int onClaimReward()
   signed int init(GJMapPack*)
   cocos2d::CCNode * create(GJMapPack*)
   GauntletNode * ~GauntletNode()
   virtual GauntletNode * ~GauntletNode()
}
class GauntletLayer : cocos2d::CCLayer, LevelManagerDelegate{
   int setupGauntlet(cocos2d::CCArray*)
   signed int keyBackClicked()
   _DWORD * loadLevelsFailed(char const*)
   int unlockActiveItem()
   GauntletLayer * loadLevelsFinished(cocos2d::CCArray*, char const*)
   signed int init(GauntletType)
   AppDelegate * scene(GauntletType)
   cocos2d::CCLayer * create(GauntletType)
   signed int onBack(cocos2d::CCObject*)
   _DWORD * onLevel(cocos2d::CCObject*)
   GauntletLayer * ~GauntletLayer()
   virtual GauntletLayer * ~GauntletLayer()
   virtual signed int keyBackClicked(void)
   virtual GauntletLayer * loadLevelsFinished(cocos2d::CCArray *,char const*)
   virtual _DWORD * loadLevelsFailed(char const*)
}
class GJFollowCommandLayer : FLAlertLayer, TextInputDelegate{
   _DWORD * updateXMod()
   _DWORD * updateYMod()
   int textChanged(CCTextInputNode*)
   _DWORD * sliderChanged(cocos2d::CCObject*)
   int keyBackClicked()
   int onMultiTrigger(cocos2d::CCObject*)
   int updateDuration()
   _DWORD * updateDurLabel(bool)
   _DWORD * onUpdateGroupID(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   _DWORD * updateXModLabel()
   _DWORD * updateYModLabel()
   int onFollowRotation(cocos2d::CCObject*)
   int onTouchTriggered(cocos2d::CCObject*)
   _DWORD * onUpdateGroupID2(cocos2d::CCObject*)
   int sliderXModChanged(cocos2d::CCObject*)
   int sliderYModChanged(cocos2d::CCObject*)
   unsigned int updateEditorLabel()
   int onSpawnedByTrigger(cocos2d::CCObject*)
   int updateTargetGroupID()
   int determineStartValues()
   int updateTargetGroupID2()
   _DWORD * updateTextInputLabel()
   int updateTouchTriggered()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int updateMultiTriggerBtn()
   _DWORD * updateTextInputLabel2()
   int updateSpawnedByTrigger()
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   cocos2d::CCLayerColor * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   cocos2d::CCLayerColor * GJFollowCommandLayer()
   GJFollowCommandLayer * ~GJFollowCommandLayer()
   virtual GJFollowCommandLayer * ~GJFollowCommandLayer()
   virtual int keyBackClicked(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class GJPFollowCommandLayer : FLAlertLayer, TextInputDelegate{
   _DWORD * updateXMod()
   _DWORD * updateYMod()
   int textChanged(CCTextInputNode*)
   _DWORD * sliderChanged(cocos2d::CCObject*)
   int keyBackClicked()
   int onMultiTrigger(cocos2d::CCObject*)
   int updateDuration()
   _DWORD * updateDurLabel(bool)
   _DWORD * updateMaxSpeed()
   _DWORD * onUpdateGroupID(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   _DWORD * updateXModLabel()
   _DWORD * updateYModLabel()
   int onTouchTriggered(cocos2d::CCObject*)
   int sliderXModChanged(cocos2d::CCObject*)
   int sliderYModChanged(cocos2d::CCObject*)
   unsigned int updateEditorLabel()
   _DWORD * updateOffsetLabel()
   int onSpawnedByTrigger(cocos2d::CCObject*)
   int updatePlayerOffset()
   _DWORD * updateMaxSpeedLabel()
   int updateTargetGroupID()
   int determineStartValues()
   _DWORD * updateTextInputLabel()
   int updateTouchTriggered()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int updateMultiTriggerBtn()
   int updateSpawnedByTrigger()
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   cocos2d::CCLayerColor * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   cocos2d::CCLayerColor * GJPFollowCommandLayer()
   GJPFollowCommandLayer * ~GJPFollowCommandLayer()
   virtual GJPFollowCommandLayer * ~GJPFollowCommandLayer()
   virtual int keyBackClicked(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class GJRotateCommandLayer : FLAlertLayer, TextInputDelegate, ConfigureValuePopupDelegate{
   int textChanged(CCTextInputNode*)
   int onEasingRate(cocos2d::CCObject*)
   _DWORD * sliderChanged(cocos2d::CCObject*)
   int keyBackClicked()
   int onLockRotation(cocos2d::CCObject*)
   int onMultiTrigger(cocos2d::CCObject*)
   int updateDuration()
   _DWORD * updateDurLabel(bool)
   _DWORD * onUpdateGroupID(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int onTouchTriggered(cocos2d::CCObject*)
   _DWORD * onUpdateGroupID2(cocos2d::CCObject*)
   _DWORD * updateTimesLabel()
   _DWORD * valuePopupClosed(ConfigureValuePopup*, float)
   int updateEasingLabel()
   unsigned int updateEditorLabel()
   int onSpawnedByTrigger(cocos2d::CCObject*)
   int sliderTimesChanged(cocos2d::CCObject*)
   int updateCommandTimes()
   _DWORD * updateDegreesLabel()
   int updateTargetGroupID()
   int determineStartValues()
   int sliderDegreesChanged(cocos2d::CCObject*)
   int updateCommandDegrees()
   int updateTargetGroupID2()
   _DWORD * updateTextInputLabel()
   int updateTouchTriggered()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   _DWORD * updateEasingRateLabel()
   int updateMultiTriggerBtn()
   _DWORD * updateTextInputLabel2()
   int updateSpawnedByTrigger()
   int updateMoveCommandEasing()
   int toggleEasingRateVisibility()
   int updateMoveCommandEasingRate()
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   cocos2d::CCLayerColor * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   int onEasing(cocos2d::CCObject*)
   cocos2d::CCLayerColor * GJRotateCommandLayer()
   GJRotateCommandLayer * ~GJRotateCommandLayer()
   virtual GJRotateCommandLayer * ~GJRotateCommandLayer()
   virtual int keyBackClicked(void)
   virtual _DWORD * valuePopupClosed(ConfigureValuePopup *,float)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class GJPurchaseDelegate{
    didPurchaseItem(GJStoreItem*)
   virtual  didPurchaseItem(GJStoreItem *)
}
class GJShopLayer : cocos2d::CCLayer, GJPurchaseDelegate{
   _DWORD onPlushies(cocos2d::CCObject*)
   int onSelectItem(cocos2d::CCObject*)
   cocos2d::CCDirector * keyBackClicked()
   cocos2d::CCArray * didPurchaseItem(GJStoreItem*)
   void exitVideoAdItems()
   cocos2d::CCAction * showVideoAdReward(int)
   int onCommunityCredits(cocos2d::CCObject*)
   int updateCurrencyCounter()
   signed int init(ShopType)
   AppDelegate * scene(ShopType)
   cocos2d::CCLayer * create(ShopType)
   cocos2d::CCDirector * onBack(cocos2d::CCObject*)
   int onVideoAd(cocos2d::CCObject*)
   GJShopLayer * ~GJShopLayer()
   virtual GJShopLayer * ~GJShopLayer()
   virtual cocos2d::CCDirector * keyBackClicked(void)
   virtual cocos2d::CCArray * didPurchaseItem(GJStoreItem *)
}
class PurchaseItemPopup : FLAlertLayer{
   int onPurchase(cocos2d::CCObject*)
   int keyBackClicked()
   signed int init(GJStoreItem*)
   cocos2d::CCLayerColor * create(GJStoreItem*)
   int onClose(cocos2d::CCObject*)
   PurchaseItemPopup * ~PurchaseItemPopup()
   virtual PurchaseItemPopup * ~PurchaseItemPopup()
   virtual int keyBackClicked(void)
}
class AnimatedShopKeeper : CCAnimatedSprite{
   _DWORD * startAnimating()
   _DWORD * animationFinished(char const*)
   int init(ShopType)
   cocos2d::CCSprite * create(ShopType)
   AnimatedShopKeeper * ~AnimatedShopKeeper()
   virtual AnimatedShopKeeper * ~AnimatedShopKeeper()
   virtual _DWORD * animationFinished(char const*)
}
class LevelLeaderboard : FLAlertLayer, LeaderboardManagerDelegate{
   _DWORD * loadScores()
   int onChangeType(cocos2d::CCObject*)
   int keyBackClicked()
   int setupLeaderboard(cocos2d::CCArray*)
   int loadLeaderboardFailed(char const*)
   signed int updateUserScoreFailed()
   int loadLeaderboardFinished(cocos2d::CCArray*, char const*)
   int updateUserScoreFinished()
   int registerWithTouchDispatcher()
   signed int init(GJGameLevel*, LevelLeaderboardType)
   int show()
   cocos2d::CCLayerColor * create(GJGameLevel*, LevelLeaderboardType)
   int onClose(cocos2d::CCObject*)
   char * onUpdate(cocos2d::CCObject*)
   int isCorrect(char const*)
   LevelLeaderboard * ~LevelLeaderboard()
   virtual LevelLeaderboard * ~LevelLeaderboard()
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int loadLeaderboardFinished(cocos2d::CCArray *,char const*)
   virtual int loadLeaderboardFailed(char const*)
   virtual int updateUserScoreFinished(void)
   virtual signed int updateUserScoreFailed(void)
}
class RateDemonLayer : FLAlertLayer, UploadPopupDelegate, UploadActionDelegate{
   int onClosePopup(UploadActionPopup*)
   int selectRating(cocos2d::CCObject*)
   int keyBackClicked()
   int uploadActionFailed(int, int)
   int uploadActionFinished(int, int)
   GameManager * init(int)
   cocos2d::CCLayerColor * create(int)
   int onRate(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   cocos2d::CCLayerColor * RateDemonLayer()
   RateDemonLayer * ~RateDemonLayer()
   virtual RateDemonLayer * ~RateDemonLayer()
   virtual int keyBackClicked(void)
   virtual int uploadActionFinished(int,int)
   virtual int uploadActionFailed(int,int)
   virtual int onClosePopup(UploadActionPopup *)
}
class GJRewardDelegate{
    rewardsStatusFailed()
    rewardsStatusFinished(int)
   virtual  rewardsStatusFinished(int)
   virtual  rewardsStatusFailed(void)
   virtual  escriptor
}
class RewardsPage : FLAlertLayer, FLAlertLayerProtocol, GJRewardDelegate{
   int onFreeStuff(cocos2d::CCObject*)
   _DWORD * updateTimers(float)
   signed int tryGetRewards()
   int getRewardFrame(int, int)
   int keyBackClicked()
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int unlockLayerClosed(RewardUnlockLayer*)
   cocos2d::CCAction * rewardsStatusFailed()
   __int64 rewardsStatusFinished(int)
   int registerWithTouchDispatcher()
   signed int init()
   int show()
   cocos2d::CCLayerColor * create()
   int onClose(cocos2d::CCObject*)
   RewardUnlockLayer * onReward(cocos2d::CCObject*)
   RewardsPage * ~RewardsPage()
   virtual RewardsPage * ~RewardsPage()
   virtual signed int init(void)
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual __int64 rewardsStatusFinished(int)
   virtual cocos2d::CCAction * rewardsStatusFailed(void)
}
class RewardUnlockLayer : FLAlertLayer, CurrencyRewardDelegate{
   __int64 playDropSound()
   int keyBackClicked()
   int readyToCollect(GJRewardItem*)
   _DWORD * playLabelEffect(int, int, cocos2d::CCSprite*, cocos2d::CCPoint, float)
   cocos2d::CCAction * showCloseButton()
   int currencyWillExit(CurrencyRewardLayer*)
   cocos2d::CCAction * playRewardEffect()
   int connectionTimeout()
   GJRewardItem * showCollectReward(GJRewardItem*)
   _DWORD labelEnterFinishedO(cocos2d::CCObject*)
   signed int init(int, RewardsPage*)
   cocos2d::CCAction * step2()
   int step3()
   cocos2d::CCLayerColor * create(int, RewardsPage*)
   int onClose(cocos2d::CCObject*)
   RewardUnlockLayer * ~RewardUnlockLayer()
   virtual RewardUnlockLayer * ~RewardUnlockLayer()
   virtual int keyBackClicked(void)
   virtual int currencyWillExit(CurrencyRewardLayer *)
}
class GJChestSprite : cocos2d::CCSprite{
   RewardsPage * switchToState(ChestSpriteState, bool)
   int init(int)
   cocos2d::CCSprite * create(int)
   cocos2d::CCArray * setColor(cocos2d::_ccColor3B const&)
   GJChestSprite * ~GJChestSprite()
   virtual GJChestSprite * ~GJChestSprite()
   virtual cocos2d::CCArray * setColor(cocos2d::_ccColor3B const&)
}
class SecretLayer2 : cocos2d::CCLayer, TextInputDelegate, FLAlertLayerProtocol, DialogDelegate{
   SecretLayer2 * getMessage()
   cocos2d::CCNode * nodeWithTag(int)
   _DWORD * textChanged(CCTextInputNode*)
   int dialogClosed(DialogLayer*)
   cocos2d::CCAction * onSecretLevel(cocos2d::CCObject*)
   int selectAThread()
   signed int keyBackClicked()
   cocos2d::CCAction * playCoinEffect()
   int FLAlert_Clicked(FLAlertLayer*, bool)
   SecretLayer2 * getBasicMessage()
   SecretLayer2 * getErrorMessage()
   cocos2d::CCAction * showSecretLevel()
   _DWORD * textInputClosed(CCTextInputNode*)
   _DWORD * textInputOpened(CCTextInputNode*)
   SecretLayer2 * getThreadMessage()
   int updateSearchLabel(char const*)
   cocos2d::CCAction * showCompletedLevel()
   int updateMessageLabel(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCTexture2D * init()
   AppDelegate * scene()
   cocos2d::CCLayer * create()
   signed int onBack(cocos2d::CCObject*)
   _DWORD * onDoor(cocos2d::CCObject*)
   cocos2d::CCSpriteFrameCache * onExit()
   _DWORD * onSubmit(cocos2d::CCObject*)
   cocos2d::CCLayer * SecretLayer2()
   SecretLayer2 * ~SecretLayer2()
   virtual SecretLayer2 * ~SecretLayer2()
   virtual cocos2d::CCTexture2D * init(void)
   virtual cocos2d::CCSpriteFrameCache * onExit(void)
   virtual signed int keyBackClicked(void)
   virtual _DWORD * textInputOpened(CCTextInputNode *)
   virtual _DWORD * textInputClosed(CCTextInputNode *)
   virtual _DWORD * textChanged(CCTextInputNode *)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual int dialogClosed(DialogLayer *)
}
class SecretNumberLayer : cocos2d::CCLayer{
   _DWORD * playNumberEffect(int)
   _DWORD init()
   cocos2d::CCLayer * create()
   SecretNumberLayer * ~SecretNumberLayer()
   virtual SecretNumberLayer * ~SecretNumberLayer()
   virtual _DWORD init(void)
}
class SecretLayer3 : cocos2d::CCLayer, DialogDelegate{
   cocos2d::CCAction * animateEyes()
   cocos2d::CCAction * revealStep1()
   cocos2d::CCAction * revealStep2()
   cocos2d::CCAction * revealStep3()
   _DWORD * revealStep4()
   cocos2d::CCAction * revealStep5()
   void dialogClosed(DialogLayer*)
   int keyBackClicked()
   cocos2d::CCAction * showUnlockDialog()
   cocos2d::CCAction * firstInteractionStep1()
   cocos2d::CCAction * firstInteractionStep2()
   cocos2d::CCAction * firstInteractionStep3()
   cocos2d::CCAction * firstInteractionStep4()
   cocos2d::CCTexture2D * init()
   AppDelegate * scene()
   cocos2d::CCLayer * create()
   int onBack(cocos2d::CCObject*)
   int onExit()
   int onClick(cocos2d::CCObject*)
   int onChest01(cocos2d::CCObject*)
   int onChest02(cocos2d::CCObject*)
   SecretLayer3 * ~SecretLayer3()
   virtual SecretLayer3 * ~SecretLayer3()
   virtual cocos2d::CCTexture2D * init(void)
   virtual int onExit(void)
   virtual int keyBackClicked(void)
   virtual void dialogClosed(DialogLayer *)
}
class DungeonBarsSprite : cocos2d::CCNode{
   cocos2d::CCAction * animateOutBars()
   signed int init()
   void visit()
   cocos2d::CCNode * create()
   DungeonBarsSprite * ~DungeonBarsSprite()
   virtual DungeonBarsSprite * ~DungeonBarsSprite()
   virtual signed int init(void)
   virtual void visit(void)
}
class SecretLayer4 : cocos2d::CCLayer, TextInputDelegate, FLAlertLayerProtocol, DialogDelegate{
   SecretLayer4 * getMessage()
   cocos2d::CCArray * showDialog(int)
   cocos2d::CCNode * nodeWithTag(int)
   _DWORD * textChanged(CCTextInputNode*)
   int dialogClosed(DialogLayer*)
   int selectAThread()
   signed int keyBackClicked()
   cocos2d::CCAction * playCoinEffect()
   int FLAlert_Clicked(FLAlertLayer*, bool)
   SecretLayer4 * getBasicMessage()
   SecretLayer4 * getErrorMessage()
   cocos2d::CCAction * showFirstDialog()
   _DWORD * textInputClosed(CCTextInputNode*)
   _DWORD * textInputOpened(CCTextInputNode*)
   SecretLayer4 * getThreadMessage()
   int updateSearchLabel(char const*)
   int updateMessageLabel(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCTexture2D * init()
   AppDelegate * scene()
   cocos2d::CCLayer * create()
   signed int onBack(cocos2d::CCObject*)
   cocos2d::CCSpriteFrameCache * onExit()
   _DWORD * onSubmit(cocos2d::CCObject*)
   void * onChest01(cocos2d::CCObject*)
   cocos2d::CCLayer * SecretLayer4()
   SecretLayer4 * ~SecretLayer4()
   virtual SecretLayer4 * ~SecretLayer4()
   virtual cocos2d::CCTexture2D * init(void)
   virtual cocos2d::CCSpriteFrameCache * onExit(void)
   virtual signed int keyBackClicked(void)
   virtual _DWORD * textInputOpened(CCTextInputNode *)
   virtual _DWORD * textInputClosed(CCTextInputNode *)
   virtual _DWORD * textChanged(CCTextInputNode *)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual int dialogClosed(DialogLayer *)
}
class SetItemIDLayer : FLAlertLayer, TextInputDelegate{
   int textChanged(CCTextInputNode*)
   int updateItemID()
   _DWORD * onItemIDArrow(cocos2d::CCObject*)
   int keyBackClicked()
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int updateEditorLabel()
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint)
   int determineStartValues()
   _DWORD * updateTextInputLabel()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   SetItemIDLayer * ~SetItemIDLayer()
   virtual SetItemIDLayer * ~SetItemIDLayer()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class SetTargetIDLayer : FLAlertLayer, TextInputDelegate{
   int textChanged(CCTextInputNode*)
   int keyBackClicked()
   int onMultiTrigger(cocos2d::CCObject*)
   int updateTargetID()
   _DWORD * onTargetIDArrow(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int onTouchTriggered(cocos2d::CCObject*)
   unsigned int updateEditorLabel()
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint)
   int onSpawnedByTrigger(cocos2d::CCObject*)
   int determineStartValues()
   _DWORD * updateTextInputLabel()
   int updateTouchTriggered()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int updateMultiTriggerBtn()
   int updateSpawnedByTrigger()
   signed int init(EffectGameObject*, cocos2d::CCArray*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int show()
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   int onClose(cocos2d::CCObject*)
   cocos2d::CCLayerColor * SetTargetIDLayer()
   SetTargetIDLayer * ~SetTargetIDLayer()
   virtual SetTargetIDLayer * ~SetTargetIDLayer()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class SetupAnimationPopup : FLAlertLayer, TextInputDelegate{
   int textChanged(CCTextInputNode*)
   int keyBackClicked()
   int onMultiTrigger(cocos2d::CCObject*)
   int updateTargetID()
   _DWORD * onTargetIDArrow(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int onTouchTriggered(cocos2d::CCObject*)
   int updateAnimationID()
   unsigned int updateEditorLabel()
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint, cocos2d::CCArray*)
   _DWORD * onAnimationIDArrow(cocos2d::CCObject*)
   int onSpawnedByTrigger(cocos2d::CCObject*)
   int determineStartValues()
   _DWORD * updateTextInputLabel()
   int updateTouchTriggered()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int updateMultiTriggerBtn()
   int updateSpawnedByTrigger()
   _DWORD * updateAnimationTextInputLabel()
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   cocos2d::CCLayerColor * SetupAnimationPopup()
   SetupAnimationPopup * ~SetupAnimationPopup()
   virtual SetupAnimationPopup * ~SetupAnimationPopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class SetupAnimSettingsPopup : FLAlertLayer, TextInputDelegate{
   int textChanged(CCTextInputNode*)
   int sliderChanged(cocos2d::CCObject*)
   int keyBackClicked()
   int onUseAnimOffset(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint, cocos2d::CCArray*)
   int updateAnimSpeedMod()
   int determineStartValues()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   _DWORD * updateRotationInputLabel()
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   SetupAnimSettingsPopup * ~SetupAnimSettingsPopup()
   virtual SetupAnimSettingsPopup * ~SetupAnimSettingsPopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class SetupCollisionTriggerPopup : FLAlertLayer, TextInputDelegate{
   int textChanged(CCTextInputNode*)
   _DWORD * updateItemID()
   int onEnableGroup(cocos2d::CCObject*)
   _DWORD * onItemIDArrow(cocos2d::CCObject*)
   _DWORD * updateItemID2()
   int keyBackClicked()
   _DWORD * onItemID2Arrow(cocos2d::CCObject*)
   int onMultiTrigger(cocos2d::CCObject*)
   _DWORD * updateTargetID()
   unsigned int onTargetIDArrow(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int onActivateOnExit(cocos2d::CCObject*)
   int onTouchTriggered(cocos2d::CCObject*)
   unsigned int updateEditorLabel()
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint, cocos2d::CCArray*)
   int onSpawnedByTrigger(cocos2d::CCObject*)
   int determineStartValues()
   int updateTouchTriggered()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int updateMultiTriggerBtn()
   _DWORD * updateItemIDInputLabel()
   int updateSpawnedByTrigger()
   _DWORD * updateItemID2InputLabel()
   _DWORD * updateTargetIDInputLabel()
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   cocos2d::CCLayerColor * SetupCollisionTriggerPopup()
   SetupCollisionTriggerPopup * ~SetupCollisionTriggerPopup()
   virtual SetupCollisionTriggerPopup * ~SetupCollisionTriggerPopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class SetupCountTriggerPopup : FLAlertLayer, TextInputDelegate{
   int textChanged(CCTextInputNode*)
   _DWORD * updateItemID()
   int onEnableGroup(cocos2d::CCObject*)
   _DWORD * onItemIDArrow(cocos2d::CCObject*)
   int keyBackClicked()
   int onMultiTrigger(cocos2d::CCObject*)
   _DWORD * updateTargetID()
   int onMultiActivate(cocos2d::CCObject*)
   _DWORD * onTargetIDArrow(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int onTouchTriggered(cocos2d::CCObject*)
   unsigned int updateEditorLabel()
   int updateTargetCount()
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint, cocos2d::CCArray*)
   int onSpawnedByTrigger(cocos2d::CCObject*)
   _DWORD * onTargetCountArrow(cocos2d::CCObject*)
   int determineStartValues()
   int updateTouchTriggered()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int updateMultiTriggerBtn()
   _DWORD * updateItemIDInputLabel()
   int updateSpawnedByTrigger()
   _DWORD * updateTargetIDInputLabel()
   _DWORD * updateCountTextInputLabel()
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   cocos2d::CCLayerColor * SetupCountTriggerPopup()
   SetupCountTriggerPopup * ~SetupCountTriggerPopup()
   virtual SetupCountTriggerPopup * ~SetupCountTriggerPopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class SetupInteractObjectPopup : FLAlertLayer, TextInputDelegate{
   int textChanged(CCTextInputNode*)
   int updateState()
   _DWORD * onNextItemID(cocos2d::CCObject*)
   int onToggleItem(cocos2d::CCObject*)
   _DWORD * updateItemID()
   int onEnableGroup(cocos2d::CCObject*)
   _DWORD * onItemIDArrow(cocos2d::CCObject*)
   int keyBackClicked()
   int updateTargetID()
   _DWORD * onTargetIDArrow(cocos2d::CCObject*)
   int onToggleTrigger(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int onSubstractCount(cocos2d::CCObject*)
   int updatePickupType()
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint, cocos2d::CCArray*)
   int determineStartValues()
   _DWORD * updateTextInputLabel()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   _DWORD * updateItemIDInputLabel()
   cocos2d::CCArray * init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   SetupInteractObjectPopup * ~SetupInteractObjectPopup()
   virtual SetupInteractObjectPopup * ~SetupInteractObjectPopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class SetupInstantCountPopup : FLAlertLayer, TextInputDelegate{
   unsigned int onCountType(cocos2d::CCObject*)
   int textChanged(CCTextInputNode*)
   _DWORD * updateItemID()
   int onEnableGroup(cocos2d::CCObject*)
   int keyBackClicked()
   int onMultiTrigger(cocos2d::CCObject*)
   _DWORD * updateTargetID()
   _DWORD * onTargetIDArrow(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   _DWORD * onTargetID2Arrow(cocos2d::CCObject*)
   int onTouchTriggered(cocos2d::CCObject*)
   unsigned int updateEditorLabel()
   int updateTargetCount()
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint, cocos2d::CCArray*)
   int onSpawnedByTrigger(cocos2d::CCObject*)
   _DWORD * onTargetCountArrow(cocos2d::CCObject*)
   int determineStartValues()
   int updateTouchTriggered()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int updateMultiTriggerBtn()
   _DWORD * updateItemIDInputLabel()
   int updateSpawnedByTrigger()
   _DWORD * updateTargetIDInputLabel()
   _DWORD * updateCountTextInputLabel()
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   cocos2d::CCLayerColor * SetupInstantCountPopup()
   SetupInstantCountPopup * ~SetupInstantCountPopup()
   virtual SetupInstantCountPopup * ~SetupInstantCountPopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class SetupPickupTriggerPopup : FLAlertLayer, TextInputDelegate{
   int textChanged(CCTextInputNode*)
   _DWORD * onNextItemID(cocos2d::CCObject*)
   _DWORD * updateItemID()
   _DWORD * onItemIDArrow(cocos2d::CCObject*)
   int keyBackClicked()
   int onMultiTrigger(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int onTouchTriggered(cocos2d::CCObject*)
   unsigned int updateEditorLabel()
   int updateTargetCount()
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint, cocos2d::CCArray*)
   int onSpawnedByTrigger(cocos2d::CCObject*)
   _DWORD * onTargetCountArrow(cocos2d::CCObject*)
   int determineStartValues()
   int updateTouchTriggered()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int updateMultiTriggerBtn()
   _DWORD * updateItemIDInputLabel()
   int updateSpawnedByTrigger()
   _DWORD * updateCountTextInputLabel()
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   cocos2d::CCLayerColor * SetupPickupTriggerPopup()
   SetupPickupTriggerPopup * ~SetupPickupTriggerPopup()
   virtual SetupPickupTriggerPopup * ~SetupPickupTriggerPopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class SetupRotatePopup : FLAlertLayer, TextInputDelegate{
   int textChanged(CCTextInputNode*)
   unsigned int updateState()
   unsigned int onChangeState(cocos2d::CCObject*)
   int sliderChanged(cocos2d::CCObject*)
   int keyBackClicked()
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint, cocos2d::CCArray*)
   int determineStartValues()
   int updateCustomRotation()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int updateDisableRotation()
   _DWORD * updateRotationInputLabel()
   cocos2d::CCArray * init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   SetupRotatePopup * ~SetupRotatePopup()
   virtual SetupRotatePopup * ~SetupRotatePopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class SetupShakePopup : FLAlertLayer, TextInputDelegate{
   int textChanged(CCTextInputNode*)
   _DWORD * updateShake()
   _DWORD * sliderChanged(cocos2d::CCObject*)
   int keyBackClicked()
   int onMultiTrigger(cocos2d::CCObject*)
   int updateDuration()
   _DWORD * updateDurLabel(bool)
   _DWORD * updateInterval()
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int onTouchTriggered(cocos2d::CCObject*)
   _DWORD * updateShakeLabel(bool)
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint, cocos2d::CCArray*)
   int onSpawnedByTrigger(cocos2d::CCObject*)
   _DWORD * updateIntervalLabel(bool)
   int determineStartValues()
   int updateTouchTriggered()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int updateMultiTriggerBtn()
   int updateSpawnedByTrigger()
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   cocos2d::CCLayerColor * SetupShakePopup()
   SetupShakePopup * ~SetupShakePopup()
   virtual SetupShakePopup * ~SetupShakePopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class SetupTouchTogglePopup : FLAlertLayer, TextInputDelegate{
   int onHoldMode(cocos2d::CCObject*)
   int onTouchMode(cocos2d::CCObject*)
   int textChanged(CCTextInputNode*)
   int keyBackClicked()
   int onMultiTrigger(cocos2d::CCObject*)
   int updateTargetID()
   int onDualTouchMode(cocos2d::CCObject*)
   _DWORD * onTargetIDArrow(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   cocos2d::CCAction * textInputReturn(CCTextInputNode*)
   int onTouchTriggered(cocos2d::CCObject*)
   unsigned int updateEditorLabel()
   cocos2d::CCNodeRGBA * createToggleButton(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (cocos2d::CCObject::*)(cocos2d::CCObject*), bool, cocos2d::CCMenu*, cocos2d::CCPoint, cocos2d::CCArray*)
   int onSpawnedByTrigger(cocos2d::CCObject*)
   int determineStartValues()
   _DWORD * updateTextInputLabel()
   int updateTouchTriggered()
   cocos2d::CCAction * textInputShouldOffset(CCTextInputNode*, float)
   int updateMultiTriggerBtn()
   int updateSpawnedByTrigger()
   signed int init(EffectGameObject*, cocos2d::CCArray*)
   int show()
   cocos2d::CCNodeRGBA * create(EffectGameObject*, cocos2d::CCArray*)
   int onClose(cocos2d::CCObject*)
   cocos2d::CCLayerColor * SetupTouchTogglePopup()
   SetupTouchTogglePopup * ~SetupTouchTogglePopup()
   virtual SetupTouchTogglePopup * ~SetupTouchTogglePopup()
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
   virtual cocos2d::CCAction * textInputShouldOffset(CCTextInputNode *,float)
   virtual cocos2d::CCAction * textInputReturn(CCTextInputNode *)
}
class ShardsPage : FLAlertLayer{
   int onSwitchPage(cocos2d::CCObject*)
   int keyBackClicked()
    FLAlert_Clicked(FLAlertLayer*, bool)
   int registerWithTouchDispatcher()
   signed int init()
   int show()
   cocos2d::CCLayerColor * create()
   int onClose(cocos2d::CCObject*)
   int goToPage(int)
   ShardsPage * ~ShardsPage()
   virtual ShardsPage * ~ShardsPage()
   virtual signed int init(void)
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual int show(void)
}
class KeysLayer : cocos2d::CCLayer, FLAlertLayerProtocol, DialogDelegate{
   cocos2d::CCAction * dialogClosed(DialogLayer*)
   GJRewardItem * onSelectItem(cocos2d::CCObject*)
   int onSwitchPage(cocos2d::CCObject*)
   _DWORD * onSpecialItem(cocos2d::CCObject*)
   signed int keyBackClicked()
   int FLAlert_Clicked(FLAlertLayer*, bool)
   int switchToOpenedState(CCMenuItemSpriteExtra*)
   int updateUnlockedLabel()
   signed int init()
   AppDelegate * scene()
   cocos2d::CCLayer * create()
   signed int onBack(cocos2d::CCObject*)
   cocos2d::CCAction * onShop(cocos2d::CCObject*)
   cocos2d::CCAction * onShop3(cocos2d::CCObject*)
   int goToPage(int)
   KeysLayer * ~KeysLayer()
   virtual KeysLayer * ~KeysLayer()
   virtual signed int init(void)
   virtual signed int keyBackClicked(void)
   virtual int FLAlert_Clicked(FLAlertLayer *,bool)
   virtual cocos2d::CCAction * dialogClosed(DialogLayer *)
}
class WorldSelectLayer : cocos2d::CCLayer, BoomScrollLayerDelegate{
   int setupWorlds()
   unsigned int colorForPage(int)
   int updateArrows()
   unsigned int getColorValue(int, int, float)
   int keyBackClicked()
   int unblockButtons()
   int scrollLayerMoved(cocos2d::CCPoint)
   cocos2d::CCAction * showCompleteDialog()
   cocos2d::CCAction * animateInActiveIsland()
   int scrollLayerScrolledToPage(BoomScrollLayer*, int)
   int scrollLayerWillScrollToPage(BoomScrollLayer*, int)
   cocos2d::CCTexture2D * init(int)
   AppDelegate * scene(int)
   cocos2d::CCLayer * create(int)
   int onBack(cocos2d::CCObject*)
   cocos2d::CCSpriteFrameCache * onExit()
   int onNext(cocos2d::CCObject*)
   int onPrev(cocos2d::CCObject*)
   unsigned int goToPage(int, bool)
   int onGarage(cocos2d::CCObject*)
   signed int tryShowAd()
   WorldSelectLayer * ~WorldSelectLayer()
   virtual WorldSelectLayer * ~WorldSelectLayer()
   virtual cocos2d::CCSpriteFrameCache * onExit(void)
   virtual int keyBackClicked(void)
   virtual int scrollLayerWillScrollToPage(BoomScrollLayer *,int)
   virtual int scrollLayerScrolledToPage(BoomScrollLayer *,int)
   virtual int scrollLayerMoved(cocos2d::CCPoint)
}
class GJWorldNode : cocos2d::CCNode{
   int addDotsToLevel(int, bool)
   int unlockActiveItem()
   GJWorldNode * dotPositionForLevel(int, int)
   GJWorldNode * positionForLevelButton(int)
   signed int init(int, WorldSelectLayer*)
   cocos2d::CCNode * create(int, WorldSelectLayer*)
   int onLevel(cocos2d::CCObject*)
   int playStep1()
   GJWorldNode * playStep2()
   signed int playStep3()
   GJWorldNode * ~GJWorldNode()
   virtual GJWorldNode * ~GJWorldNode()
}
class WorldLevelPage : FLAlertLayer{
   int keyBackClicked()
   signed int init(GJGameLevel*, GJWorldNode*)
   int show()
   cocos2d::CCLayerColor * create(GJGameLevel*, GJWorldNode*)
   int onInfo(cocos2d::CCObject*)
   int onPlay(cocos2d::CCObject*)
   int onSong(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   WorldLevelPage * ~WorldLevelPage()
   virtual WorldLevelPage * ~WorldLevelPage()
   virtual int keyBackClicked(void)
   virtual int show(void)
}
class FollowRewardPage : FLAlertLayer, FLAlertLayerProtocol, GameRateDelegate{
   GameStatsManager * updateRate()
   _DWORD * onSpecialItem(cocos2d::CCObject*)
   int keyBackClicked()
   void FLAlert_Clicked(FLAlertLayer*, bool)
   int switchToOpenedState(CCMenuItemSpriteExtra*)
   int registerWithTouchDispatcher()
   signed int init()
   int show()
   cocos2d::CCLayerColor * create()
   int onClose(cocos2d::CCObject*)
   FollowRewardPage * ~FollowRewardPage()
   virtual FollowRewardPage * ~FollowRewardPage()
   virtual signed int init(void)
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual void FLAlert_Clicked(FLAlertLayer *,bool)
   virtual GameStatsManager * updateRate(void)
}
class OnlineListDelegate{
    setupPageInfo(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
    loadListFailed(char const*)
    loadListFinished(cocos2d::CCArray*, char const*)
   virtual  loadListFinished(cocos2d::CCArray *,char const*)
   virtual  loadListFailed(char const*)
   virtual  setupPageInfo(std::string,char const*)
}
class TopArtistsLayer : FLAlertLayer, OnlineListDelegate{
   _DWORD * onNextPage(cocos2d::CCObject*)
   _DWORD * onPrevPage(cocos2d::CCObject*)
   unsigned int setupPageInfo(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
   int keyBackClicked()
   signed int loadListFailed(char const*)
   int loadListFinished(cocos2d::CCArray*, char const*)
   int setupLeaderboard(cocos2d::CCArray*)
   int updateLevelsLabel()
   int registerWithTouchDispatcher()
   signed int init()
   int show()
   cocos2d::CCLayerColor * create()
   int onClose(cocos2d::CCObject*)
   _DWORD * loadPage(int)
   signed int isCorrect(char const*)
   TopArtistsLayer * ~TopArtistsLayer()
   virtual TopArtistsLayer * ~TopArtistsLayer()
   virtual signed int init(void)
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual int show(void)
   virtual int loadListFinished(cocos2d::CCArray *,char const*)
   virtual signed int loadListFailed(char const*)
   virtual unsigned int setupPageInfo(std::string,char const*)
}
class CommunityCreditNode : cocos2d::CCNode{
   signed int init(int, int, int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCNode * create(int, int, int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCNode * ~CommunityCreditNode()
   virtual cocos2d::CCNode * ~CommunityCreditNode()
}
class CommunityCreditsPage : FLAlertLayer{
   int onSwitchPage(cocos2d::CCObject*)
   int keyBackClicked()
    FLAlert_Clicked(FLAlertLayer*, bool)
   int registerWithTouchDispatcher()
   signed int init()
   int show()
   cocos2d::CCLayerColor * create()
   int onClose(cocos2d::CCObject*)
   int goToPage(int)
   CommunityCreditsPage * ~CommunityCreditsPage()
   virtual CommunityCreditsPage * ~CommunityCreditsPage()
   virtual signed int init(void)
   virtual int registerWithTouchDispatcher(void)
   virtual int keyBackClicked(void)
   virtual int show(void)
}
class SetGroupIDLayer : FLAlertLayer, TextInputDelegate{
   unsigned int addGroupID(int)
   unsigned int onAddGroup(cocos2d::CCObject*)
   int onDontFade(cocos2d::CCObject*)
   int onDontEnter(cocos2d::CCObject*)
   int textChanged(CCTextInputNode*)
   int onHighDetail(cocos2d::CCObject*)
   int onSmoothEase(cocos2d::CCObject*)
   int updateZOrder()
   int onEditorLayer(cocos2d::CCObject*)
   unsigned int onZLayerShift(cocos2d::CCObject*)
   unsigned int removeGroupID(int)
   int keyBackClicked()
   int onEditorLayer2(cocos2d::CCObject*)
   _DWORD * onNextGroupID1(cocos2d::CCObject*)
   int textInputClosed(CCTextInputNode*)
   int onRemoveFromGroup(cocos2d::CCObject*)
   int updateEditorLabel()
   int updateZOrderLabel()
   int updateEditorLabel2()
   _DWORD * updateGroupIDLabel()
   unsigned int callRemoveFromGroup(float)
   int onToggleGroupParent(cocos2d::CCObject*)
   int updateEditorLayerID()
   unsigned int updateZLayerButtons()
   int determineStartValues()
   int updateEditorLayerID2()
   unsigned int updateGroupIDButtons()
   cocos2d::CCArray * init(GameObject*, cocos2d::CCArray*)
   cocos2d::CCLayerColor * create(GameObject*, cocos2d::CCArray*)
   int onCopy(cocos2d::CCObject*)
   int onClose(cocos2d::CCObject*)
   unsigned int onPaste(cocos2d::CCObject*)
   unsigned int onZLayer(cocos2d::CCObject*)
   int onZOrder(cocos2d::CCObject*)
   _DWORD * onGroupID(cocos2d::CCObject*)
   cocos2d::CCLayerColor * SetGroupIDLayer()
   SetGroupIDLayer * ~SetGroupIDLayer()
   virtual SetGroupIDLayer * ~SetGroupIDLayer()
   virtual int keyBackClicked(void)
   virtual int textInputClosed(CCTextInputNode *)
   virtual int textChanged(CCTextInputNode *)
}
class cocos2d::extension::AssetsManager::Helper : cocos2d::CCObject{
   int sendMessage(cocos2d::extension::AssetsManager::_Message*)
   _DWORD * handleUpdateSucceed(cocos2d::extension::AssetsManager::_Message*)
   int update(float)
   cocos2d::extension::AssetsManager::Helper * Helper()
   cocos2d::extension::AssetsManager::Helper * ~Helper()
   virtual cocos2d::extension::AssetsManager::Helper * ~Helper()
   virtual int update(float)
}
class cocos2d::extension::AssetsManager{
   int getVersion()
   cocos2d * uncompress()
   signed int checkUpdate()
   int setDelegate(cocos2d::extension::AssetsManagerDelegateProtocol*)
   _DWORD * deleteVersion()
   int * setPackageUrl(char const*)
   void setSearchPath()
   void setStoragePath(char const*)
   signed int createDirectory(char const*)
   void checkStoragePath()
   int sendErrorMessage(cocos2d::extension::AssetsManager::ErrorCode)
   int * setVersionFileUrl(char const*)
   int getConnectionTimeout()
   int setConnectionTimeout(unsigned int)
   int Helper::sendMessage(cocos2d::extension::AssetsManager::_Message*)
   _DWORD * Helper::handleUpdateSucceed(cocos2d::extension::AssetsManager::_Message*)
   int Helper::update(float)
   cocos2d::extension::AssetsManager::Helper * Helper::Helper()
   cocos2d::extension::AssetsManager::Helper * Helper::~Helper()
   int update()
   signed int downLoad()
   cocos2d::extension::AssetsManager * AssetsManager(char const*, char const*, char const*)
   cocos2d::extension::AssetsManager * ~AssetsManager()
   int getPackageUrl() const
   int getStoragePath() const
   int getVersionFileUrl() const
   virtual cocos2d::extension::AssetsManager * ~AssetsManager()
   virtual signed int checkUpdate(void)
   virtual int update(void)
}
class cocos2d::extension::CCControl : cocos2d::CCLayerRGBA{
   int isSelected()
   int setEnabled(bool)
    needsLayout()
   int setSelected(bool)
   int isHighlighted()
   signed int isTouchInside(cocos2d::CCTouch*)
   int setHighlighted(bool)
   cocos2d::extension::CCControl * getTouchLocation(cocos2d::CCTouch*)
   int hasVisibleParents()
   int isOpacityModifyRGB()
   int setOpacityModifyRGB(bool)
   int * addHandleOfControlEvent(int, unsigned int)
   signed int getHandleOfControlEvent(unsigned int)
   void removeHandleOfControlEvent(unsigned int)
   cocos2d::CCObject * dispatchListforControlEvent(unsigned int)
   int registerWithTouchDispatcher()
   int sendActionsForControlEvents(unsigned int)
   int addTargetWithActionForControlEvent(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*, unsigned int), unsigned int)
   int addTargetWithActionForControlEvents(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*, unsigned int), unsigned int)
   cocos2d::CCArray * removeTargetWithActionForControlEvent(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*, unsigned int), unsigned int)
   cocos2d::CCArray * removeTargetWithActionForControlEvents(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*, unsigned int), unsigned int)
   signed int init()
   cocos2d::extension::CCControl * create()
   _DWORD onExit()
   _DWORD onEnter()
   int isEnabled()
   cocos2d::extension::CCControl * CCControl()
   cocos2d::extension::CCControl * ~CCControl()
   virtual cocos2d::extension::CCControl * ~CCControl()
   virtual signed int init(void)
   virtual _DWORD onEnter(void)
   virtual _DWORD onExit(void)
   virtual int registerWithTouchDispatcher(void)
   virtual int setOpacityModifyRGB(bool)
   virtual int isOpacityModifyRGB(void)
   virtual int setEnabled(bool)
   virtual int isEnabled(void)
   virtual int setSelected(bool)
   virtual int isSelected(void)
   virtual int setHighlighted(bool)
   virtual int isHighlighted(void)
   virtual  needsLayout(void)
   virtual int sendActionsForControlEvents(uint)
   virtual int addTargetWithActionForControlEvents(cocos2d::CCObject *,void (cocos2d::CCObject::*)(cocos2d::CCObject *,uint),uint)
   virtual cocos2d::CCArray * removeTargetWithActionForControlEvents(cocos2d::CCObject *,void (cocos2d::CCObject::*)(cocos2d::CCObject *,uint),uint)
   virtual cocos2d::extension::CCControl * getTouchLocation(cocos2d::CCTouch *)
   virtual signed int isTouchInside(cocos2d::CCTouch *)
}
class cocos2d::extension::CCColor3bObject : cocos2d::CCObject{
   cocos2d::extension::CCColor3bObject * ~CCColor3bObject()
   virtual cocos2d::extension::CCColor3bObject * ~CCColor3bObject()
}
class cocos2d::extension::CCControlButton : cocos2d::extension::CCControl{
   int getOpacity()
   int setEnabled(bool)
   int setMargins(int, int)
   int setOpacity(unsigned char)
   int needsLayout()
   int setSelected(bool)
   int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int setTitleLabel(cocos2d::CCNode*)
   cocos2d::CCAction * setHighlighted(bool)
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   cocos2d::extension::CCControlButton * getPreferredSize()
   cocos2d::CCObject * getTitleForState(unsigned int)
   int setPreferredSize(cocos2d::CCSize)
   void setTitleForState(cocos2d::CCString*, unsigned int)
   int getZoomOnTouchDown()
   int setZoomOnTouchDown(bool)
   cocos2d::extension::CCControlButton * getLabelAnchorPoint()
   void * getTitleTTFForState(unsigned int)
   int setBackgroundSprite(cocos2d::extension::CCScale9Sprite*)
   int setLabelAnchorPoint(cocos2d::CCPoint)
   int setTitleTTFForState(char const*, unsigned int)
   unsigned int getTitleColorForState(unsigned int)
   int getTitleLabelForState(unsigned int)
   int setTitleColorForState(cocos2d::_ccColor3B, unsigned int)
   int setTitleLabelForState(cocos2d::CCNode*, unsigned int)
   void * getTitleBMFontForState(unsigned int)
   int setTitleBMFontForState(char const*, unsigned int)
   int getTitleTTFSizeForState(unsigned int)
   _DWORD * setTitleTTFSizeForState(float, unsigned int)
   int initWithBackgroundSprite(cocos2d::extension::CCScale9Sprite*)
   int setAdjustBackgroundImage(bool)
   int doesAdjustBackgroundImage()
   int getBackgroundSpriteForState(unsigned int)
   int setBackgroundSpriteForState(cocos2d::extension::CCScale9Sprite*, unsigned int)
   cocos2d::CCDictionary * initWithLabelAndBackgroundSprite(cocos2d::CCNode*, cocos2d::extension::CCScale9Sprite*)
   int setBackgroundSpriteFrameForState(cocos2d::CCSpriteFrame*, unsigned int)
   int initWithTitleAndFontNameAndFontSize(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, float)
   int init()
   cocos2d::extension::CCControlButton * create(cocos2d::extension::CCScale9Sprite*)
   cocos2d::extension::CCControlButton * create(cocos2d::CCNode*, cocos2d::extension::CCScale9Sprite*)
   cocos2d::extension::CCControlButton * create(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, float)
   cocos2d::extension::CCControlButton * create()
   char * getColor()
   void * setColor(cocos2d::_ccColor3B const&)
   cocos2d::extension::CCControlButton * CCControlButton()
   cocos2d::extension::CCControlButton * ~CCControlButton()
   virtual cocos2d::extension::CCControlButton * ~CCControlButton()
   virtual int init(void)
   virtual int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int getOpacity(void)
   virtual int setOpacity(uchar)
   virtual char * getColor(void)
   virtual void * setColor(cocos2d::_ccColor3B const&)
   virtual int setEnabled(bool)
   virtual int setSelected(bool)
   virtual cocos2d::CCAction * setHighlighted(bool)
   virtual int needsLayout(void)
   virtual cocos2d::extension::CCControlButton * getPreferredSize(void)
   virtual int setPreferredSize(cocos2d::CCSize)
   virtual int getZoomOnTouchDown(void)
   virtual int setZoomOnTouchDown(bool)
   virtual cocos2d::extension::CCControlButton * getLabelAnchorPoint(void)
   virtual int setLabelAnchorPoint(cocos2d::CCPoint)
   virtual int setMargins(int,int)
   virtual cocos2d::CCDictionary * initWithLabelAndBackgroundSprite(cocos2d::CCNode *,cocos2d::extension::CCScale9Sprite *)
   virtual int initWithTitleAndFontNameAndFontSize(std::string,char const*,float)
   virtual int initWithBackgroundSprite(cocos2d::extension::CCScale9Sprite *)
   virtual cocos2d::CCObject * getTitleForState(uint)
   virtual void setTitleForState(cocos2d::CCString *,uint)
   virtual unsigned int getTitleColorForState(uint)
   virtual int setTitleColorForState(cocos2d::_ccColor3B,uint)
   virtual int getTitleLabelForState(uint)
   virtual int setTitleLabelForState(cocos2d::CCNode *,uint)
   virtual int setTitleTTFForState(char const*,uint)
   virtual void * getTitleTTFForState(uint)
   virtual _DWORD * setTitleTTFSizeForState(float,uint)
   virtual int getTitleTTFSizeForState(uint)
   virtual int setTitleBMFontForState(char const*,uint)
   virtual void * getTitleBMFontForState(uint)
   virtual int getBackgroundSpriteForState(uint)
   virtual int setBackgroundSpriteForState(cocos2d::extension::CCScale9Sprite *,uint)
   virtual int setBackgroundSpriteFrameForState(cocos2d::CCSpriteFrame *,uint)
}
class cocos2d::extension::CCControlColourPicker : cocos2d::extension::CCControl{
   int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
    colourPicker()
   int setColorValue(cocos2d::_ccColor3B const&)
   __int64 updateControlPicker()
   int hueSliderValueChanged(cocos2d::CCObject*, unsigned int)
   int colourSliderValueChanged(cocos2d::CCObject*, unsigned int)
   int updateHueAndControlPicker()
   signed int init()
   cocos2d::extension::CCControl * create()
   cocos2d::extension::CCControlColourPicker * ~CCControlColourPicker()
   virtual cocos2d::extension::CCControlColourPicker * ~CCControlColourPicker()
   virtual signed int init(void)
   virtual int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int setColorValue(cocos2d::_ccColor3B const&)
}
class cocos2d::extension::CCControlHuePicker : cocos2d::extension::CCControl{
   int setEnabled(bool)
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   unsigned int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int setHuePercentage(float)
   signed int checkSliderPosition(cocos2d::CCPoint, bool)
   signed int initWithTargetAndPos(cocos2d::CCNode*, cocos2d::CCPoint)
   int updateSliderPosition(cocos2d::CCPoint)
   int registerWithTouchDispatcher()
   cocos2d::extension::CCControlHuePicker * create(cocos2d::CCNode*, cocos2d::CCPoint)
   int setHue(float)
   cocos2d::extension::CCControlHuePicker * CCControlHuePicker()
   cocos2d::extension::CCControlHuePicker * ~CCControlHuePicker()
   virtual cocos2d::extension::CCControlHuePicker * ~CCControlHuePicker()
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual unsigned int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
   virtual int setEnabled(bool)
   virtual int setHue(float)
   virtual int setHuePercentage(float)
   virtual signed int initWithTargetAndPos(cocos2d::CCNode *,cocos2d::CCPoint)
}
class cocos2d::extension::CCControlSaturationBrightnessPicker : cocos2d::extension::CCControl{
   int setEnabled(bool)
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int updateWithHSV(cocos2d::extension::HSV)
   signed int checkSliderPosition(cocos2d::CCPoint, bool)
   signed int initWithTargetAndPos(cocos2d::CCNode*, cocos2d::CCPoint)
   void updateDraggerWithHSV(cocos2d::extension::HSV)
   int updateSliderPosition(cocos2d::CCPoint)
   int registerWithTouchDispatcher()
   cocos2d::extension::CCControlSaturationBrightnessPicker * create(cocos2d::CCNode*, cocos2d::CCPoint)
   cocos2d::extension::CCControlSaturationBrightnessPicker * CCControlSaturationBrightnessPicker()
   cocos2d::extension::CCControlSaturationBrightnessPicker * ~CCControlSaturationBrightnessPicker()
   virtual cocos2d::extension::CCControlSaturationBrightnessPicker * ~CCControlSaturationBrightnessPicker()
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
   virtual int setEnabled(bool)
   virtual signed int initWithTargetAndPos(cocos2d::CCNode *,cocos2d::CCPoint)
   virtual int updateWithHSV(cocos2d::extension::HSV)
   virtual void updateDraggerWithHSV(cocos2d::extension::HSV)
}
class cocos2d::extension::CCControlSlider : cocos2d::extension::CCControl{
   int setEnabled(bool)
   int needsLayout()
   int sliderBegan(cocos2d::CCPoint)
   int sliderEnded(cocos2d::CCPoint)
   int sliderMoved(cocos2d::CCPoint)
   int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   cocos2d::CCTouch * ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   signed int isTouchInside(cocos2d::CCTouch*)
   signed int initWithSprites(cocos2d::CCSprite*, cocos2d::CCSprite*, cocos2d::CCSprite*)
   int setMaximumValue(float)
   int setMinimumValue(float)
   int valueForLocation(cocos2d::CCPoint)
   cocos2d::extension::CCControlSlider * locationFromTouch(cocos2d::CCTouch*)
   cocos2d::extension::CCControlSlider * create(char const*, char const*, char const*)
   cocos2d::extension::CCControlSlider * create(cocos2d::CCSprite*, cocos2d::CCSprite*, cocos2d::CCSprite*)
   int setValue(float)
   cocos2d::extension::CCControlSlider * CCControlSlider()
   cocos2d::extension::CCControlSlider * ~CCControlSlider()
   virtual cocos2d::extension::CCControlSlider * ~CCControlSlider()
   virtual int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual cocos2d::CCTouch * ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int setEnabled(bool)
   virtual int needsLayout(void)
   virtual signed int isTouchInside(cocos2d::CCTouch *)
   virtual int setValue(float)
   virtual int setMinimumValue(float)
   virtual int setMaximumValue(float)
   virtual signed int initWithSprites(cocos2d::CCSprite *,cocos2d::CCSprite *,cocos2d::CCSprite *)
}
class cocos2d::CCActionTweenDelegate{
   int ~CCActionTweenDelegate()
   virtual int ~CCActionTweenDelegate()
}
class cocos2d::extension::CCControlSwitch : cocos2d::extension::CCControl{
   int setEnabled(bool)
   int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   cocos2d::CCTouch * ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   cocos2d::extension::CCControlSwitch * locationFromTouch(cocos2d::CCTouch*)
   signed int initWithMaskSprite(cocos2d::CCSprite*, cocos2d::CCSprite*, cocos2d::CCSprite*, cocos2d::CCSprite*)
   signed int initWithMaskSprite(cocos2d::CCSprite*, cocos2d::CCSprite*, cocos2d::CCSprite*, cocos2d::CCSprite*, cocos2d::CCLabelTTF*, cocos2d::CCLabelTTF*)
   int setOn(bool)
   int setOn(bool, bool)
   cocos2d::extension::CCControlSwitch * create(cocos2d::CCSprite*, cocos2d::CCSprite*, cocos2d::CCSprite*, cocos2d::CCSprite*)
   cocos2d::extension::CCControlSwitch * create(cocos2d::CCSprite*, cocos2d::CCSprite*, cocos2d::CCSprite*, cocos2d::CCSprite*, cocos2d::CCLabelTTF*, cocos2d::CCLabelTTF*)
   cocos2d::extension::CCControlSwitch * CCControlSwitch()
   cocos2d::extension::CCControl * ~CCControlSwitch()
   virtual cocos2d::extension::CCControl * ~CCControlSwitch()
   virtual int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual cocos2d::CCTouch * ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int setEnabled(bool)
}
class cocos2d::extension::CCControlSwitchSprite : cocos2d::CCSprite, cocos2d::CCActionTweenDelegate{
   int needsLayout()
   int onSideWidth()
   int offSideWidth()
   int updateTweenAction(float, char const*)
   int initWithMaskSprite(cocos2d::CCSprite*, cocos2d::CCSprite*, cocos2d::CCSprite*, cocos2d::CCSprite*, cocos2d::CCLabelTTF*, cocos2d::CCLabelTTF*)
   int setSliderXPosition(float)
   void draw()
   cocos2d::extension::CCControlSwitchSprite * CCControlSwitchSprite()
   cocos2d::extension::CCControlSwitchSprite * ~CCControlSwitchSprite()
   virtual cocos2d::extension::CCControlSwitchSprite * ~CCControlSwitchSprite()
   virtual void draw(void)
   virtual int updateTweenAction(float,char const*)
}
class cocos2d::extension::CCInvocation : cocos2d::CCObject{
   cocos2d::CCObject * create(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*, unsigned int), unsigned int)
   int invoke(cocos2d::CCObject*)
   int CCInvocation(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*, unsigned int), unsigned int)
   cocos2d::extension::CCInvocation * ~CCInvocation()
   virtual cocos2d::extension::CCInvocation * ~CCInvocation()
}
class cocos2d::extension::CCScale9Sprite : cocos2d::CCNodeRGBA{
   int getOpacity()
   _DWORD * setOpacity(unsigned char)
   int getInsetTop()
   int setInsetTop(float)
   cocos2d::extension::CCScale9Sprite * getCapInsets()
   int getInsetLeft()
   int initWithFile(cocos2d::CCRect, char const*)
   int initWithFile(char const*)
   int initWithFile(char const*, cocos2d::CCRect)
   int initWithFile(char const*, cocos2d::CCRect, cocos2d::CCRect)
   int setCapInsets(cocos2d::CCRect)
   int setInsetLeft(float)
   int getInsetRight()
   int setInsetRight(float)
   int getInsetBottom()
   signed int setContentSize(cocos2d::CCSize const&)
   int setInsetBottom(float)
   int setSpriteFrame(cocos2d::CCSpriteFrame*)
   int updateCapInset()
   int updatePositions()
   cocos2d::extension::CCScale9Sprite * getPreferredSize()
   int setBlendAdditive(bool)
   int setPreferredSize(cocos2d::CCSize)
   int initWithBatchNode(cocos2d::CCSpriteBatchNode*, cocos2d::CCRect, bool, cocos2d::CCRect)
   int initWithBatchNode(cocos2d::CCSpriteBatchNode*, cocos2d::CCRect, cocos2d::CCRect)
   int isOpacityModifyRGB()
   int initWithSpriteFrame(cocos2d::CCSpriteFrame*)
   int initWithSpriteFrame(cocos2d::CCSpriteFrame*, cocos2d::CCRect)
   _DWORD * setOpacityModifyRGB(bool)
   signed int updateWithBatchNode(cocos2d::CCSpriteBatchNode*, cocos2d::CCRect, bool, cocos2d::CCRect)
   int updateDisplayedColor(cocos2d::_ccColor3B const&)
   cocos2d::extension::CCScale9Sprite * createWithSpriteFrame(cocos2d::CCSpriteFrame*)
   cocos2d::extension::CCScale9Sprite * createWithSpriteFrame(cocos2d::CCSpriteFrame*, cocos2d::CCRect)
   int updateDisplayedOpacity(unsigned char)
   int initWithSpriteFrameName(char const*)
   int initWithSpriteFrameName(char const*, cocos2d::CCRect)
   cocos2d::extension::CCScale9Sprite * createWithSpriteFrameName(char const*)
   cocos2d::extension::CCScale9Sprite * createWithSpriteFrameName(char const*, cocos2d::CCRect)
   cocos2d::extension::CCScale9Sprite * resizableSpriteWithCapInsets(cocos2d::CCRect)
   int init()
   int visit()
   cocos2d::extension::CCScale9Sprite * create(cocos2d::CCRect, char const*)
   cocos2d::extension::CCScale9Sprite * create(char const*)
   cocos2d::extension::CCScale9Sprite * create(char const*, cocos2d::CCRect)
   cocos2d::extension::CCScale9Sprite * create(char const*, cocos2d::CCRect, cocos2d::CCRect)
   cocos2d::extension::CCScale9Sprite * create()
   char * getColor()
   int setColor(cocos2d::_ccColor3B const&)
   cocos2d::extension::CCScale9Sprite * CCScale9Sprite()
   cocos2d::extension::CCScale9Sprite * ~CCScale9Sprite()
   virtual cocos2d::extension::CCScale9Sprite * ~CCScale9Sprite()
   virtual int init(void)
   virtual signed int setContentSize(cocos2d::CCSize const&)
   virtual int visit(void)
   virtual int getOpacity(void)
   virtual _DWORD * setOpacity(uchar)
   virtual int updateDisplayedOpacity(uchar)
   virtual char * getColor(void)
   virtual int setColor(cocos2d::_ccColor3B const&)
   virtual int updateDisplayedColor(cocos2d::_ccColor3B const&)
   virtual _DWORD * setOpacityModifyRGB(bool)
   virtual int isOpacityModifyRGB(void)
   virtual cocos2d::extension::CCScale9Sprite * getPreferredSize(void)
   virtual int setPreferredSize(cocos2d::CCSize)
   virtual cocos2d::extension::CCScale9Sprite * getCapInsets(void)
   virtual int setCapInsets(cocos2d::CCRect)
   virtual int getInsetLeft(void)
   virtual int setInsetLeft(float)
   virtual int getInsetTop(void)
   virtual int setInsetTop(float)
   virtual int getInsetRight(void)
   virtual int setInsetRight(float)
   virtual int getInsetBottom(void)
   virtual int setInsetBottom(float)
   virtual int initWithBatchNode(cocos2d::CCSpriteBatchNode *,cocos2d::CCRect,bool,cocos2d::CCRect)
   virtual int initWithBatchNode(cocos2d::CCSpriteBatchNode *,cocos2d::CCRect,cocos2d::CCRect)
   virtual int initWithFile(char const*,cocos2d::CCRect,cocos2d::CCRect)
   virtual int initWithFile(char const*,cocos2d::CCRect)
   virtual int initWithFile(cocos2d::CCRect,char const*)
   virtual int initWithFile(char const*)
   virtual int initWithSpriteFrame(cocos2d::CCSpriteFrame *,cocos2d::CCRect)
   virtual int initWithSpriteFrame(cocos2d::CCSpriteFrame *)
   virtual int initWithSpriteFrameName(char const*,cocos2d::CCRect)
   virtual int initWithSpriteFrameName(char const*)
   virtual signed int updateWithBatchNode(cocos2d::CCSpriteBatchNode *,cocos2d::CCRect,bool,cocos2d::CCRect)
   virtual int setSpriteFrame(cocos2d::CCSpriteFrame *)
}
class cocos2d::extension::CCControlPotentiometer : cocos2d::extension::CCControl{
   int setEnabled(bool)
   int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   unsigned int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   signed int isTouchInside(cocos2d::CCTouch*)
   int getMaximumValue()
   int getMinimumValue()
   int setMaximumValue(float)
   int setMinimumValue(float)
   int potentiometerBegan(cocos2d::CCPoint)
   int potentiometerEnded(cocos2d::CCPoint)
   int potentiometerMoved(cocos2d::CCPoint)
   int distanceBetweenPointAndPoint(cocos2d::CCPoint, cocos2d::CCPoint)
   signed int initWithTrackSprite_ProgressTimer_ThumbSprite(cocos2d::CCSprite*, cocos2d::CCProgressTimer*, cocos2d::CCSprite*)
   int angleInDegreesBetweenLineFromPoint_toPoint_toLineFromPoint_toPoint(cocos2d::CCPoint, cocos2d::CCPoint, cocos2d::CCPoint, cocos2d::CCPoint)
   cocos2d::extension::CCControlPotentiometer * create(char const*, char const*, char const*)
   int getValue()
   int setValue(float)
   cocos2d::extension::CCControlPotentiometer * CCControlPotentiometer()
   cocos2d::extension::CCControlPotentiometer * ~CCControlPotentiometer()
   virtual cocos2d::extension::CCControlPotentiometer * ~CCControlPotentiometer()
   virtual int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual unsigned int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int setEnabled(bool)
   virtual signed int isTouchInside(cocos2d::CCTouch *)
}
class cocos2d::extension::CCControlStepper : cocos2d::extension::CCControl{
   int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   char * ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int isContinuous()
   int setStepValue(double)
   char * stopAutorepeat()
   int setMaximumValue(double)
   int setMinimumValue(double)
   int startAutorepeat()
   int setValueWithSendingEvent(double, bool)
   int updateLayoutUsingTouchLocation(cocos2d::CCPoint)
   signed int initWithMinusSpriteAndPlusSprite(cocos2d::CCSprite*, cocos2d::CCSprite*)
   cocos2d::extension::CCControlStepper * create(cocos2d::CCSprite*, cocos2d::CCSprite*)
   signed int update(float)
   __int64 getValue()
   int setValue(double)
   int setWraps(bool)
   cocos2d::extension::CCControlStepper * CCControlStepper()
   cocos2d::extension::CCControlStepper * ~CCControlStepper()
   virtual cocos2d::extension::CCControlStepper * ~CCControlStepper()
   virtual signed int update(float)
   virtual int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual char * ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int setWraps(bool)
   virtual int setMinimumValue(double)
   virtual int setMaximumValue(double)
   virtual int setValue(double)
   virtual __int64 getValue(void)
   virtual int setStepValue(double)
   virtual int setValueWithSendingEvent(double,bool)
   virtual int isContinuous(void)
}
class cocos2d::extension::CCScrollView : cocos2d::CCLayer{
   int beforeDraw()
   cocos2d::extension::CCScrollView * getViewRect()
   signed int setViewSize(cocos2d::CCSize)
   int updateInset()
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int getContainer()
   int getZoomScale()
   void setContainer(cocos2d::CCNode*)
   int setDirection(cocos2d::extension::CCScrollViewDirection)
   int setZoomScale(float)
   int setZoomScale(float, bool)
   signed int isNodeVisible(cocos2d::CCNode*)
   int setContentSize(cocos2d::CCSize const&)
   int setTouchEnabled(bool)
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   cocos2d::extension::CCScrollView * getContentOffset()
   int getScriptHandler(int)
   cocos2d::CCLayer * initWithViewSize(cocos2d::CCSize, cocos2d::CCNode*)
   __int64 setContentOffset(cocos2d::CCPoint, bool)
   int relocateContainer(bool)
   cocos2d::extension::CCScrollView * maxContainerOffset()
   cocos2d::extension::CCScrollView * minContainerOffset()
   char * deaccelerateScrolling(float)
   int * registerScriptHandler(int, int)
   int stoppedAnimatedScroll(cocos2d::CCNode*)
   cocos2d::CCAction * setZoomScaleInDuration(float, float)
   char * performedAnimatedScroll(float)
   void unregisterScriptHandler(int)
   __int64 setContentOffsetInDuration(cocos2d::CCPoint, float)
   int registerWithTouchDispatcher()
   cocos2d::CCLayer * init()
   int pause(cocos2d::CCObject*)
   int visit()
   cocos2d::extension::CCScrollView * create(cocos2d::CCSize, cocos2d::CCNode*)
   cocos2d::extension::CCScrollView * create()
   int resume(cocos2d::CCObject*)
   int addChild(cocos2d::CCNode*)
   int addChild(cocos2d::CCNode*, int)
   int addChild(cocos2d::CCNode*, int, int)
   void afterDraw()
   cocos2d::extension::CCScrollView * CCScrollView()
   cocos2d::extension::CCScrollView * ~CCScrollView()
   int getContentSize() const
   virtual cocos2d::extension::CCScrollView * ~CCScrollView()
   virtual cocos2d::CCLayer * init(void)
   virtual int setContentSize(cocos2d::CCSize const&)
   virtual int getContentSize(void)
   virtual int addChild(cocos2d::CCNode *)
   virtual int addChild(cocos2d::CCNode *,int)
   virtual int addChild(cocos2d::CCNode *,int,int)
   virtual int visit(void)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
   virtual int setTouchEnabled(bool)
   virtual int setDirection(cocos2d::extension::CCScrollViewDirection)
}
class cocos2d::extension::CCArrayForObjectSorting : cocos2d::CCArray{
   int insertSortedObject(cocos2d::extension::CCSortableObject*)
   _DWORD * objectWithObjectID(unsigned int)
   int * removeSortedObject(cocos2d::extension::CCSortableObject*)
   cocos2d::extension::CCArrayForObjectSorting * indexOfSortedObject(cocos2d::extension::CCSortableObject*)
   unsigned int setObjectID_ofSortedObject(unsigned int, cocos2d::extension::CCSortableObject*)
   cocos2d::extension::CCArrayForObjectSorting * ~CCArrayForObjectSorting()
   virtual cocos2d::extension::CCArrayForObjectSorting * ~CCArrayForObjectSorting()
}
class cocos2d::extension::CCScrollViewDelegate{
   int ~CCScrollViewDelegate()
   virtual int ~CCScrollViewDelegate()
}
class cocos2d::extension::CCTableView : cocos2d::extension::CCScrollView, cocos2d::extension::CCScrollViewDelegate{
   int reloadData()
   _DWORD * cellAtIndex(unsigned int)
   cocos2d::CCObject * dequeueCell()
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int _indexFromOffset(cocos2d::CCPoint)
   cocos2d::CCLayer * initWithViewSize(cocos2d::CCSize, cocos2d::CCNode*)
   cocos2d::extension::CCTableView * _offsetFromIndex(unsigned int)
   int _setIndexForCell(unsigned int, cocos2d::extension::CCTableViewCell*)
   int __indexFromOffset(cocos2d::CCPoint)
   int insertCellAtIndex(unsigned int)
   cocos2d::extension::CCTableView * __offsetFromIndex(unsigned int)
   int removeCellAtIndex(unsigned int)
   int scrollViewDidZoom(cocos2d::extension::CCScrollView*)
   int updateCellAtIndex(unsigned int)
   int _updateContentSize()
   cocos2d::extension::CCTableView * _addCellIfNecessary(cocos2d::extension::CCTableViewCell*)
   int _moveCellOutOfSight(cocos2d::extension::CCTableViewCell*)
   int scrollViewDidScroll(cocos2d::extension::CCScrollView*)
   int getVerticalFillOrder()
   int setVerticalFillOrder(cocos2d::extension::CCTableViewVerticalFillOrder)
   void _updateCellPositions()
   void unregisterAllScriptHandler()
   cocos2d::extension::CCTableView * create(cocos2d::extension::CCTableViewDataSource*, cocos2d::CCSize)
   cocos2d::extension::CCTableView * create(cocos2d::extension::CCTableViewDataSource*, cocos2d::CCSize, cocos2d::CCNode*)
   cocos2d::extension::CCTableView * CCTableView()
   cocos2d::extension::CCTableView * ~CCTableView()
   virtual cocos2d::extension::CCTableView * ~CCTableView()
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int scrollViewDidScroll(cocos2d::extension::CCScrollView *)
   virtual int scrollViewDidZoom(cocos2d::extension::CCScrollView *)
}
class cocos2d::extension::CCSortableObject{
   int ~CCSortableObject()
   virtual int ~CCSortableObject()
}
class cocos2d::extension::CCTableViewCell : cocos2d::CCNode, cocos2d::extension::CCSortableObject{
   int getObjectID()
   int setObjectID(unsigned int)
   int reset()
   int getIdx()
   int setIdx(unsigned int)
   cocos2d::extension::CCTableViewCell * ~CCTableViewCell()
   virtual cocos2d::extension::CCTableViewCell * ~CCTableViewCell()
   virtual int setObjectID(uint)
   virtual int getObjectID(void)
}
class cocos2d::extension::CCSortedObject : cocos2d::CCObject, cocos2d::extension::CCSortableObject{
   int getObjectID()
   int setObjectID(unsigned int)
   cocos2d::extension::CCSortedObject * ~CCSortedObject()
   virtual cocos2d::extension::CCSortedObject * ~CCSortedObject()
   virtual int setObjectID(uint)
   virtual int getObjectID(void)
}
class cocos2d::extension::CCEditBox : cocos2d::extension::CCControlButton, cocos2d::CCIMEDelegate{
   int setVisible(bool)
   int getDelegate()
   int setDelegate(cocos2d::extension::CCEditBoxDelegate*)
   int setFontName(char const*)
   int setFontSize(int)
   int setPosition(cocos2d::CCPoint const&)
   int getMaxLength()
   int setFontColor(cocos2d::_ccColor3B const&)
   int setInputFlag(cocos2d::extension::EditBoxInputFlag)
   int setInputMode(cocos2d::extension::EditBoxInputMode)
   int setMaxLength(int)
   int setReturnType(cocos2d::extension::KeyboardReturnType)
   int getPlaceHolder()
   int setAnchorPoint(cocos2d::CCPoint const&)
   int setContentSize(cocos2d::CCSize const&)
   int setPlaceHolder(char const*)
   int keyboardDidHide(cocos2d::CCIMEKeyboardNotificationInfo&)
   int keyboardDidShow(cocos2d::CCIMEKeyboardNotificationInfo&)
   int touchDownAction(cocos2d::CCObject*, unsigned int)
   int keyboardWillHide(cocos2d::CCIMEKeyboardNotificationInfo&)
   signed int keyboardWillShow(cocos2d::CCIMEKeyboardNotificationInfo&)
   int * setPlaceholderFont(char const*, int)
   int setPlaceholderFontName(char const*)
   int setPlaceholderFontSize(int)
   int setPlaceholderFontColor(cocos2d::_ccColor3B const&)
   int registerScriptEditBoxHandler(int)
   int unregisterScriptEditBoxHandler()
   int initWithSizeAndBackgroundSprite(cocos2d::CCSize const&, cocos2d::extension::CCScale9Sprite*)
   int visit()
   cocos2d::extension::CCEditBox * create(cocos2d::CCSize const&, cocos2d::extension::CCScale9Sprite*, cocos2d::extension::CCScale9Sprite*, cocos2d::extension::CCScale9Sprite*)
   int onExit()
   void * getText()
   int onEnter()
   int * setFont(char const*, int)
   int setText(char const*)
   cocos2d::extension::CCEditBox * CCEditBox()
   cocos2d::extension::CCEditBox * ~CCEditBox()
   virtual cocos2d::extension::CCEditBox * ~CCEditBox()
   virtual int setPosition(cocos2d::CCPoint const&)
   virtual int setAnchorPoint(cocos2d::CCPoint const&)
   virtual int setContentSize(cocos2d::CCSize const&)
   virtual int setVisible(bool)
   virtual int onEnter(void)
   virtual int onExit(void)
   virtual int visit(void)
   virtual signed int keyboardWillShow(cocos2d::CCIMEKeyboardNotificationInfo &)
   virtual int keyboardDidShow(cocos2d::CCIMEKeyboardNotificationInfo &)
   virtual int keyboardWillHide(cocos2d::CCIMEKeyboardNotificationInfo &)
   virtual int keyboardDidHide(cocos2d::CCIMEKeyboardNotificationInfo &)
}
class cocos2d::extension::CCEditBoxImpl{
   int ~CCEditBoxImpl()
   virtual int ~CCEditBoxImpl()
}
class cocos2d::extension::CCEditBoxImplAndroid : cocos2d::extension::CCEditBoxImpl{
    setVisible(bool)
    setPosition(cocos2d::CCPoint const&)
   int getMaxLength()
   signed int initWithSize(cocos2d::CCSize const&)
   __int64 openKeyboard()
   int setFontColor(cocos2d::_ccColor3B const&)
   int setInputFlag(cocos2d::extension::EditBoxInputFlag)
   int setInputMode(cocos2d::extension::EditBoxInputMode)
   int setMaxLength(int)
    closeKeyboard()
   int setReturnType(cocos2d::extension::KeyboardReturnType)
    setAnchorPoint(cocos2d::CCPoint const&)
    setContentSize(cocos2d::CCSize const&)
   int setPlaceHolder(char const*)
   int setPlaceholderFont(char const*, int)
   int setPlaceholderFontColor(cocos2d::_ccColor3B const&)
    doAnimationWhenKeyboardMove(float, float)
    visit()
   int getText()
    onEnter()
   int setFont(char const*, int)
   int setText(char const*)
   int isEditing()
   cocos2d::extension::CCEditBoxImplAndroid * CCEditBoxImplAndroid(cocos2d::extension::CCEditBox*)
   cocos2d::extension::CCEditBoxImplAndroid * ~CCEditBoxImplAndroid()
   virtual cocos2d::extension::CCEditBoxImplAndroid * ~CCEditBoxImplAndroid()
   virtual signed int initWithSize(cocos2d::CCSize const&)
   virtual int setFont(char const*,int)
   virtual int setFontColor(cocos2d::_ccColor3B const&)
   virtual int setPlaceholderFont(char const*,int)
   virtual int setPlaceholderFontColor(cocos2d::_ccColor3B const&)
   virtual int setInputMode(cocos2d::extension::EditBoxInputMode)
   virtual int setInputFlag(cocos2d::extension::EditBoxInputFlag)
   virtual int setMaxLength(int)
   virtual int getMaxLength(void)
   virtual int setReturnType(cocos2d::extension::KeyboardReturnType)
   virtual int isEditing(void)
   virtual int setText(char const*)
   virtual int getText(void)
   virtual int setPlaceHolder(char const*)
   virtual  doAnimationWhenKeyboardMove(float,float)
   virtual __int64 openKeyboard(void)
   virtual  closeKeyboard(void)
   virtual  setPosition(cocos2d::CCPoint const&)
   virtual  setVisible(bool)
   virtual  setContentSize(cocos2d::CCSize const&)
   virtual  setAnchorPoint(cocos2d::CCPoint const&)
   virtual  visit(void)
   virtual  onEnter(void)
}
class cocos2d::extension::CCHttpResponse : cocos2d::CCObject{
   cocos2d::extension::CCHttpResponse * CCHttpResponse(cocos2d::extension::CCHttpRequest*)
   cocos2d::extension::CCHttpResponse * ~CCHttpResponse()
   virtual cocos2d::extension::CCHttpResponse * ~CCHttpResponse()
}
class cocos2d::extension::CCHttpClient : cocos2d::CCObject{
   int getInstance()
   int destroyInstance()
   signed int lazyInitThreadSemphore()
   cocos2d::CCDirector * dispatchResponseCallbacks(float)
   int send(cocos2d::extension::CCHttpRequest*)
   cocos2d::extension::CCHttpClient * CCHttpClient()
   cocos2d::CCObject * ~CCHttpClient()
   virtual cocos2d::CCObject * ~CCHttpClient()
}
class cocos2d::extension::WebSocket{
   int getReadyState()
   signed int onSubThreadLoop()
   int onSocketCallback(lws*, lws_callback_reasons, void*, void*, unsigned int)
    onSubThreadEnded()
   _DWORD * onSubThreadStarted()
   int onUIThreadReceiveMessage(cocos2d::extension::WsMessage*)
   _BOOL4 init(cocos2d::extension::WebSocket::Delegate const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const*)
   int send(unsigned char const*, unsigned int)
   int send(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   int close()
   int WebSocket()
   cocos2d::extension::WebSocket * ~WebSocket()
   virtual cocos2d::extension::WebSocket * ~WebSocket()
   virtual _DWORD * onSubThreadStarted(void)
   virtual signed int onSubThreadLoop(void)
   virtual  onSubThreadEnded(void)
   virtual int onUIThreadReceiveMessage(cocos2d::extension::WsMessage *)
}
class cocos2d::extension::WsThreadHelper : cocos2d::CCObject{
   _BOOL4 createThread(cocos2d::extension::WebSocket const&)
   int joinSubThread()
   int quitSubThread()
   int wsThreadEntryFunc(void*)
   int sendMessageToUIThread(cocos2d::extension::WsMessage*)
   int sendMessageToSubThread(cocos2d::extension::WsMessage*)
   void update(float)
   cocos2d::extension::WsThreadHelper * WsThreadHelper()
   cocos2d::extension::WsThreadHelper * ~WsThreadHelper()
   virtual cocos2d::extension::WsThreadHelper * ~WsThreadHelper()
   virtual void update(float)
}
class cocos2d::CCBool : cocos2d::CCObject{
   int acceptVisitor(cocos2d::CCDataVisitor&)
   cocos2d::CCObject * create(bool)
   cocos2d::CCBool * ~CCBool()
   virtual cocos2d::CCBool * ~CCBool()
   virtual int acceptVisitor(cocos2d::CCDataVisitor &)
}
class cocos2d::CCConfiguration : cocos2d::CCObject{
   _DWORD * gatherGPUInfo()
   cocos2d::CCDirector * loadConfigFile(char const*)
   int purgeConfiguration()
   int sharedConfiguration()
    s_gSharedConfiguration
   signed int init()
   _DWORD * setObject(char const*, cocos2d::CCObject*)
   cocos2d::CCConfiguration * CCConfiguration()
   cocos2d::CCObject * ~CCConfiguration()
   const char * getCString(char const*, char const*) const
   int supportsNPOT() const
   int supportsPVRTC() const
   int supportsBGRA8888() const
   int getMaxTextureSize() const
   int getMaxTextureUnits() const
   const char * checkForGLExtension(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
   int supportsShareableVAO() const
   int getMaxModelviewStackDepth() const
   int supportsDiscardFramebuffer() const
   int getBool(char const*, bool) const
   __int64 dumpInfo() const
   int getNumber(char const*, double) const
   int getObject(char const*) const
   virtual cocos2d::CCObject * ~CCConfiguration()
}
class cocos2d::CCTimer : cocos2d::CCObject{
   int setInterval(float)
   int initWithTarget(cocos2d::CCObject*, void (cocos2d::CCObject::*)(float))
   int initWithTarget(cocos2d::CCObject*, void (cocos2d::CCObject::*)(float), float, unsigned int, float)
   cocos2d::CCTimer * timerWithTarget(cocos2d::CCObject*, void (cocos2d::CCObject::*)(float))
   cocos2d::CCTimer * timerWithTarget(cocos2d::CCObject*, void (cocos2d::CCObject::*)(float), float)
   signed int initWithScriptHandler(int, float)
   cocos2d::CCTimer * timerWithScriptHandler(int, float)
   int update(float)
   cocos2d::CCTimer * CCTimer()
   cocos2d::CCTimer * ~CCTimer()
   int getInterval() const
   cocos2d::CCTimer * getSelector() const
   virtual cocos2d::CCTimer * ~CCTimer()
   virtual int update(float)
}
class cocos2d::CCScheduler : cocos2d::CCObject{
   void priorityIn(cocos2d::_listEntry**, cocos2d::CCObject*, int, bool)
   int pauseTarget(cocos2d::CCObject*)
   int resumeTarget(cocos2d::CCObject*)
   int resumeTargets(cocos2d::CCSet*)
   int unscheduleAll()
   int isTargetPaused(cocos2d::CCObject*)
   cocos2d::CCSet * pauseAllTargets()
   int scheduleSelector(void (cocos2d::CCObject::*)(float), cocos2d::CCObject*, float, bool)
   int scheduleSelector(void (cocos2d::CCObject::*)(float), cocos2d::CCObject*, float, unsigned int, float, bool)
   int removeHashElement(cocos2d::_hashSelectorEntry*)
   int scheduleScriptFunc(unsigned int, float, bool)
   char * unscheduleSelector(void (cocos2d::CCObject::*)(float), cocos2d::CCObject*)
   int removeUpdateFromHash(cocos2d::_listEntry*)
   int unscheduleScriptEntry(unsigned int)
   int unscheduleAllForTarget(cocos2d::CCObject*)
   __int64 scheduleUpdateForTarget(cocos2d::CCObject*, int, bool)
   int unscheduleUpdateForTarget(cocos2d::CCObject const*)
   cocos2d::CCArray * unscheduleAllWithMinPriority(int)
   cocos2d::CCSet * pauseAllTargetsWithMinPriority(int)
   int * update(float)
   void appendIn(cocos2d::_listEntry**, cocos2d::CCObject*, bool)
   cocos2d::CCScheduler * CCScheduler()
   cocos2d::CCScheduler * ~CCScheduler()
   virtual cocos2d::CCScheduler * ~CCScheduler()
   virtual int * update(float)
}
class cocos2d::CCCamera : cocos2d::CCObject{
   int description()
   int getCenterXYZ(float*, float*, float*)
   int setCenterXYZ(float, float, float)
   _DWORD init()
   void locate()
   signed int getZEye()
   _DWORD * restore()
   int getUpXYZ(float*, float*, float*)
   int setUpXYZ(float, float, float)
   int getEyeXYZ(float*, float*, float*)
   int setEyeXYZ(float, float, float)
   cocos2d::CCCamera * CCCamera()
   cocos2d::CCCamera * ~CCCamera()
   virtual cocos2d::CCCamera * ~CCCamera()
}
class cocos2d::CCAction : cocos2d::CCObject{
   int description()
   cocos2d::CCAction * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
    step(float)
   int stop()
   cocos2d::CCAction * create()
   signed int isDone()
   int setTag(int)
    update(float)
   cocos2d::CCAction * CCAction()
   cocos2d::CCAction * ~CCAction()
   virtual cocos2d::CCAction * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCAction * ~CCAction()
   virtual  update(float)
   virtual int setTag(int)
   virtual signed int isDone(void)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual int stop(void)
   virtual  step(float)
}
class cocos2d::CCFiniteTimeAction : cocos2d::CCAction{
   int reverse()
   cocos2d::CCFiniteTimeAction * ~CCFiniteTimeAction()
   virtual cocos2d::CCFiniteTimeAction * ~CCFiniteTimeAction()
   virtual int reverse(void)
}
class cocos2d::CCSpeed : cocos2d::CCAction{
   cocos2d::CCAction * copyWithZone(cocos2d::CCZone*)
   signed int initWithAction(cocos2d::CCActionInterval*, float)
   cocos2d::CCActionInterval * setInnerAction(cocos2d::CCActionInterval*)
   int startWithTarget(cocos2d::CCNode*)
   int step(float)
   int stop()
   cocos2d::CCAction * create(cocos2d::CCActionInterval*, float)
   int isDone()
   cocos2d::CCAction * reverse()
   cocos2d::CCAction * ~CCSpeed()
   virtual cocos2d::CCAction * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCAction * ~CCSpeed()
   virtual int isDone(void)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual int stop(void)
   virtual int step(float)
   virtual cocos2d::CCAction * reverse(void)
}
class cocos2d::CCFollow : cocos2d::CCAction{
   cocos2d::CCAction * copyWithZone(cocos2d::CCZone*)
   signed int initWithTarget(cocos2d::CCNode*, cocos2d::CCRect const&)
   int step(float)
   int stop()
   cocos2d::CCAction * create(cocos2d::CCNode*, cocos2d::CCRect const&)
   int isDone()
   cocos2d::CCAction * ~CCFollow()
   virtual cocos2d::CCAction * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCAction * ~CCFollow()
   virtual int isDone(void)
   virtual int stop(void)
   virtual int step(float)
}
class cocos2d::CCActionCamera : cocos2d::CCActionInterval{
   int startWithTarget(cocos2d::CCNode*)
    reverse()
   cocos2d::CCActionCamera * ~CCActionCamera()
   virtual cocos2d::CCActionCamera * ~CCActionCamera()
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual  reverse(void)
}
class cocos2d::CCOrbitCamera : cocos2d::CCActionCamera{
   cocos2d::CCOrbitCamera * copyWithZone(cocos2d::CCZone*)
   signed int sphericalRadius(float*, float*, float*)
   cocos2d::CCOrbitCamera * startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, float, float, float, float, float, float)
   cocos2d::CCOrbitCamera * create(float, float, float, float, float, float, float)
   int update(float)
   cocos2d::CCOrbitCamera * CCOrbitCamera()
   cocos2d::CCOrbitCamera * ~CCOrbitCamera()
   virtual cocos2d::CCOrbitCamera * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCOrbitCamera * ~CCOrbitCamera()
   virtual int update(float)
   virtual cocos2d::CCOrbitCamera * startWithTarget(cocos2d::CCNode *)
}
class cocos2d::CCCatmullRomTo : cocos2d::CCCardinalSplineTo{
   signed int initWithDuration(float, cocos2d::CCPointArray*)
   void * create(float, cocos2d::CCPointArray*)
   cocos2d::CCCatmullRomTo * ~CCCatmullRomTo()
   virtual cocos2d::CCCatmullRomTo * ~CCCatmullRomTo()
}
class cocos2d::CCCatmullRomBy : cocos2d::CCCardinalSplineBy{
   signed int initWithDuration(float, cocos2d::CCPointArray*)
   void * create(float, cocos2d::CCPointArray*)
   cocos2d::CCCatmullRomBy * ~CCCatmullRomBy()
   virtual cocos2d::CCCatmullRomBy * ~CCCatmullRomBy()
}
class cocos2d::CCPointArray : cocos2d::CCObject{
   cocos2d::CCPointArray * copyWithZone(cocos2d::CCZone*)
   int reverseInline()
   void addControlPoint(cocos2d::CCPoint)
   int getControlPoints()
   signed int initWithCapacity(unsigned int)
   void setControlPoints(std::vector<cocos2d::CCPoint*, std::allocator<cocos2d::CCPoint*> >*)
   int insertControlPoint(cocos2d::CCPoint&, unsigned int)
   int * replaceControlPoint(cocos2d::CCPoint&, unsigned int)
   cocos2d::CCPointArray * getControlPointAtIndex(unsigned int)
   void removeControlPointAtIndex(unsigned int)
   int count()
   cocos2d::CCPointArray * create(unsigned int)
   int reverse()
   cocos2d::CCPointArray * CCPointArray()
   cocos2d::CCPointArray * ~CCPointArray()
   virtual cocos2d::CCPointArray * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCPointArray * ~CCPointArray()
}
class cocos2d::CCCardinalSplineTo : cocos2d::CCActionInterval{
   cocos2d::CCCardinalSplineTo * copyWithZone(cocos2d::CCZone*)
   int updatePosition(cocos2d::CCPoint&)
   int startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, cocos2d::CCPointArray*, float)
   cocos2d::CCCardinalSplineTo * create(float, cocos2d::CCPointArray*, float)
   int update(float)
   cocos2d::CCCardinalSplineTo * reverse()
   cocos2d::CCCardinalSplineTo * CCCardinalSplineTo()
   cocos2d::CCCardinalSplineTo * ~CCCardinalSplineTo()
   virtual cocos2d::CCCardinalSplineTo * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCCardinalSplineTo * ~CCCardinalSplineTo()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual cocos2d::CCCardinalSplineTo * reverse(void)
   virtual int updatePosition(cocos2d::CCPoint &)
}
class cocos2d::CCCardinalSplineBy : cocos2d::CCCardinalSplineTo{
   int updatePosition(cocos2d::CCPoint&)
   int startWithTarget(cocos2d::CCNode*)
   cocos2d::CCCardinalSplineBy * create(float, cocos2d::CCPointArray*, float)
   cocos2d::CCCardinalSplineBy * reverse()
   cocos2d::CCCardinalSplineBy * CCCardinalSplineBy()
   cocos2d::CCCardinalSplineBy * ~CCCardinalSplineBy()
   virtual cocos2d::CCCardinalSplineBy * ~CCCardinalSplineBy()
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual cocos2d::CCCardinalSplineBy * reverse(void)
   virtual int updatePosition(cocos2d::CCPoint &)
}
class cocos2d::CCActionEase : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   int getInnerAction()
   signed int initWithAction(cocos2d::CCActionInterval*)
   int startWithTarget(cocos2d::CCNode*)
   int stop()
   void * create(cocos2d::CCActionInterval*)
   int update(float)
   void * reverse()
   cocos2d::CCActionEase * CCActionEase()
   cocos2d::CCActionEase * ~CCActionEase()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCActionEase * ~CCActionEase()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual int stop(void)
   virtual void * reverse(void)
   virtual int getInnerAction(void)
}
class cocos2d::CCEaseRateAction : cocos2d::CCActionEase{
   void * copyWithZone(cocos2d::CCZone*)
   signed int initWithAction(cocos2d::CCActionInterval*, float)
   void * create(cocos2d::CCActionInterval*, float)
   void * reverse()
   cocos2d::CCEaseRateAction * ~CCEaseRateAction()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseRateAction * ~CCEaseRateAction()
   virtual void * reverse(void)
}
class cocos2d::CCEaseIn : cocos2d::CCEaseRateAction{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*, float)
   int update(float)
   void * reverse()
   cocos2d::CCEaseIn * ~CCEaseIn()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseIn * ~CCEaseIn()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCEaseOut : cocos2d::CCEaseRateAction{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*, float)
   int update(float)
   void * reverse()
   cocos2d::CCEaseOut * ~CCEaseOut()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseOut * ~CCEaseOut()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCEaseInOut : cocos2d::CCEaseRateAction{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*, float)
   int update(float)
   void * reverse()
   cocos2d::CCEaseInOut * ~CCEaseInOut()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseInOut * ~CCEaseInOut()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCEaseExponentialIn : cocos2d::CCActionEase{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*)
   int update(float)
   void * reverse()
   cocos2d::CCEaseExponentialIn * ~CCEaseExponentialIn()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseExponentialIn * ~CCEaseExponentialIn()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCEaseExponentialOut : cocos2d::CCActionEase{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*)
   int update(float)
   void * reverse()
   cocos2d::CCEaseExponentialOut * ~CCEaseExponentialOut()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseExponentialOut * ~CCEaseExponentialOut()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCEaseExponentialInOut : cocos2d::CCActionEase{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*)
   int update(float)
   void * reverse()
   cocos2d::CCEaseExponentialInOut * ~CCEaseExponentialInOut()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseExponentialInOut * ~CCEaseExponentialInOut()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCEaseSineIn : cocos2d::CCActionEase{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*)
   int update(float)
   void * reverse()
   cocos2d::CCEaseSineIn * ~CCEaseSineIn()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseSineIn * ~CCEaseSineIn()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCEaseSineOut : cocos2d::CCActionEase{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*)
   int update(float)
   void * reverse()
   cocos2d::CCEaseSineOut * ~CCEaseSineOut()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseSineOut * ~CCEaseSineOut()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCEaseSineInOut : cocos2d::CCActionEase{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*)
   int update(float)
   void * reverse()
   cocos2d::CCEaseSineInOut * ~CCEaseSineInOut()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseSineInOut * ~CCEaseSineInOut()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCEaseElastic : cocos2d::CCActionEase{
   void * copyWithZone(cocos2d::CCZone*)
   signed int initWithAction(cocos2d::CCActionInterval*, float)
   void * create(cocos2d::CCActionInterval*)
   void * create(cocos2d::CCActionInterval*, float)
   int reverse()
   cocos2d::CCEaseElastic * ~CCEaseElastic()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseElastic * ~CCEaseElastic()
   virtual int reverse(void)
}
class cocos2d::CCEaseElasticIn : cocos2d::CCEaseElastic{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*)
   void * create(cocos2d::CCActionInterval*, float)
   int update(float)
   void * reverse()
   cocos2d::CCEaseElasticIn * ~CCEaseElasticIn()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseElasticIn * ~CCEaseElasticIn()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCEaseElasticOut : cocos2d::CCEaseElastic{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*)
   void * create(cocos2d::CCActionInterval*, float)
   int update(float)
   void * reverse()
   cocos2d::CCEaseElasticOut * ~CCEaseElasticOut()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseElasticOut * ~CCEaseElasticOut()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCEaseElasticInOut : cocos2d::CCEaseElastic{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*)
   void * create(cocos2d::CCActionInterval*, float)
   int update(float)
   void * reverse()
   cocos2d::CCEaseElasticInOut * ~CCEaseElasticInOut()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseElasticInOut * ~CCEaseElasticInOut()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCEaseBounce : cocos2d::CCActionEase{
   int bounceTime(float)
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*)
   void * reverse()
   cocos2d::CCEaseBounce * ~CCEaseBounce()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseBounce * ~CCEaseBounce()
   virtual void * reverse(void)
}
class cocos2d::CCEaseBounceIn : cocos2d::CCEaseBounce{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*)
   int update(float)
   void * reverse()
   cocos2d::CCEaseBounceIn * ~CCEaseBounceIn()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseBounceIn * ~CCEaseBounceIn()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCEaseBounceOut : cocos2d::CCEaseBounce{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*)
   int update(float)
   void * reverse()
   cocos2d::CCEaseBounceOut * ~CCEaseBounceOut()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseBounceOut * ~CCEaseBounceOut()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCEaseBounceInOut : cocos2d::CCEaseBounce{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*)
   int update(float)
   void * reverse()
   cocos2d::CCEaseBounceInOut * ~CCEaseBounceInOut()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseBounceInOut * ~CCEaseBounceInOut()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCEaseBackIn : cocos2d::CCActionEase{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*)
   int update(float)
   void * reverse()
   cocos2d::CCEaseBackIn * ~CCEaseBackIn()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseBackIn * ~CCEaseBackIn()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCEaseBackOut : cocos2d::CCActionEase{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*)
   int update(float)
   void * reverse()
   cocos2d::CCEaseBackOut * ~CCEaseBackOut()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseBackOut * ~CCEaseBackOut()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCEaseBackInOut : cocos2d::CCActionEase{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(cocos2d::CCActionInterval*)
   int update(float)
   void * reverse()
   cocos2d::CCEaseBackInOut * ~CCEaseBackInOut()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCEaseBackInOut * ~CCEaseBackInOut()
   virtual int update(float)
   virtual void * reverse(void)
}
class cocos2d::CCGridAction : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   void startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, cocos2d::CCSize const&)
   void * create(float, cocos2d::CCSize const&)
   int getGrid()
    reverse()
   cocos2d::CCGridAction * CCGridAction()
   cocos2d::CCGridAction * ~CCGridAction()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCGridAction * ~CCGridAction()
   virtual void startWithTarget(cocos2d::CCNode *)
   virtual  reverse(void)
   virtual signed int initWithDuration(float,cocos2d::CCSize const&)
   virtual int getGrid(void)
}
class cocos2d::CCGrid3DAction : cocos2d::CCGridAction{
   cocos2d::CCGrid3DAction * originalVertex(cocos2d::CCPoint const&)
   cocos2d::CCGrid3DAction * vertex(cocos2d::CCPoint const&)
   cocos2d::CCGrid3D * getGrid()
   int setVertex(cocos2d::CCPoint const&, cocos2d::_ccVertex3F const&)
   cocos2d::CCGrid3DAction * CCGrid3DAction()
   cocos2d::CCGrid3DAction * ~CCGrid3DAction()
   virtual cocos2d::CCGrid3DAction * ~CCGrid3DAction()
   virtual cocos2d::CCGrid3D * getGrid(void)
}
class cocos2d::CCTiledGrid3DAction : cocos2d::CCGridAction{
   cocos2d::CCTiledGrid3DAction * originalTile(cocos2d::CCPoint const&)
   cocos2d::CCTiledGrid3DAction * tile(cocos2d::CCPoint const&)
   void * create(float, cocos2d::CCSize const&)
   cocos2d::CCTiledGrid3D * getGrid()
   void * setTile(cocos2d::CCPoint const&, cocos2d::_ccQuad3 const&)
   cocos2d::CCTiledGrid3DAction * CCTiledGrid3DAction()
   cocos2d::CCTiledGrid3DAction * ~CCTiledGrid3DAction()
   virtual cocos2d::CCTiledGrid3DAction * ~CCTiledGrid3DAction()
   virtual cocos2d::CCTiledGrid3D * getGrid(void)
}
class cocos2d::CCAccelDeccelAmplitude : cocos2d::CCActionInterval{
   signed int initWithAction(cocos2d::CCAction*, float)
   int startWithTarget(cocos2d::CCNode*)
   void * create(cocos2d::CCAction*, float)
   int update(float)
   void * reverse()
   cocos2d::CCAccelDeccelAmplitude * ~CCAccelDeccelAmplitude()
   virtual cocos2d::CCAccelDeccelAmplitude * ~CCAccelDeccelAmplitude()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual void * reverse(void)
}
class cocos2d::CCAccelAmplitude : cocos2d::CCActionInterval{
   signed int initWithAction(cocos2d::CCAction*, float)
   int startWithTarget(cocos2d::CCNode*)
   void * create(cocos2d::CCAction*, float)
   int update(float)
   void * reverse()
   cocos2d::CCAccelAmplitude * ~CCAccelAmplitude()
   virtual cocos2d::CCAccelAmplitude * ~CCAccelAmplitude()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual void * reverse(void)
}
class cocos2d::CCDeccelAmplitude : cocos2d::CCActionInterval{
   signed int initWithAction(cocos2d::CCAction*, float)
   int startWithTarget(cocos2d::CCNode*)
   void * create(cocos2d::CCAction*, float)
   int update(float)
   void * reverse()
   cocos2d::CCDeccelAmplitude * ~CCDeccelAmplitude()
   virtual cocos2d::CCDeccelAmplitude * ~CCDeccelAmplitude()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual void * reverse(void)
}
class cocos2d::CCStopGrid : cocos2d::CCActionInstant{
   void startWithTarget(cocos2d::CCNode*)
   void * create()
   cocos2d::CCStopGrid * ~CCStopGrid()
   virtual cocos2d::CCStopGrid * ~CCStopGrid()
   virtual void startWithTarget(cocos2d::CCNode *)
}
class cocos2d::CCReuseGrid : cocos2d::CCActionInstant{
   signed int initWithTimes(int)
   int startWithTarget(cocos2d::CCNode*)
   void * create(int)
   cocos2d::CCReuseGrid * ~CCReuseGrid()
   virtual cocos2d::CCReuseGrid * ~CCReuseGrid()
   virtual int startWithTarget(cocos2d::CCNode *)
}
class cocos2d::CCWaves3D : cocos2d::CCGrid3DAction{
   void * copyWithZone(cocos2d::CCZone*)
   signed int initWithDuration(float, cocos2d::CCSize const&, unsigned int, float)
   void * create(float, cocos2d::CCSize const&, unsigned int, float)
   int update(float)
   cocos2d::CCWaves3D * ~CCWaves3D()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCWaves3D * ~CCWaves3D()
   virtual int update(float)
}
class cocos2d::CCFlipX3D : cocos2d::CCGrid3DAction{
   void * copyWithZone(cocos2d::CCZone*)
   signed int initWithSize(cocos2d::CCSize const&, float)
   signed int initWithDuration(float)
   void * create(float)
   int update(float)
   cocos2d::CCFlipX3D * ~CCFlipX3D()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCFlipX3D * ~CCFlipX3D()
   virtual int update(float)
   virtual signed int initWithDuration(float)
   virtual signed int initWithSize(cocos2d::CCSize const&,float)
}
class cocos2d::CCFlipY3D : cocos2d::CCFlipX3D{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(float)
   int update(float)
   cocos2d::CCFlipY3D * ~CCFlipY3D()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCFlipY3D * ~CCFlipY3D()
   virtual int update(float)
}
class cocos2d::CCLens3D : cocos2d::CCGrid3DAction{
   signed int setPosition(cocos2d::CCPoint const&)
   void * copyWithZone(cocos2d::CCZone*)
   signed int initWithDuration(float, cocos2d::CCSize const&, cocos2d::CCPoint const&, float)
   void * create(float, cocos2d::CCSize const&, cocos2d::CCPoint const&, float)
   int update(float)
   cocos2d::CCLens3D * ~CCLens3D()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCLens3D * ~CCLens3D()
   virtual int update(float)
}
class cocos2d::CCRipple3D : cocos2d::CCGrid3DAction{
   int setPosition(cocos2d::CCPoint const&)
   void * copyWithZone(cocos2d::CCZone*)
   signed int initWithDuration(float, cocos2d::CCSize const&, cocos2d::CCPoint const&, float, unsigned int, float)
   void * create(float, cocos2d::CCSize const&, cocos2d::CCPoint const&, float, unsigned int, float)
   int update(float)
   cocos2d::CCRipple3D * ~CCRipple3D()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCRipple3D * ~CCRipple3D()
   virtual int update(float)
}
class cocos2d::CCShaky3D : cocos2d::CCGrid3DAction{
   void * copyWithZone(cocos2d::CCZone*)
   signed int initWithDuration(float, cocos2d::CCSize const&, int, bool)
   void * create(float, cocos2d::CCSize const&, int, bool)
   int update(float)
   cocos2d::CCShaky3D * ~CCShaky3D()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCShaky3D * ~CCShaky3D()
   virtual int update(float)
}
class cocos2d::CCLiquid : cocos2d::CCGrid3DAction{
   void * copyWithZone(cocos2d::CCZone*)
   signed int initWithDuration(float, cocos2d::CCSize const&, unsigned int, float)
   void * create(float, cocos2d::CCSize const&, unsigned int, float)
   int update(float)
   cocos2d::CCLiquid * ~CCLiquid()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCLiquid * ~CCLiquid()
   virtual int update(float)
}
class cocos2d::CCWaves : cocos2d::CCGrid3DAction{
   void * copyWithZone(cocos2d::CCZone*)
   signed int initWithDuration(float, cocos2d::CCSize const&, unsigned int, float, bool, bool)
   void * create(float, cocos2d::CCSize const&, unsigned int, float, bool, bool)
   int update(float)
   cocos2d::CCWaves * ~CCWaves()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCWaves * ~CCWaves()
   virtual int update(float)
}
class cocos2d::CCTwirl : cocos2d::CCGrid3DAction{
   int setPosition(cocos2d::CCPoint const&)
   void * copyWithZone(cocos2d::CCZone*)
   signed int initWithDuration(float, cocos2d::CCSize const&, cocos2d::CCPoint, unsigned int, float)
   void * create(float, cocos2d::CCSize const&, cocos2d::CCPoint, unsigned int, float)
   int update(float)
   cocos2d::CCTwirl * ~CCTwirl()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCTwirl * ~CCTwirl()
   virtual int update(float)
}
class cocos2d::TypeInfo{
}
class cocos2d::CCActionInstant : cocos2d::CCFiniteTimeAction{
   cocos2d::CCActionInstant * copyWithZone(cocos2d::CCZone*)
   int step(float)
   signed int isDone()
    update(float)
   cocos2d::CCObject * reverse()
   cocos2d::CCActionInstant * CCActionInstant()
   cocos2d::CCActionInstant * ~CCActionInstant()
   virtual cocos2d::CCActionInstant * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCActionInstant * ~CCActionInstant()
   virtual  update(float)
   virtual signed int isDone(void)
   virtual int step(float)
   virtual cocos2d::CCObject * reverse(void)
}
class cocos2d::CCShow : cocos2d::CCActionInstant{
   cocos2d::CCActionInstant * copyWithZone(cocos2d::CCZone*)
   cocos2d::CCActionInstant * create()
   int update(float)
    reverse()
   cocos2d::CCShow * ~CCShow()
   virtual cocos2d::CCActionInstant * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCShow * ~CCShow()
   virtual int update(float)
   virtual  reverse(void)
}
class cocos2d::CCHide : cocos2d::CCActionInstant{
   cocos2d::CCActionInstant * copyWithZone(cocos2d::CCZone*)
   cocos2d::CCActionInstant * create()
   int update(float)
    reverse()
   cocos2d::CCHide * ~CCHide()
   virtual cocos2d::CCActionInstant * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCHide * ~CCHide()
   virtual int update(float)
   virtual  reverse(void)
}
class cocos2d::CCToggleVisibility : cocos2d::CCActionInstant{
   cocos2d::CCActionInstant * copyWithZone(cocos2d::CCZone*)
   cocos2d::CCActionInstant * create()
   int update(float)
   cocos2d::CCToggleVisibility * ~CCToggleVisibility()
   virtual cocos2d::CCActionInstant * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCToggleVisibility * ~CCToggleVisibility()
   virtual int update(float)
}
class cocos2d::CCRemoveSelf : cocos2d::CCActionInstant{
   cocos2d::CCActionInstant * copyWithZone(cocos2d::CCZone*)
   signed int init(bool)
   cocos2d::CCActionInstant * create(bool)
   int update(float)
   cocos2d::CCActionInstant * reverse()
   cocos2d::CCRemoveSelf * ~CCRemoveSelf()
   virtual cocos2d::CCActionInstant * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCRemoveSelf * ~CCRemoveSelf()
   virtual int update(float)
   virtual cocos2d::CCActionInstant * reverse(void)
}
class cocos2d::CCFlipX : cocos2d::CCActionInstant{
   cocos2d::CCActionInstant * copyWithZone(cocos2d::CCZone*)
   signed int initWithFlipX(bool)
   cocos2d::CCActionInstant * create(bool)
   int update(float)
   cocos2d::CCActionInstant * reverse()
   cocos2d::CCFlipX * ~CCFlipX()
   virtual cocos2d::CCActionInstant * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCFlipX * ~CCFlipX()
   virtual int update(float)
   virtual cocos2d::CCActionInstant * reverse(void)
}
class cocos2d::CCFlipY : cocos2d::CCActionInstant{
   cocos2d::CCActionInstant * copyWithZone(cocos2d::CCZone*)
   signed int initWithFlipY(bool)
   cocos2d::CCActionInstant * create(bool)
   int update(float)
   cocos2d::CCActionInstant * reverse()
   cocos2d::CCFlipY * ~CCFlipY()
   virtual cocos2d::CCActionInstant * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCFlipY * ~CCFlipY()
   virtual int update(float)
   virtual cocos2d::CCActionInstant * reverse(void)
}
class cocos2d::CCPlace : cocos2d::CCActionInstant{
   cocos2d::CCActionInstant * copyWithZone(cocos2d::CCZone*)
   signed int initWithPosition(cocos2d::CCPoint const&)
   cocos2d::CCActionInstant * create(cocos2d::CCPoint const&)
   int update(float)
   cocos2d::CCPlace * ~CCPlace()
   virtual cocos2d::CCActionInstant * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCPlace * ~CCPlace()
   virtual int update(float)
}
class cocos2d::CCCallFunc : cocos2d::CCActionInstant{
   cocos2d::CCCallFunc * copyWithZone(cocos2d::CCZone*)
   signed int initWithTarget(cocos2d::CCObject*)
   cocos2d::CCCallFunc * create(int)
   cocos2d::CCCallFunc * create(cocos2d::CCObject*, void (cocos2d::CCObject::*)())
   int update(float)
   cocos2d::CCScriptEngineManager * execute()
   cocos2d::CCCallFunc * CCCallFunc()
   cocos2d::CCCallFunc * ~CCCallFunc()
   virtual cocos2d::CCCallFunc * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCCallFunc * ~CCCallFunc()
   virtual int update(float)
   virtual signed int initWithTarget(cocos2d::CCObject *)
   virtual cocos2d::CCScriptEngineManager * execute(void)
}
class cocos2d::CCCallFuncN : cocos2d::CCCallFunc, cocos2d::TypeInfo{
   cocos2d::CCCallFunc * copyWithZone(cocos2d::CCZone*)
   signed int initWithTarget(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCNode*))
   int getClassTypeInfo()
   cocos2d::CCCallFunc * create(int)
   cocos2d::CCCallFunc * create(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCNode*))
   int execute()
   cocos2d::CCCallFuncN * ~CCCallFuncN()
   int getClassTypeInfo()::id
   virtual cocos2d::CCCallFunc * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCCallFuncN * ~CCCallFuncN()
   virtual int execute(void)
   virtual int getClassTypeInfo(void)
   virtual signed int initWithTarget(cocos2d::CCObject *,void (cocos2d::CCObject::*)(cocos2d::CCNode *))
}
class cocos2d::CCCallFuncND : cocos2d::CCCallFuncN{
   void * copyWithZone(cocos2d::CCZone*)
   signed int initWithTarget(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCNode*, void*), void*)
   int getClassTypeInfo()
   void * create(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCNode*, void*), void*)
   int execute()
   cocos2d::CCCallFuncND * ~CCCallFuncND()
   int getClassTypeInfo()::id
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCCallFuncND * ~CCCallFuncND()
   virtual int execute(void)
   virtual int getClassTypeInfo(void)
   virtual signed int initWithTarget(cocos2d::CCObject *,void (cocos2d::CCObject::*)(cocos2d::CCNode *,void *),void *)
}
class cocos2d::CCCallFuncO : cocos2d::CCCallFunc, cocos2d::TypeInfo{
   cocos2d::CCCallFuncO * copyWithZone(cocos2d::CCZone*)
   signed int initWithTarget(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), cocos2d::CCObject*)
   int getClassTypeInfo()
   cocos2d::CCCallFuncO * create(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), cocos2d::CCObject*)
   int execute()
   cocos2d::CCCallFuncO * CCCallFuncO()
   cocos2d::CCCallFunc * ~CCCallFuncO()
   int getClassTypeInfo()::id
   virtual cocos2d::CCCallFuncO * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCCallFunc * ~CCCallFuncO()
   virtual int execute(void)
   virtual int getClassTypeInfo(void)
   virtual signed int initWithTarget(cocos2d::CCObject *,void (cocos2d::CCObject::*)(cocos2d::CCObject *),cocos2d::CCObject *)
}
class cocos2d::CCActionInterval : cocos2d::CCFiniteTimeAction{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   int getAmplitudeRate()
   signed int initWithDuration(float)
   _DWORD setAmplitudeRate(float)
   int step(float)
   void * create(float)
   signed int isDone()
   int reverse()
   cocos2d::CCActionInterval * CCActionInterval()
   cocos2d::CCActionInterval * ~CCActionInterval()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCActionInterval * ~CCActionInterval()
   virtual signed int isDone(void)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual int step(float)
   virtual int reverse(void)
}
class cocos2d::CCSequence : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   signed int initWithTwoActions(cocos2d::CCFiniteTimeAction*, cocos2d::CCFiniteTimeAction*)
   void * createWithTwoActions(cocos2d::CCFiniteTimeAction*, cocos2d::CCFiniteTimeAction*)
   void * createWithVariableList(cocos2d::CCFiniteTimeAction*, std::__va_list)
   int stop()
   void * create(cocos2d::CCFiniteTimeAction*, ...)
   void * create(cocos2d::CCArray*)
   int update(float)
   void * reverse()
   cocos2d::CCSequence * ~CCSequence()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCSequence * ~CCSequence()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual int stop(void)
   virtual void * reverse(void)
}
class cocos2d::CCRepeat : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   signed int initWithAction(cocos2d::CCFiniteTimeAction*, unsigned int)
   int startWithTarget(cocos2d::CCNode*)
   int stop()
   void * create(cocos2d::CCFiniteTimeAction*, unsigned int)
   _BOOL4 isDone()
   int update(float)
   void * reverse()
   cocos2d::CCActionInterval * ~CCRepeat()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCActionInterval * ~CCRepeat()
   virtual int update(float)
   virtual _BOOL4 isDone(void)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual int stop(void)
   virtual void * reverse(void)
}
class cocos2d::CCRepeatForever : cocos2d::CCActionInterval{
   cocos2d::CCActionInterval * copyWithZone(cocos2d::CCZone*)
   signed int initWithAction(cocos2d::CCActionInterval*)
   int startWithTarget(cocos2d::CCNode*)
   int step(float)
   cocos2d::CCActionInterval * create(cocos2d::CCActionInterval*)
   int isDone()
   cocos2d::CCActionInterval * reverse()
   cocos2d::CCActionInterval * ~CCRepeatForever()
   virtual cocos2d::CCActionInterval * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCActionInterval * ~CCRepeatForever()
   virtual int isDone(void)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual int step(float)
   virtual cocos2d::CCActionInterval * reverse(void)
}
class cocos2d::CCSpawn : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   signed int initWithTwoActions(cocos2d::CCFiniteTimeAction*, cocos2d::CCFiniteTimeAction*)
   void * createWithTwoActions(cocos2d::CCFiniteTimeAction*, cocos2d::CCFiniteTimeAction*)
   void * createWithVariableList(cocos2d::CCFiniteTimeAction*, std::__va_list)
   int stop()
   void * create(cocos2d::CCFiniteTimeAction*, ...)
   void * create(cocos2d::CCArray*)
   int update(float)
   void * reverse()
   cocos2d::CCSpawn * ~CCSpawn()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCSpawn * ~CCSpawn()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual int stop(void)
   virtual void * reverse(void)
}
class cocos2d::CCRotateTo : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   float startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, float)
   signed int initWithDuration(float, float, float)
   void * create(float, float)
   void * create(float, float, float)
   int * update(float)
   cocos2d::CCRotateTo * ~CCRotateTo()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCRotateTo * ~CCRotateTo()
   virtual int * update(float)
   virtual float startWithTarget(cocos2d::CCNode *)
   virtual signed int initWithDuration(float,float,float)
}
class cocos2d::CCRotateBy : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, float)
   signed int initWithDuration(float, float, float)
   void * create(float, float)
   void * create(float, float, float)
   int * update(float)
   void * reverse()
   cocos2d::CCRotateBy * ~CCRotateBy()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCRotateBy * ~CCRotateBy()
   virtual int * update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual void * reverse(void)
}
class cocos2d::CCMoveBy : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, cocos2d::CCPoint const&)
   void * create(float, cocos2d::CCPoint const&)
   int update(float)
   void * reverse()
   cocos2d::CCMoveBy * CCMoveBy()
   cocos2d::CCMoveBy * ~CCMoveBy()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCMoveBy * ~CCMoveBy()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual void * reverse(void)
}
class cocos2d::CCMoveTo : cocos2d::CCMoveBy{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, cocos2d::CCPoint const&)
   void * create(float, cocos2d::CCPoint const&)
   cocos2d::CCMoveTo * ~CCMoveTo()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCMoveTo * ~CCMoveTo()
   virtual int startWithTarget(cocos2d::CCNode *)
}
class cocos2d::CCSkewTo : cocos2d::CCActionInterval{
   cocos2d::CCSkewTo * copyWithZone(cocos2d::CCZone*)
   float startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, float, float)
   cocos2d::CCSkewTo * create(float, float, float)
   int update(float)
   cocos2d::CCSkewTo * CCSkewTo()
   cocos2d::CCSkewTo * ~CCSkewTo()
   virtual cocos2d::CCSkewTo * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCSkewTo * ~CCSkewTo()
   virtual int update(float)
   virtual float startWithTarget(cocos2d::CCNode *)
   virtual signed int initWithDuration(float,float,float)
}
class cocos2d::CCSkewBy : cocos2d::CCSkewTo{
   float startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, float, float)
   void * create(float, float, float)
   void * reverse()
   cocos2d::CCSkewBy * ~CCSkewBy()
   virtual cocos2d::CCSkewBy * ~CCSkewBy()
   virtual float startWithTarget(cocos2d::CCNode *)
   virtual void * reverse(void)
   virtual signed int initWithDuration(float,float,float)
}
class cocos2d::CCJumpBy : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, cocos2d::CCPoint const&, float, unsigned int)
   void * create(float, cocos2d::CCPoint const&, float, unsigned int)
   int update(float)
   void * reverse()
   cocos2d::CCJumpBy * CCJumpBy()
   cocos2d::CCJumpBy * ~CCJumpBy()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCJumpBy * ~CCJumpBy()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual void * reverse(void)
}
class cocos2d::CCJumpTo : cocos2d::CCJumpBy{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   void * create(float, cocos2d::CCPoint const&, float, int)
   cocos2d::CCJumpTo * ~CCJumpTo()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCJumpTo * ~CCJumpTo()
   virtual int startWithTarget(cocos2d::CCNode *)
}
class cocos2d::CCBezierBy : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, cocos2d::_ccBezierConfig const&)
   void * create(float, cocos2d::_ccBezierConfig const&)
   int update(float)
   void * reverse()
   cocos2d::CCBezierBy * CCBezierBy()
   cocos2d::CCBezierBy * ~CCBezierBy()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCBezierBy * ~CCBezierBy()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual void * reverse(void)
}
class cocos2d::CCBezierTo : cocos2d::CCBezierBy{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   int initWithDuration(float, cocos2d::_ccBezierConfig const&)
   void * create(float, cocos2d::_ccBezierConfig const&)
   cocos2d::CCBezierTo * ~CCBezierTo()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCBezierTo * ~CCBezierTo()
   virtual int startWithTarget(cocos2d::CCNode *)
}
class cocos2d::CCScaleTo : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, float)
   signed int initWithDuration(float, float, float)
   void * create(float, float)
   void * create(float, float, float)
   int update(float)
   cocos2d::CCScaleTo * ~CCScaleTo()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCScaleTo * ~CCScaleTo()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
}
class cocos2d::CCScaleBy : cocos2d::CCScaleTo{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   void * create(float, float)
   void * create(float, float, float)
   void * reverse()
   cocos2d::CCScaleBy * ~CCScaleBy()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCScaleBy * ~CCScaleBy()
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual void * reverse(void)
}
class cocos2d::CCBlink : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, unsigned int)
   int stop()
   void * create(float, unsigned int)
   int update(float)
   void * reverse()
   cocos2d::CCBlink * ~CCBlink()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCBlink * ~CCBlink()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual int stop(void)
   virtual void * reverse(void)
}
class cocos2d::CCFadeIn : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(float)
   _DWORD * update(float)
   void * reverse()
   cocos2d::CCFadeIn * ~CCFadeIn()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCFadeIn * ~CCFadeIn()
   virtual _DWORD * update(float)
   virtual void * reverse(void)
}
class cocos2d::CCFadeOut : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(float)
   _DWORD * update(float)
   void * reverse()
   cocos2d::CCFadeOut * ~CCFadeOut()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCFadeOut * ~CCFadeOut()
   virtual _DWORD * update(float)
   virtual void * reverse(void)
}
class cocos2d::CCFadeTo : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, unsigned char)
   void * create(float, unsigned char)
   _DWORD * update(float)
   cocos2d::CCFadeTo * ~CCFadeTo()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCFadeTo * ~CCFadeTo()
   virtual _DWORD * update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
}
class cocos2d::CCTintTo : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   _DWORD * startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, unsigned char, unsigned char, unsigned char)
   void * create(float, unsigned char, unsigned char, unsigned char)
   int update(float)
   cocos2d::CCTintTo * ~CCTintTo()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCTintTo * ~CCTintTo()
   virtual int update(float)
   virtual _DWORD * startWithTarget(cocos2d::CCNode *)
}
class cocos2d::CCTintBy : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, short, short, short)
   void * create(float, short, short, short)
   int update(float)
   void * reverse()
   cocos2d::CCTintBy * ~CCTintBy()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCTintBy * ~CCTintBy()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual void * reverse(void)
}
class cocos2d::CCDelayTime : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   void * create(float)
    update(float)
   void * reverse()
   cocos2d::CCDelayTime * ~CCDelayTime()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCDelayTime * ~CCDelayTime()
   virtual  update(float)
   virtual void * reverse(void)
}
class cocos2d::CCReverseTime : cocos2d::CCActionInterval{
   cocos2d::CCReverseTime * copyWithZone(cocos2d::CCZone*)
   signed int initWithAction(cocos2d::CCFiniteTimeAction*)
   int startWithTarget(cocos2d::CCNode*)
   int stop()
   cocos2d::CCReverseTime * create(cocos2d::CCFiniteTimeAction*)
   int update(float)
   cocos2d::CCObject * reverse()
   cocos2d::CCReverseTime * CCReverseTime()
   cocos2d::CCActionInterval * ~CCReverseTime()
   virtual cocos2d::CCReverseTime * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCActionInterval * ~CCReverseTime()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual int stop(void)
   virtual cocos2d::CCObject * reverse(void)
}
class cocos2d::CCAnimate : cocos2d::CCActionInterval{
   cocos2d::CCAnimate * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   signed int initWithAnimation(cocos2d::CCAnimation*)
   int stop()
   cocos2d::CCAnimate * create(cocos2d::CCAnimation*)
   unsigned int update(float)
   cocos2d::CCAnimate * reverse()
   cocos2d::CCAnimate * CCAnimate()
   cocos2d::CCAnimate * ~CCAnimate()
   virtual cocos2d::CCAnimate * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCAnimate * ~CCAnimate()
   virtual unsigned int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual int stop(void)
   virtual cocos2d::CCAnimate * reverse(void)
}
class cocos2d::CCTargetedAction : cocos2d::CCActionInterval{
   cocos2d::CCTargetedAction * copyWithZone(cocos2d::CCZone*)
   signed int initWithTarget(cocos2d::CCNode*, cocos2d::CCFiniteTimeAction*)
   int startWithTarget(cocos2d::CCNode*)
   int stop()
   cocos2d::CCTargetedAction * create(cocos2d::CCNode*, cocos2d::CCFiniteTimeAction*)
   int update(float)
   cocos2d::CCTargetedAction * CCTargetedAction()
   cocos2d::CCTargetedAction * ~CCTargetedAction()
   virtual cocos2d::CCTargetedAction * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCTargetedAction * ~CCTargetedAction()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual int stop(void)
}
class cocos2d::ExtraAction : cocos2d::CCFiniteTimeAction{
   void * copyWithZone(cocos2d::CCZone*)
    step(float)
   void * create()
    update(float)
    reverse()
   cocos2d::ExtraAction * ~ExtraAction()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::ExtraAction * ~ExtraAction()
   virtual  update(float)
   virtual  step(float)
   virtual  reverse(void)
}
class cocos2d::CCActionManager : cocos2d::CCObject{
   int pauseTarget(cocos2d::CCObject*)
   void removeAction(cocos2d::CCAction*)
   int resumeTarget(cocos2d::CCObject*)
   int resumeTargets(cocos2d::CCSet*)
   int getActionByTag(unsigned int, cocos2d::CCObject*)
   void removeAllActions()
   void deleteHashElement(cocos2d::_hashElement*)
   int removeActionByTag(unsigned int, cocos2d::CCObject*)
   void removeActionAtIndex(unsigned int, cocos2d::_hashElement*)
   cocos2d::CCSet * pauseAllRunningActions()
   _DWORD * actionAllocWithHashElement(cocos2d::_hashElement*)
   void removeAllActionsFromTarget(cocos2d::CCObject*)
   int numberOfRunningActionsInTarget(cocos2d::CCObject*)
   void update(float)
   int addAction(cocos2d::CCAction*, cocos2d::CCNode*, bool)
   cocos2d::CCActionManager * CCActionManager()
   cocos2d::CCObject * ~CCActionManager()
   virtual cocos2d::CCObject * ~CCActionManager()
   virtual void update(float)
}
class cocos2d::CCPageTurn3D : cocos2d::CCGrid3DAction{
   void * create(float, cocos2d::CCSize const&)
   float update(float)
   cocos2d::CCPageTurn3D * ~CCPageTurn3D()
   virtual cocos2d::CCPageTurn3D * ~CCPageTurn3D()
   virtual float update(float)
}
class cocos2d::CCProgressTo : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, float)
   void * create(float, float)
   int update(float)
   cocos2d::CCProgressTo * ~CCProgressTo()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCProgressTo * ~CCProgressTo()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
}
class cocos2d::CCProgressFromTo : cocos2d::CCActionInterval{
   void * copyWithZone(cocos2d::CCZone*)
    startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, float, float)
   void * create(float, float, float)
   int update(float)
   void * reverse()
   cocos2d::CCProgressFromTo * ~CCProgressFromTo()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCProgressFromTo * ~CCProgressFromTo()
   virtual int update(float)
   virtual  startWithTarget(cocos2d::CCNode *)
   virtual void * reverse(void)
}
class cocos2d::CCShakyTiles3D : cocos2d::CCTiledGrid3DAction{
   void * copyWithZone(cocos2d::CCZone*)
   signed int initWithDuration(float, cocos2d::CCSize const&, int, bool)
   void * create(float, cocos2d::CCSize const&, int, bool)
   int update(float)
   cocos2d::CCShakyTiles3D * ~CCShakyTiles3D()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCShakyTiles3D * ~CCShakyTiles3D()
   virtual int update(float)
   virtual signed int initWithDuration(float,cocos2d::CCSize const&,int,bool)
}
class cocos2d::CCShatteredTiles3D : cocos2d::CCTiledGrid3DAction{
   void * copyWithZone(cocos2d::CCZone*)
   signed int initWithDuration(float, cocos2d::CCSize const&, int, bool)
   void * create(float, cocos2d::CCSize const&, int, bool)
   int update(float)
   cocos2d::CCShatteredTiles3D * ~CCShatteredTiles3D()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCShatteredTiles3D * ~CCShatteredTiles3D()
   virtual int update(float)
   virtual signed int initWithDuration(float,cocos2d::CCSize const&,int,bool)
}
class cocos2d::CCShuffleTiles : cocos2d::CCTiledGrid3DAction{
   void * copyWithZone(cocos2d::CCZone*)
   void * startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, cocos2d::CCSize const&, unsigned int)
   void * create(float, cocos2d::CCSize const&, unsigned int)
   int update(float)
   void shuffle(unsigned int*, unsigned int)
   cocos2d::CCShuffleTiles * getDelta(cocos2d::CCSize const&)
   void * placeTile(cocos2d::CCPoint const&, cocos2d::Tile*)
   cocos2d::CCShuffleTiles * ~CCShuffleTiles()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCShuffleTiles * ~CCShuffleTiles()
   virtual int update(float)
   virtual void * startWithTarget(cocos2d::CCNode *)
   virtual signed int initWithDuration(float,cocos2d::CCSize const&,uint)
}
class cocos2d::CCFadeOutTRTiles : cocos2d::CCTiledGrid3DAction{
   void * turnOnTile(cocos2d::CCPoint const&)
   void * turnOffTile(cocos2d::CCPoint const&)
   void * transformTile(cocos2d::CCPoint const&, float)
   void * create(float, cocos2d::CCSize const&)
   int update(float)
   float testFunc(cocos2d::CCSize const&, float)
   cocos2d::CCFadeOutTRTiles * ~CCFadeOutTRTiles()
   virtual cocos2d::CCFadeOutTRTiles * ~CCFadeOutTRTiles()
   virtual int update(float)
   virtual float testFunc(cocos2d::CCSize const&,float)
   virtual void * transformTile(cocos2d::CCPoint const&,float)
}
class cocos2d::CCFadeOutBLTiles : cocos2d::CCFadeOutTRTiles{
   void * create(float, cocos2d::CCSize const&)
   float testFunc(cocos2d::CCSize const&, float)
   cocos2d::CCFadeOutBLTiles * ~CCFadeOutBLTiles()
   virtual cocos2d::CCFadeOutBLTiles * ~CCFadeOutBLTiles()
   virtual float testFunc(cocos2d::CCSize const&,float)
}
class cocos2d::CCFadeOutUpTiles : cocos2d::CCFadeOutTRTiles{
   void * transformTile(cocos2d::CCPoint const&, float)
   void * create(float, cocos2d::CCSize const&)
   float testFunc(cocos2d::CCSize const&, float)
   cocos2d::CCFadeOutUpTiles * ~CCFadeOutUpTiles()
   virtual cocos2d::CCFadeOutUpTiles * ~CCFadeOutUpTiles()
   virtual float testFunc(cocos2d::CCSize const&,float)
   virtual void * transformTile(cocos2d::CCPoint const&,float)
}
class cocos2d::CCFadeOutDownTiles : cocos2d::CCFadeOutUpTiles{
   void * create(float, cocos2d::CCSize const&)
   float testFunc(cocos2d::CCSize const&, float)
   cocos2d::CCFadeOutDownTiles * ~CCFadeOutDownTiles()
   virtual cocos2d::CCFadeOutDownTiles * ~CCFadeOutDownTiles()
   virtual float testFunc(cocos2d::CCSize const&,float)
}
class cocos2d::CCTurnOffTiles : cocos2d::CCTiledGrid3DAction{
   void * turnOnTile(cocos2d::CCPoint const&)
   void * turnOffTile(cocos2d::CCPoint const&)
   void * copyWithZone(cocos2d::CCZone*)
   void startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, cocos2d::CCSize const&, unsigned int)
   void * create(float, cocos2d::CCSize const&)
   void * create(float, cocos2d::CCSize const&, unsigned int)
   int update(float)
   void shuffle(unsigned int*, unsigned int)
   cocos2d::CCTurnOffTiles * ~CCTurnOffTiles()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCTurnOffTiles * ~CCTurnOffTiles()
   virtual int update(float)
   virtual void startWithTarget(cocos2d::CCNode *)
   virtual signed int initWithDuration(float,cocos2d::CCSize const&,uint)
}
class cocos2d::CCWavesTiles3D : cocos2d::CCTiledGrid3DAction{
   void * copyWithZone(cocos2d::CCZone*)
   signed int initWithDuration(float, cocos2d::CCSize const&, unsigned int, float)
   void * create(float, cocos2d::CCSize const&, unsigned int, float)
   int update(float)
   cocos2d::CCWavesTiles3D * ~CCWavesTiles3D()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCWavesTiles3D * ~CCWavesTiles3D()
   virtual int update(float)
   virtual signed int initWithDuration(float,cocos2d::CCSize const&,uint,float)
}
class cocos2d::CCJumpTiles3D : cocos2d::CCTiledGrid3DAction{
   void * copyWithZone(cocos2d::CCZone*)
   signed int initWithDuration(float, cocos2d::CCSize const&, unsigned int, float)
   void * create(float, cocos2d::CCSize const&, unsigned int, float)
   float update(float)
   cocos2d::CCJumpTiles3D * ~CCJumpTiles3D()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCJumpTiles3D * ~CCJumpTiles3D()
   virtual float update(float)
}
class cocos2d::CCSplitRows : cocos2d::CCTiledGrid3DAction{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, unsigned int)
   void * create(float, unsigned int)
   int update(float)
   cocos2d::CCSplitRows * ~CCSplitRows()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCSplitRows * ~CCSplitRows()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual signed int initWithDuration(float,uint)
}
class cocos2d::CCSplitCols : cocos2d::CCTiledGrid3DAction{
   void * copyWithZone(cocos2d::CCZone*)
   int startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, unsigned int)
   void * create(float, unsigned int)
   int update(float)
   cocos2d::CCSplitCols * ~CCSplitCols()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCSplitCols * ~CCSplitCols()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual signed int initWithDuration(float,uint)
}
class cocos2d::CCActionTween : cocos2d::CCActionInterval{
   int startWithTarget(cocos2d::CCNode*)
   signed int initWithDuration(float, char const*, float, float)
   void * create(float, char const*, float, float)
   int update(float)
   void * reverse()
   cocos2d::CCActionTween * ~CCActionTween()
   virtual cocos2d::CCActionTween * ~CCActionTween()
   virtual int update(float)
   virtual int startWithTarget(cocos2d::CCNode *)
   virtual void * reverse(void)
}
class cocos2d::CCBlendProtocol{
}
class cocos2d::CCTextureProtocol : cocos2d::CCBlendProtocol{
}
class cocos2d::CCAtlasNode : cocos2d::CCNodeRGBA, cocos2d::CCTextureProtocol{
   int getTexture()
   int setOpacity(unsigned char)
   int setTexture(cocos2d::CCTexture2D*)
   cocos2d::CCAtlasNode * getBlendFunc()
   int setBlendFunc(cocos2d::_ccBlendFunc)
   int getQuadsToDraw()
   int setQuadsToDraw(unsigned int)
   int getTextureAtlas()
   signed int initWithTexture(cocos2d::CCTexture2D*, unsigned int, unsigned int, unsigned int)
   int setTextureAtlas(cocos2d::CCTextureAtlas*)
   int updateBlendFunc()
   signed int initWithTileFile(char const*, unsigned int, unsigned int, unsigned int)
   int calculateMaxItems()
    updateAtlasValues()
   int isOpacityModifyRGB()
   int setOpacityModifyRGB(bool)
   int updateOpacityModifyRGB()
   int setIgnoreContentScaleFactor(bool)
   void draw()
   cocos2d::CCAtlasNode * create(char const*, unsigned int, unsigned int, unsigned int)
   char * getColor()
   void * setColor(cocos2d::_ccColor3B const&)
   cocos2d::CCAtlasNode * CCAtlasNode()
   cocos2d::CCNodeRGBA * ~CCAtlasNode()
   virtual cocos2d::CCNodeRGBA * ~CCAtlasNode()
   virtual void draw(void)
   virtual int setOpacity(uchar)
   virtual char * getColor(void)
   virtual void * setColor(cocos2d::_ccColor3B const&)
   virtual int setOpacityModifyRGB(bool)
   virtual int isOpacityModifyRGB(void)
   virtual int getTextureAtlas(void)
   virtual int setTextureAtlas(cocos2d::CCTextureAtlas *)
   virtual cocos2d::CCAtlasNode * getBlendFunc(void)
   virtual int setBlendFunc(cocos2d::_ccBlendFunc)
   virtual int getQuadsToDraw(void)
   virtual int setQuadsToDraw(uint)
   virtual  updateAtlasValues(void)
   virtual int getTexture(void)
   virtual int setTexture(cocos2d::CCTexture2D *)
}
class cocos2d::CCNode : cocos2d::CCObject{
   int getVertexZ()
   int setVertexZ(float)
   int setVisible(bool)
   int _setZOrder(int)
   void stopAction(cocos2d::CCAction*)
   cocos2d::CCScriptEngineManager * unschedule(void (cocos2d::CCObject::*)(float))
   cocos2d::CCNode * boundingBox()
   int description()
   int * detachChild(cocos2d::CCNode*, bool)
   int getChildren()
   char * getPosition(float*, float*)
   char * getPosition()
   int getRotation()
   int getUserData()
   int insertChild(cocos2d::CCNode*, int)
   int removeChild(cocos2d::CCNode*)
   int removeChild(cocos2d::CCNode*, bool)
   int setPosition(float, float)
   int setPosition(cocos2d::CCPoint const&)
   int setRotation(float)
   int setUserData(void*)
   int addComponent(cocos2d::CCComponent*)
   int getPositionX()
   int getPositionY()
   int getRotationX()
   int getRotationY()
   int getScheduler()
   int reorderChild(cocos2d::CCNode*, int)
   __int64 scheduleOnce(void (cocos2d::CCObject::*)(float), float)
   int setPositionX(float)
   int setPositionY(float)
   int setRotationX(float)
   int setRotationY(float)
   int setScheduler(cocos2d::CCScheduler*)
   int childrenAlloc()
   int getChildByTag(int)
   int getUserObject()
   int setUserObject(cocos2d::CCObject*)
   int getActionByTag(int)
   char * getAnchorPoint()
   __int64 scheduleUpdate()
   signed int setAnchorPoint(cocos2d::CCPoint const&)
   signed int setContentSize(cocos2d::CCSize const&)
   void stopAllActions()
   int removeComponent(char const*)
   int removeComponent(cocos2d::CCComponent*)
   int sortAllChildren()
   int stopActionByTag(int)
   int updateTransform()
   int getActionManager()
   int getGLServerState()
   int getShaderProgram()
   int removeChildByTag(int)
   int removeChildByTag(int, bool)
   int removeFromParent()
   int setActionManager(cocos2d::CCActionManager*)
   int setGLServerState(cocos2d::ccGLServerState)
   int setShaderProgram(cocos2d::CCGLProgram*)
   cocos2d::CCScriptEngineManager * unscheduleUpdate()
   int getOrderOfArrival()
   int removeAllChildren()
   int setOrderOfArrival(unsigned int)
    updateTweenAction(float, char const*)
   cocos2d::CCNode * convertToNodeSpace(cocos2d::CCPoint const&)
   int removeMeAndCleanup()
   void transformAncestors()
   cocos2d::CCNode * convertToWorldSpace(cocos2d::CCPoint const&)
   int removeAllComponents()
   cocos2d::CCNode * convertToNodeSpaceAR(cocos2d::CCPoint const&)
   cocos2d::CCNode * convertToWindowSpace(cocos2d::CCPoint const&)
   cocos2d::CCNode * getScaledContentSize()
   cocos2d::CCNode * nodeToWorldTransform()
   cocos2d::CCNode * worldToNodeTransform()
   cocos2d::CCNode * convertToWorldSpaceAR(cocos2d::CCPoint const&)
   cocos2d::CCNode * nodeToParentTransform()
   cocos2d::CCNode * parentToNodeTransform()
   int registerScriptHandler(int)
   char * getAnchorPointInPoints()
   int numberOfRunningActions()
   int setAdditionalTransform(cocos2d::CCAffineTransform const&)
   int unscheduleAllSelectors()
   cocos2d::CCNode * convertTouchToNodeSpace(cocos2d::CCTouch*)
   int unregisterScriptHandler()
   int onExitTransitionDidStart()
   int pauseSchedulerAndActions()
   cocos2d::CCNode * convertTouchToNodeSpaceAR(cocos2d::CCTouch*)
   int resumeSchedulerAndActions()
   int onEnterTransitionDidFinish()
   int removeFromParentAndCleanup(bool)
   __int64 scheduleUpdateWithPriority(int)
   int ignoreAnchorPointForPosition(bool)
   cocos2d::CCArray * removeAllChildrenWithCleanup(bool)
   __int64 scheduleUpdateWithPriorityLua(int, int)
   int isIgnoreAnchorPointForPosition()
   _DWORD draw()
   signed int init()
   int visit()
   cocos2d::CCNode * create()
   int onExit()
   int update(float)
   cocos2d::CCScriptEngineManager * cleanup()
   int getGrid()
   int onEnter()
   int setGrid(cocos2d::CCGridBase*)
   int addChild(cocos2d::CCNode*)
   int addChild(cocos2d::CCNode*, int)
   int addChild(cocos2d::CCNode*, int, int)
   int getScale()
   int getSkewX()
   int getSkewY()
   __int64 schedule(void (cocos2d::CCObject::*)(float))
   __int64 schedule(void (cocos2d::CCObject::*)(float), float)
   __int64 schedule(void (cocos2d::CCObject::*)(float), float, unsigned int, float)
   int setScale(float)
   int setScale(float, float)
   int setSkewX(float)
   int setSkewY(float)
   int getCamera()
   int getParent()
   int getScaleX()
   int getScaleY()
   int getZOrder()
   int isRunning()
   int isVisible()
   cocos2d::CCAction * runAction(cocos2d::CCAction*)
   int setParent(cocos2d::CCNode*)
   int setScaleX(float)
   int setScaleY(float)
   int setZOrder(int)
   void transform()
   cocos2d::CCNode * CCNode()
   cocos2d::CCNode * ~CCNode()
   int getComponent(char const*) const
   char * getContentSize() const
   cocos2d::CCArray * getChildrenCount() const
   virtual cocos2d::CCNode * ~CCNode()
   virtual int update(float)
   virtual signed int init(void)
   virtual int setZOrder(int)
   virtual int _setZOrder(int)
   virtual int getZOrder(void)
   virtual int setVertexZ(float)
   virtual int getVertexZ(void)
   virtual int setScaleX(float)
   virtual int getScaleX(void)
   virtual int setScaleY(float)
   virtual int getScaleY(void)
   virtual int setScale(float)
   virtual int getScale(void)
   virtual int setScale(float,float)
   virtual int setPosition(cocos2d::CCPoint const&)
   virtual char * getPosition(void)
   virtual int setPosition(float,float)
   virtual char * getPosition(float *,float *)
   virtual int setPositionX(float)
   virtual int getPositionX(void)
   virtual int setPositionY(float)
   virtual int getPositionY(void)
   virtual int setSkewX(float)
   virtual int getSkewX(void)
   virtual int setSkewY(float)
   virtual int getSkewY(void)
   virtual signed int setAnchorPoint(cocos2d::CCPoint const&)
   virtual char * getAnchorPoint(void)
   virtual char * getAnchorPointInPoints(void)
   virtual signed int setContentSize(cocos2d::CCSize const&)
   virtual char * getContentSize(void)
   virtual cocos2d::CCNode * getScaledContentSize(void)
   virtual int setVisible(bool)
   virtual int isVisible(void)
   virtual int setRotation(float)
   virtual int getRotation(void)
   virtual int setRotationX(float)
   virtual int getRotationX(void)
   virtual int setRotationY(float)
   virtual int getRotationY(void)
   virtual int setOrderOfArrival(uint)
   virtual int getOrderOfArrival(void)
   virtual int setGLServerState(cocos2d::ccGLServerState)
   virtual int getGLServerState(void)
   virtual int ignoreAnchorPointForPosition(bool)
   virtual int isIgnoreAnchorPointForPosition(void)
   virtual int addChild(cocos2d::CCNode*)
   virtual int addChild(cocos2d::CCNode*,int)
   virtual int addChild(cocos2d::CCNode*,int,int)
   virtual int getChildByTag(int)
   virtual int getChildren(void)
   virtual cocos2d::CCArray * getChildrenCount(void)
   virtual int setParent(cocos2d::CCNode*)
   virtual int getParent(void)
   virtual int removeFromParent(void)
   virtual int removeFromParentAndCleanup(bool)
   virtual int removeMeAndCleanup(void)
   virtual int removeChild(cocos2d::CCNode*)
   virtual int removeChild(cocos2d::CCNode*,bool)
   virtual int removeChildByTag(int)
   virtual int removeChildByTag(int,bool)
   virtual int removeAllChildren(void)
   virtual cocos2d::CCArray * removeAllChildrenWithCleanup(bool)
   virtual int reorderChild(cocos2d::CCNode*,int)
   virtual int sortAllChildren(void)
   virtual int getGrid(void)
   virtual int setGrid(cocos2d::CCGridBase *)
   virtual int getUserData(void)
   virtual int setUserData(void *)
   virtual int getUserObject(void)
   virtual int setUserObject(cocos2d::CCObject *)
   virtual int getShaderProgram(void)
   virtual int setShaderProgram(cocos2d::CCGLProgram *)
   virtual int getCamera(void)
   virtual int isRunning(void)
   virtual int registerScriptHandler(int)
   virtual int unregisterScriptHandler(void)
   virtual int onEnter(void)
   virtual int onEnterTransitionDidFinish(void)
   virtual int onExit(void)
   virtual int onExitTransitionDidStart(void)
   virtual cocos2d::CCScriptEngineManager * cleanup(void)
   virtual _DWORD draw(void)
   virtual int visit(void)
   virtual int setActionManager(cocos2d::CCActionManager *)
   virtual int getActionManager(void)
   virtual int setScheduler(cocos2d::CCScheduler *)
   virtual int getScheduler(void)
   virtual int updateTransform(void)
   virtual cocos2d::CCNode * nodeToParentTransform(void)
   virtual cocos2d::CCNode * parentToNodeTransform(void)
   virtual cocos2d::CCNode * nodeToWorldTransform(void)
   virtual cocos2d::CCNode * worldToNodeTransform(void)
   virtual int addComponent(cocos2d::CCComponent *)
   virtual int removeComponent(char const*)
   virtual int removeComponent(cocos2d::CCComponent *)
   virtual int removeAllComponents(void)
   virtual  updateTweenAction(float,char const*)
}
class cocos2d::CCNodeRGBA : cocos2d::CCNode, cocos2d::CCRGBAProtocol{
   int getOpacity()
   int setOpacity(unsigned char)
   char * getDisplayedColor()
   int isOpacityModifyRGB()
   int getDisplayedOpacity()
   int setOpacityModifyRGB(bool)
   int updateDisplayedColor(cocos2d::_ccColor3B const&)
   int isCascadeColorEnabled()
   int setCascadeColorEnabled(bool)
   int updateDisplayedOpacity(unsigned char)
   int isCascadeOpacityEnabled()
   int setCascadeOpacityEnabled(bool)
   signed int init()
   cocos2d::CCNodeRGBA * create()
   char * getColor()
   void * setColor(cocos2d::_ccColor3B const&)
   cocos2d::CCNodeRGBA * CCNodeRGBA()
   cocos2d::CCNodeRGBA * ~CCNodeRGBA()
-   virtual cocos2d::CCNodeRGBA * ~CCNodeRGBA()
-   virtual signed int init(void)
-   virtual int getOpacity(void)
-   virtual int getDisplayedOpacity(void)
-   virtual int setOpacity(uchar)
-   virtual int updateDisplayedOpacity(uchar)
-   virtual int isCascadeOpacityEnabled(void)
-   virtual int setCascadeOpacityEnabled(bool)
-   virtual char * getColor(void)
-   virtual char * getDisplayedColor(void)
-   virtual void * setColor(cocos2d::_ccColor3B const&)
   virtual int updateDisplayedColor(cocos2d::_ccColor3B const&)
   virtual int isCascadeColorEnabled(void)
   virtual int setCascadeColorEnabled(bool)
   virtual int setOpacityModifyRGB(bool)
   virtual int isOpacityModifyRGB(void)
}
class cocos2d::CCAutoreleasePool : cocos2d::CCObject{
   int removeObject(cocos2d::CCObject*)
   int clear()
   int addObject(cocos2d::CCObject*)
   cocos2d::CCAutoreleasePool * CCAutoreleasePool()
   cocos2d::CCAutoreleasePool * ~CCAutoreleasePool()
   virtual cocos2d::CCAutoreleasePool * ~CCAutoreleasePool()
}
class cocos2d::CCDictionary : cocos2d::CCObject{
   int charForKey(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   int * getFirstKey()
   cocos2d::CCObject * valueForKey(int)
   cocos2d::CCObject * valueForKey(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   int writeToFile(char const*)
   cocos2d::CCDictionary * copyWithZone(cocos2d::CCZone*)
   int objectForKey(int)
   int objectForKey(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   int randomObject()
   int acceptVisitor(cocos2d::CCDataVisitor&)
   void setObjectUnSafe(cocos2d::CCObject*, int)
   void setObjectUnSafe(cocos2d::CCObject*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   cocos2d::CCArray * allKeysForObject(cocos2d::CCObject*)
   void removeAllObjects()
   void removeObjectForKey(int)
   void removeObjectForKey(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   cocos2d::CCObject * createWithDictionary(cocos2d::CCDictionary*)
   int removeObjectsForKeys(cocos2d::CCArray*)
   void removeObjectForElememt(cocos2d::CCDictElement*)
   int createWithContentsOfFile(char const*)
   int createWithContentsOfFileThreadSafe(char const*)
   int count()
   cocos2d::CCDictionary * create()
   cocos2d::CCArray * allKeys()
   void setObject(cocos2d::CCObject*, int)
   void setObject(cocos2d::CCObject*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   cocos2d::CCDictionary * CCDictionary()
   cocos2d::CCObject * ~CCDictionary()
   virtual cocos2d::CCDictionary * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCObject * ~CCDictionary()
   virtual int acceptVisitor(cocos2d::CCDataVisitor &)
}
class cocos2d::CCCopying{
   int copyWithZone(cocos2d::CCZone*)
   virtual int copyWithZone(cocos2d::CCZone *)
}
class cocos2d::CCObject : cocos2d::CCCopying{
   cocos2d::CCObject * autorelease()
   int acceptVisitor(cocos2d::CCDataVisitor&)
   int createWithCoder(DS_Dictionary*)
    encodeWithCoder(DS_Dictionary*)
   int copy()
   int retain()
   int setTag(int)
    update(float)
   int isEqual(cocos2d::CCObject const*)
   int release()
   int canEncode()
   int CCObject()
   cocos2d::CCObject * ~CCObject()
   int retainCount() const
   _BOOL4 isSingleReference() const
   int getTag() const
   virtual cocos2d::CCObject * ~CCObject()
   virtual int isEqual(cocos2d::CCObject const*)
   virtual int acceptVisitor(cocos2d::CCDataVisitor &)
   virtual  update(float)
   virtual  encodeWithCoder(DS_Dictionary *)
   virtual int canEncode(void)
   virtual int getTag(void)
   virtual int setTag(int)
}
class cocos2d::CCSet : cocos2d::CCObject{
   _DWORD mutableCopy()
   cocos2d::CCSet * removeObject(cocos2d::CCObject*)
   int acceptVisitor(cocos2d::CCDataVisitor&)
   _BOOL4 containsObject(cocos2d::CCObject*)
   int removeAllObjects()
   int end()
   cocos2d::CCSet * copy()
   int begin()
   int count()
   cocos2d::CCSet * create()
   cocos2d::CCSet * addObject(cocos2d::CCObject*)
   int anyObject()
   cocos2d::CCSet * CCSet(cocos2d::CCSet const&)
   cocos2d::CCSet * CCSet()
   cocos2d::CCSet * ~CCSet()
   virtual cocos2d::CCSet * ~CCSet()
   virtual int acceptVisitor(cocos2d::CCDataVisitor &)
}
class cocos2d::CCString : cocos2d::CCObject{
   cocos2d::CCString * copyWithZone(cocos2d::CCZone*)
   int acceptVisitor(cocos2d::CCDataVisitor&)
   cocos2d::CCString * createWithData(unsigned char const*, unsigned long)
   char * initWithFormat(char const*, ...)
   cocos2d::CCObject * createWithFormat(char const*, ...)
   char * initWithFormatAndValist(char const*, std::__va_list)
   cocos2d::CCString * createWithContentsOfFile(char const*)
   cocos2d::CCObject * create(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   const cocos2d::CCObject * isEqual(cocos2d::CCObject const*)
   int operator=(cocos2d::CCString const&)
   cocos2d::CCString * CCString(char const*)
   cocos2d::CCString * CCString(cocos2d::CCString const&)
   cocos2d::CCString * CCString(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   cocos2d::CCString * CCString()
   cocos2d::CCObject * ~CCString()
   int floatValue() const
   int getCString() const
   double doubleValue() const
   int length() const
   int compare(char const*) const
   int intValue() const
   int boolValue() const
   int uintValue() const
   virtual cocos2d::CCString * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCObject * ~CCString()
   virtual const cocos2d::CCObject * isEqual(cocos2d::CCObject const*)
   virtual int acceptVisitor(cocos2d::CCDataVisitor &)
}
class cocos2d::CCArray : cocos2d::CCObject{
   int lastObject()
   int addObjectNew(cocos2d::CCObject*)
   cocos2d::CCArray * copyWithZone(cocos2d::CCZone*)
   int insertObject(cocos2d::CCObject*, unsigned int)
   int randomObject()
   int * removeObject(cocos2d::CCObject*, bool)
   int acceptVisitor(cocos2d::CCDataVisitor&)
   signed int initWithArray(cocos2d::CCArray*)
   int objectAtIndex(unsigned int)
   _DWORD stringAtIndex(unsigned int)
   int exchangeObject(cocos2d::CCObject*, cocos2d::CCObject*)
   signed int initWithObject(cocos2d::CCObject*)
   int isEqualToArray(cocos2d::CCArray*)
   int reverseObjects()
   cocos2d::CCObject * createWithArray(cocos2d::CCArray*)
   signed int initWithObjects(cocos2d::CCObject*, ...)
   cocos2d::CCArray * createWithObject(cocos2d::CCObject*)
   int fastRemoveObject(cocos2d::CCObject*)
   signed int initWithCapacity(unsigned int)
   int removeAllObjects()
   int * removeLastObject(bool)
   cocos2d::CCArray * createWithCapacity(unsigned int)
   int addObjectsFromArray(cocos2d::CCArray*)
   int * removeObjectAtIndex(unsigned int, bool)
   int * removeObjectsInArray(cocos2d::CCArray*)
   int * replaceObjectAtIndex(unsigned int, cocos2d::CCObject*, bool)
   int exchangeObjectAtIndex(unsigned int, unsigned int)
   void * reduceMemoryFootprint()
   int fastRemoveObjectAtIndex(unsigned int)
   int createWithContentsOfFile(char const*)
   int fastRemoveObjectAtIndexNew(unsigned int)
   int createWithContentsOfFileThreadSafe(char const*)
   signed int init()
   cocos2d::CCObject * create(cocos2d::CCObject*, ...)
   cocos2d::CCObject * create()
   int addObject(cocos2d::CCObject*)
   cocos2d::CCArray * CCArray(unsigned int)
   cocos2d::CCArray * CCArray()
   cocos2d::CCObject * ~CCArray()
   signed int indexOfObject(cocos2d::CCObject*) const
   _BOOL4 containsObject(cocos2d::CCObject*) const
   int count() const
   int capacity() const
   virtual cocos2d::CCArray * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCObject * ~CCArray()
   virtual int acceptVisitor(cocos2d::CCDataVisitor &)
}
class cocos2d::CCDataVisitor{
   int visit(cocos2d::CCDictionary const*)
   int visit(cocos2d::CCSet const*)
   int visit(cocos2d::CCBool const*)
   int visit(cocos2d::CCArray const*)
   int visit(cocos2d::CCFloat const*)
   int visit(cocos2d::CCDouble const*)
   int visit(cocos2d::CCString const*)
   int visit(cocos2d::CCInteger const*)
   int ~CCDataVisitor()
   virtual int ~CCDataVisitor()
   virtual int visit(cocos2d::CCBool const*)
   virtual int visit(cocos2d::CCInteger const*)
   virtual int visit(cocos2d::CCFloat const*)
   virtual int visit(cocos2d::CCDouble const*)
   virtual int visit(cocos2d::CCString const*)
   virtual int visit(cocos2d::CCArray const*)
   virtual int visit(cocos2d::CCDictionary const*)
   virtual int visit(cocos2d::CCSet const*)
}
class cocos2d::CCPrettyPrinter : cocos2d::CCDataVisitor{
   int * visitObject(cocos2d::CCObject const*)
   void setIndentLevel(int)
   void clear()
   int * visit(cocos2d::CCDictionary const*)
   int * visit(cocos2d::CCSet const*)
   int * visit(cocos2d::CCBool const*)
   int * visit(cocos2d::CCArray const*)
   int * visit(cocos2d::CCFloat const*)
   int * visit(cocos2d::CCDouble const*)
   int * visit(cocos2d::CCString const*)
   int * visit(cocos2d::CCInteger const*)
   cocos2d::CCPrettyPrinter * getResult()
   cocos2d::CCPrettyPrinter * CCPrettyPrinter(int)
   cocos2d::CCPrettyPrinter * ~CCPrettyPrinter()
   virtual cocos2d::CCPrettyPrinter * ~CCPrettyPrinter()
   virtual int * visitObject(cocos2d::CCObject const*)
   virtual int * visit(cocos2d::CCBool const*)
   virtual int * visit(cocos2d::CCInteger const*)
   virtual int * visit(cocos2d::CCFloat const*)
   virtual int * visit(cocos2d::CCDouble const*)
   virtual int * visit(cocos2d::CCString const*)
   virtual int * visit(cocos2d::CCArray const*)
   virtual int * visit(cocos2d::CCDictionary const*)
   virtual int * visit(cocos2d::CCSet const*)
   virtual void clear(void)
   virtual cocos2d::CCPrettyPrinter * getResult(void)
}
class cocos2d::EGLTouchDelegate{
   int ~EGLTouchDelegate()
   virtual int ~EGLTouchDelegate()
}
class cocos2d::CCDirector : cocos2d::CCObject, cocos2d::TypeInfo{
   cocos2d::CCDirector * getWinSize()
   int sceneCount()
   cocos2d::CCDirector * convertToGL(cocos2d::CCPoint const&)
   cocos2d::CCDirector * convertToUI(cocos2d::CCPoint const&)
   int setDelegate(cocos2d::CCDirectorDelegate*)
   int setViewport()
   int calculateMPF()
   int getDeltaTime()
   int getScheduler()
   int getScreenTop()
   signed int replaceScene(cocos2d::CCScene*)
   int runWithScene(cocos2d::CCScene*)
   int setDeltaTime(float)
   void setDepthTest(bool)
   int setNextScene()
   int setScheduler(cocos2d::CCScheduler*)
   int getScreenLeft()
   int purgeDirector()
   int setOpenGLView(cocos2d::CCEGLView*)
   void setProjection(cocos2d::ccDirectorProjection)
   int getScreenRight()
   cocos2d::CCDirector * getVisibleSize()
   int popToRootScene()
   int sharedDirector()
   signed int getFPSImageData(unsigned char**, unsigned int*)
   int getScreenBottom()
    purgeCachedData()
   _DWORD createStatsLabel()
   int getAccelerometer()
   int getActionManager()
   int getClassTypeInfo()
   cocos2d::CCDirector * getVisibleOrigin()
   int removeStatsLabel()
   void setAccelerometer(cocos2d::CCAccelerometer*)
   int setActionManager(cocos2d::CCActionManager*)
   void setAlphaBlending(bool)
   int setDefaultValues()
   int setSceneDelegate(cocos2d::CCSceneDelegate*)
   int setupScreenScale(cocos2d::CCSize, cocos2d::CCSize, cocos2d::TextureQuality)
   int popToSceneInStack(cocos2d::CCScene*)
   void reshapeProjection(cocos2d::CCSize const&)
   cocos2d::CCDirector * updateScreenScale(cocos2d::CCSize)
   int willSwitchToScene(cocos2d::CCScene*)
   cocos2d::CCDirector * calculateDeltaTime()
   int getMouseDispatcher()
   int getTouchDispatcher()
   cocos2d::CCDirector * getWinSizeInPixels()
   void setGLDefaultValues()
   int setMouseDispatcher(cocos2d::CCMouseDispatcher*)
   int setTouchDispatcher(cocos2d::CCTouchDispatcher*)
   int updateContentScale(cocos2d::TextureQuality)
   int checkSceneReference()
   int getKeypadDispatcher()
   int getNotificationNode()
   int setKeypadDispatcher(cocos2d::CCKeypadDispatcher*)
   int setNotificationNode(cocos2d::CCNode*)
   int getScreenScaleFactor()
   int levelForSceneInStack(cocos2d::CCScene*)
   int popToSceneStackLevel(int)
   int setNextDeltaTimeZero(bool)
   int getContentScaleFactor()
   int getKeyboardDispatcher()
   int getScreenScaleFactorH()
   int getScreenScaleFactorW()
   int resetSmoothFixCounter()
   int setContentScaleFactor(float)
   int setKeyboardDispatcher(cocos2d::CCKeyboardDispatcher*)
   signed int popSceneWithTransition(float, cocos2d::PopTransition)
   int getScreenScaleFactorMax()
   int end()
   signed int init()
   int pause()
   int resume()
   int getZEye()
   signed int popScene()
   int drawScene()
   signed int pushScene(cocos2d::CCScene*)
   int showStats()
   cocos2d::CCDirector * CCDirector()
   cocos2d::CCDirector * ~CCDirector()
   int getDelegate() const
   int getSceneDelegate() const
   int getClassTypeInfo()::id
   virtual cocos2d::CCDirector * ~CCDirector()
   virtual signed int init(void)
   virtual int getClassTypeInfo(void)
   virtual int getScheduler(void)
   virtual int setScheduler(cocos2d::CCScheduler *)
   virtual int getActionManager(void)
   virtual int setActionManager(cocos2d::CCActionManager *)
   virtual int getTouchDispatcher(void)
   virtual int setTouchDispatcher(cocos2d::CCTouchDispatcher *)
   virtual int getKeypadDispatcher(void)
   virtual int setKeypadDispatcher(cocos2d::CCKeypadDispatcher *)
   virtual int getKeyboardDispatcher(void)
   virtual int setKeyboardDispatcher(cocos2d::CCKeyboardDispatcher *)
   virtual int getMouseDispatcher(void)
   virtual int setMouseDispatcher(cocos2d::CCMouseDispatcher *)
   virtual int getAccelerometer(void)
   virtual void setAccelerometer(cocos2d::CCAccelerometer *)
   virtual int getDeltaTime(void)
   virtual int getSceneDelegate(void)
   virtual int setSceneDelegate(cocos2d::CCSceneDelegate *)
}
class cocos2d::CCDisplayLinkDirector : cocos2d::CCDirector{
   int stopAnimation()
   int startAnimation()
   int setAnimationInterval(double)
   int mainLoop()
   cocos2d::CCDisplayLinkDirector * ~CCDisplayLinkDirector()
   virtual cocos2d::CCDisplayLinkDirector * ~CCDisplayLinkDirector()
   virtual int setAnimationInterval(double)
   virtual int stopAnimation(void)
   virtual int startAnimation(void)
   virtual int mainLoop(void)
}
class cocos2d::CCDrawNode : cocos2d::CCNodeRGBA{
   void drawPolygon(cocos2d::CCPoint*, unsigned int, cocos2d::_ccColor4F const&, float, cocos2d::_ccColor4F const&)
   int drawSegment(cocos2d::CCPoint const&, cocos2d::CCPoint const&, float, cocos2d::_ccColor4F const&)
   int setBlendFunc(cocos2d::_ccBlendFunc const&)
   int ensureCapacity(unsigned int)
   int listenBackToForeground(cocos2d::CCObject*)
   int draw()
   signed int init()
   int clear()
   cocos2d::CCDrawNode * create()
   int render()
   int drawDot(cocos2d::CCPoint const&, float, cocos2d::_ccColor4F const&)
   cocos2d::CCDrawNode * CCDrawNode()
   cocos2d::CCDrawNode * ~CCDrawNode()
   cocos2d::CCDrawNode * getBlendFunc() const
   virtual cocos2d::CCDrawNode * ~CCDrawNode()
   virtual signed int init(void)
   virtual int draw(void)
}
class cocos2d::CCGrabber : cocos2d::CCObject{
   void afterRender(cocos2d::CCTexture2D*)
   void beforeRender(cocos2d::CCTexture2D*)
   int grab(cocos2d::CCTexture2D*)
   cocos2d::CCGrabber * CCGrabber()
   cocos2d::CCObject * ~CCGrabber()
   virtual cocos2d::CCObject * ~CCGrabber()
}
class cocos2d::CCGridBase : cocos2d::CCObject{
   void beforeDraw()
   cocos2d::CCGrabber * initWithSize(cocos2d::CCSize const&)
   cocos2d::CCGrabber * initWithSize(cocos2d::CCSize const&, cocos2d::CCTexture2D*, bool)
   void set2DProjection()
   int setTextureFlipped(bool)
    calculateVertexPoints()
    blit()
    reuse()
   void * create(cocos2d::CCSize const&)
   void * create(cocos2d::CCSize const&, cocos2d::CCTexture2D*, bool)
   int afterDraw(cocos2d::CCNode*)
   void setActive(bool)
   cocos2d::CCGridBase * CCGridBase()
   cocos2d::CCGridBase * ~CCGridBase()
   virtual cocos2d::CCGridBase * ~CCGridBase()
   virtual  blit(void)
   virtual  reuse(void)
   virtual  calculateVertexPoints(void)
}
class cocos2d::CCGrid3D : cocos2d::CCGridBase{
   int originalVertex(cocos2d::CCPoint const&)
   void * calculateVertexPoints()
   int blit()
   int reuse()
   cocos2d::CCGrid3D * create(cocos2d::CCSize const&)
   cocos2d::CCGrid3D * create(cocos2d::CCSize const&, cocos2d::CCTexture2D*, bool)
   int vertex(cocos2d::CCPoint const&)
   int setVertex(cocos2d::CCPoint const&, cocos2d::_ccVertex3F const&)
   cocos2d::CCGrid3D * CCGrid3D()
   cocos2d::CCGrid3D * ~CCGrid3D()
   virtual cocos2d::CCGrid3D * ~CCGrid3D()
   virtual int blit(void)
   virtual int reuse(void)
   virtual void * calculateVertexPoints(void)
}
class cocos2d::CCTiledGrid3D : cocos2d::CCGridBase{
   cocos2d::CCTiledGrid3D * originalTile(cocos2d::CCPoint const&)
   void * calculateVertexPoints()
   int blit()
   cocos2d::CCTiledGrid3D * tile(cocos2d::CCPoint const&)
   int reuse()
   cocos2d::CCTiledGrid3D * create(cocos2d::CCSize const&)
   cocos2d::CCTiledGrid3D * create(cocos2d::CCSize const&, cocos2d::CCTexture2D*, bool)
   void * setTile(cocos2d::CCPoint const&, cocos2d::_ccQuad3 const&)
   cocos2d::CCTiledGrid3D * CCTiledGrid3D()
   cocos2d::CCTiledGrid3D * ~CCTiledGrid3D()
   virtual cocos2d::CCTiledGrid3D * ~CCTiledGrid3D()
   virtual int blit(void)
   virtual int reuse(void)
   virtual void * calculateVertexPoints(void)
}
class cocos2d::CCKeypadHandler : cocos2d::CCObject{
   int getDelegate()
   _DWORD * setDelegate(cocos2d::CCKeypadDelegate*)
   signed int initWithDelegate(cocos2d::CCKeypadDelegate*)
   cocos2d::CCObject * handlerWithDelegate(cocos2d::CCKeypadDelegate*)
   cocos2d::CCObject * ~CCKeypadHandler()
   virtual cocos2d::CCObject * ~CCKeypadHandler()
   virtual signed int initWithDelegate(cocos2d::CCKeypadDelegate *)
}
class cocos2d::CCKeypadDispatcher : cocos2d::CCObject{
   int addDelegate(cocos2d::CCKeypadDelegate*)
   int removeDelegate(cocos2d::CCKeypadDelegate*)
   cocos2d::CCObject * forceAddDelegate(cocos2d::CCKeypadDelegate*)
   signed int dispatchKeypadMSG(cocos2d::ccKeypadMSGType)
   int * forceRemoveDelegate(cocos2d::CCKeypadDelegate*)
   cocos2d::CCKeypadDispatcher * CCKeypadDispatcher()
   cocos2d::CCKeypadDispatcher * ~CCKeypadDispatcher()
   virtual cocos2d::CCKeypadDispatcher * ~CCKeypadDispatcher()
}
class cocos2d::CCLabelProtocol{
}
class cocos2d::CCLabelAtlas : cocos2d::CCAtlasNode, cocos2d::CCLabelProtocol{
   signed int initWithString(char const*, cocos2d::CCTexture2D*, unsigned int, unsigned int, unsigned int)
   signed int initWithString(char const*, char const*)
   signed int initWithString(char const*, char const*, unsigned int, unsigned int, unsigned int)
   unsigned int updateAtlasValues()
   cocos2d::CCAtlasNode * create(char const*, char const*)
   cocos2d::CCAtlasNode * create(char const*, char const*, unsigned int, unsigned int, unsigned int)
   int getString()
   int setString(char const*)
   cocos2d::CCAtlasNode * ~CCLabelAtlas()
   virtual cocos2d::CCAtlasNode * ~CCLabelAtlas()
   virtual unsigned int updateAtlasValues(void)
   virtual int setString(char const*)
   virtual int getString(void)
}
class cocos2d::CCSpriteExtra : cocos2d::CCSprite{
   cocos2d::CCSpriteExtra * ~CCSpriteExtra()
   virtual cocos2d::CCSpriteExtra * ~CCSpriteExtra()
}
class cocos2d::CCBMFontConfiguration : cocos2d::CCObject{
   int description()
   _BOOL4 initWithFNTfile(char const*)
   int parseConfigFile(char const*)
   _DWORD * parseKerningEntry(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   _DWORD * parseImageFileName(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
   __int64 parseInfoArguments(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   void parseCommonArguments(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   void purgeFontDefDictionary()
   void purgeKerningDictionary()
   _DWORD * parseCharacterDefinition(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, cocos2d::_BMFontDef*)
   cocos2d::CCBMFontConfiguration * create(char const*)
   cocos2d::CCBMFontConfiguration * CCBMFontConfiguration()
   cocos2d::CCBMFontConfiguration * ~CCBMFontConfiguration()
   int getCharacterSet() const
   virtual cocos2d::CCBMFontConfiguration * ~CCBMFontConfiguration()
}
class cocos2d::CCLabelBMFont : cocos2d::CCSpriteBatchNode, cocos2d::CCLabelProtocol, cocos2d::CCRGBAProtocol{
   int getFntFile()
   int getOpacity()
   int setCString(char const*)
   int setFntFile(char const*)
   cocos2d::CCArray * setOpacity(unsigned char)
   void updateLabel()
   int setAlignment(cocos2d::CCTextAlignment)
   cocos2d::CCLabelBMFont * createBatched(char const*, char const*, cocos2d::CCArray*)
   int initWithString(char const*, char const*, float, cocos2d::CCTextAlignment, cocos2d::CCPoint)
   signed int setAnchorPoint(cocos2d::CCPoint const&)
   int createFontChars()
   int limitLabelWidth(float, float, float)
   _DWORD purgeCachedData()
   char * getDisplayedColor()
   int getLetterPosXLeft(cocos2d::CCSprite*)
   int getLetterPosXRight(cocos2d::CCSprite*)
   int isOpacityModifyRGB()
   int getDisplayedOpacity()
   cocos2d::CCArray * setOpacityModifyRGB(bool)
   int updateDisplayedColor(cocos2d::_ccColor3B const&)
   int isCascadeColorEnabled()
   int kerningAmountForFirst(unsigned short, unsigned short)
   int setCascadeColorEnabled(bool)
   int updateDisplayedOpacity(unsigned char)
   int isCascadeOpacityEnabled()
   int setCascadeOpacityEnabled(bool)
   int setLineBreakWithoutSpace(bool)
   int init()
   cocos2d::CCLabelBMFont * create(char const*, char const*)
   cocos2d::CCLabelBMFont * create(char const*, char const*, float)
   cocos2d::CCLabelBMFont * create(char const*, char const*, float, cocos2d::CCTextAlignment)
   cocos2d::CCLabelBMFont * create(char const*, char const*, float, cocos2d::CCTextAlignment, cocos2d::CCPoint)
   cocos2d::CCLabelBMFont * create()
   char * getColor()
   void * setColor(cocos2d::_ccColor3B const&)
   int setScale(float)
   int setWidth(float)
   int getString()
   int setScaleX(float)
   int setScaleY(float)
   int setString(char const*)
   int setString(char const*, bool)
   int setString(unsigned short*, bool)
   cocos2d::CCLabelBMFont * CCLabelBMFont()
   cocos2d::CCLabelBMFont * ~CCLabelBMFont()
   int getConfiguration() const
   virtual cocos2d::CCLabelBMFont * ~CCLabelBMFont()
   virtual int init(void)
   virtual int setScaleX(float)
   virtual int setScaleY(float)
   virtual int setScale(float)
   virtual signed int setAnchorPoint(cocos2d::CCPoint const&)
   virtual int setString(char const*)
   virtual int setString(char const*,bool)
   virtual int getString(void)
   virtual int setCString(char const*)
   virtual void updateLabel(void)
   virtual int setAlignment(cocos2d::CCTextAlignment)
   virtual int setWidth(float)
   virtual int setLineBreakWithoutSpace(bool)
   virtual int isOpacityModifyRGB(void)
   virtual cocos2d::CCArray * setOpacityModifyRGB(bool)
   virtual int getOpacity(void)
   virtual int getDisplayedOpacity(void)
   virtual cocos2d::CCArray * setOpacity(uchar)
   virtual int updateDisplayedOpacity(uchar)
   virtual int isCascadeOpacityEnabled(void)
   virtual int setCascadeOpacityEnabled(bool)
   virtual char * getColor(void)
   virtual char * getDisplayedColor(void)
   virtual void * setColor(cocos2d::_ccColor3B const&)
   virtual int updateDisplayedColor(cocos2d::_ccColor3B const&)
   virtual int isCascadeColorEnabled(void)
   virtual int setCascadeColorEnabled(bool)
   virtual int setString(ushort *,bool)
}
class cocos2d::CCLabelTTF : cocos2d::CCSprite, cocos2d::CCLabelProtocol{
   int description()
   int getFontName()
   int getFontSize()
   _DWORD * setFontName(char const*)
   int setFontSize(float)
   int enableShadow(cocos2d::CCSize const&, float, float, bool)
   void * enableStroke(cocos2d::_ccColor3B const&, float, bool)
   int disableShadow(bool)
   int disableStroke(bool)
   cocos2d::CCLabelTTF * getDimensions()
   int setDimensions(cocos2d::CCSize const&)
   signed int updateTexture()
   cocos2d::CCShaderCache * initWithString(char const*, char const*, float)
   cocos2d::CCShaderCache * initWithString(char const*, char const*, float, cocos2d::CCSize const&, cocos2d::CCTextAlignment)
   cocos2d::CCShaderCache * initWithString(char const*, char const*, float, cocos2d::CCSize const&, cocos2d::CCTextAlignment, cocos2d::CCVerticalTextAlignment)
   void * setFontFillColor(cocos2d::_ccColor3B const&, bool)
   cocos2d::_ccFontDefinition * getTextDefinition()
   int setTextDefinition(cocos2d::_ccFontDefinition*)
   int getVerticalAlignment()
   cocos2d::CCLabelTTF * setVerticalAlignment(cocos2d::CCVerticalTextAlignment)
   int getHorizontalAlignment()
   cocos2d::CCLabelTTF * _prepareTextDefinition(bool)
   cocos2d::CCLabelTTF * setHorizontalAlignment(cocos2d::CCTextAlignment)
   cocos2d::CCLabelTTF * createWithFontDefinition(char const*, cocos2d::_ccFontDefinition&)
   void * _updateWithTextDefinition(cocos2d::_ccFontDefinition&, bool)
   cocos2d::CCShaderCache * initWithStringAndTextDefinition(char const*, cocos2d::_ccFontDefinition&)
   cocos2d::CCShaderCache * init()
   cocos2d::CCLabelTTF * create(char const*, char const*, float)
   cocos2d::CCLabelTTF * create(char const*, char const*, float, cocos2d::CCSize const&, cocos2d::CCTextAlignment)
   cocos2d::CCLabelTTF * create(char const*, char const*, float, cocos2d::CCSize const&, cocos2d::CCTextAlignment, cocos2d::CCVerticalTextAlignment)
   cocos2d::CCLabelTTF * create()
   int getString()
   int setString(char const*)
   cocos2d::CCLabelTTF * CCLabelTTF()
   cocos2d::CCLabelTTF * ~CCLabelTTF()
   virtual cocos2d::CCLabelTTF * ~CCLabelTTF()
   virtual cocos2d::CCShaderCache * init(void)
   virtual int setString(char const*)
   virtual int getString(void)
}
class cocos2d::CCTouchDelegate{
   int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
    ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
    ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   void ccTouchesBegan(cocos2d::CCSet*, cocos2d::CCEvent*)
    ccTouchesEnded(cocos2d::CCSet*, cocos2d::CCEvent*)
    ccTouchesMoved(cocos2d::CCSet*, cocos2d::CCEvent*)
    ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
    ccTouchesCancelled(cocos2d::CCSet*, cocos2d::CCEvent*)
   int ~CCTouchDelegate()
   virtual int ~CCTouchDelegate()
   virtual int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual  ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual  ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual  ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual void ccTouchesBegan(cocos2d::CCSet *,cocos2d::CCEvent *)
   virtual  ccTouchesMoved(cocos2d::CCSet *,cocos2d::CCEvent *)
   virtual  ccTouchesEnded(cocos2d::CCSet *,cocos2d::CCEvent *)
   virtual  ccTouchesCancelled(cocos2d::CCSet *,cocos2d::CCEvent *)
}
class cocos2d::CCAccelerometerDelegate{
    didAccelerate(cocos2d::CCAcceleration*)
   virtual  didAccelerate(cocos2d::CCAcceleration *)
}
class cocos2d::CCKeypadDelegate{
    keyBackClicked()
    keyMenuClicked()
   virtual  keyBackClicked(void)
   virtual  keyMenuClicked(void)
}
class cocos2d::CCMouseDelegate{
    rightKeyUp()
    scrollWheel(float, float)
    rightKeyDown()
   virtual  rightKeyDown(void)
   virtual  rightKeyUp(void)
   virtual  scrollWheel(float,float)
}
class cocos2d::CCLayer : cocos2d::CCNode, cocos2d::CCTouchDelegate, cocos2d::CCAccelerometerDelegate, cocos2d::CCKeypadDelegate, cocos2d::CCKeyboardDelegate, cocos2d::CCMouseDelegate{
   signed int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int getTouchMode()
   int setTouchMode(cocos2d::ccTouchesMode)
   int didAccelerate(cocos2d::CCAcceleration*)
   int ccTouchesBegan(cocos2d::CCSet*, cocos2d::CCEvent*)
   int ccTouchesEnded(cocos2d::CCSet*, cocos2d::CCEvent*)
   int ccTouchesMoved(cocos2d::CCSet*, cocos2d::CCEvent*)
   int isMouseEnabled()
   int isTouchEnabled()
   int keyBackClicked()
   int keyMenuClicked()
   int isKeypadEnabled()
   int setMouseEnabled(bool)
   int setTouchEnabled(bool)
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int getTouchPriority()
   cocos2d::CCDirector * setKeypadEnabled(bool)
   int setTouchPriority(int)
   int isKeyboardEnabled()
   int ccTouchesCancelled(cocos2d::CCSet*, cocos2d::CCEvent*)
   int setKeyboardEnabled(bool)
   int isAccelerometerEnabled()
   int setAccelerometerEnabled(bool)
   int excuteScriptTouchHandler(int, cocos2d::CCSet*)
   int excuteScriptTouchHandler(int, cocos2d::CCTouch*)
   int setAccelerometerInterval(double)
   int onEnterTransitionDidFinish()
   int registerScriptTouchHandler(int, bool, int, bool)
   int registerScriptKeypadHandler(int)
   int registerWithTouchDispatcher()
   int unregisterScriptTouchHandler()
   int unregisterScriptKeypadHandler()
   int registerScriptAccelerateHandler(int)
   int unregisterScriptAccelerateHandler()
   signed int init()
   cocos2d::CCLayer * create()
   cocos2d::CCScriptEngineManager * onExit()
   cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
   int onEnter()
   cocos2d::CCLayer * CCLayer()
   cocos2d::CCLayer * ~CCLayer()
   virtual cocos2d::CCLayer * ~CCLayer()
   virtual signed int init(void)
   virtual int onEnter(void)
   virtual int onEnterTransitionDidFinish(void)
   virtual cocos2d::CCScriptEngineManager * onExit(void)
   virtual signed int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchesBegan(cocos2d::CCSet *,cocos2d::CCEvent *)
   virtual int ccTouchesMoved(cocos2d::CCSet *,cocos2d::CCEvent *)
   virtual int ccTouchesEnded(cocos2d::CCSet *,cocos2d::CCEvent *)
   virtual int ccTouchesCancelled(cocos2d::CCSet *,cocos2d::CCEvent *)
   virtual int didAccelerate(cocos2d::CCAcceleration *)
   virtual int registerWithTouchDispatcher(void)
   virtual int registerScriptTouchHandler(int,bool,int,bool)
   virtual int unregisterScriptTouchHandler(void)
   virtual int isTouchEnabled(void)
   virtual int setTouchEnabled(bool)
   virtual int setTouchMode(cocos2d::ccTouchesMode)
   virtual int getTouchMode(void)
   virtual int setTouchPriority(int)
   virtual int getTouchPriority(void)
   virtual int isAccelerometerEnabled(void)
   virtual int setAccelerometerEnabled(bool)
   virtual int setAccelerometerInterval(double)
   virtual int isKeypadEnabled(void)
   virtual cocos2d::CCDirector * setKeypadEnabled(bool)
   virtual int isKeyboardEnabled(void)
   virtual int setKeyboardEnabled(bool)
   virtual int isMouseEnabled(void)
   virtual int setMouseEnabled(bool)
   virtual int keyBackClicked(void)
   virtual int keyMenuClicked(void)
   virtual cocos2d::CCDirector * keyDown(cocos2d::enumKeyCodes)
}
class cocos2d::CCLayerRGBA : cocos2d::CCLayer, cocos2d::CCRGBAProtocol{
   int getOpacity()
   int setOpacity(unsigned char)
   char * getDisplayedColor()
   int isOpacityModifyRGB()
   int getDisplayedOpacity()
   int setOpacityModifyRGB(bool)
   int updateDisplayedColor(cocos2d::_ccColor3B const&)
   int isCascadeColorEnabled()
   int setCascadeColorEnabled(bool)
   int updateDisplayedOpacity(unsigned char)
   int isCascadeOpacityEnabled()
   int setCascadeOpacityEnabled(bool)
   signed int init()
   char * getColor()
   void * setColor(cocos2d::_ccColor3B const&)
   cocos2d::CCLayerRGBA * CCLayerRGBA()
   cocos2d::CCLayerRGBA * ~CCLayerRGBA()
   virtual cocos2d::CCLayerRGBA * ~CCLayerRGBA()
   virtual signed int init(void)
   virtual int getOpacity(void)
   virtual int getDisplayedOpacity(void)
   virtual int setOpacity(uchar)
   virtual int updateDisplayedOpacity(uchar)
   virtual int isCascadeOpacityEnabled(void)
   virtual int setCascadeOpacityEnabled(bool)
   virtual char * getColor(void)
   virtual char * getDisplayedColor(void)
   virtual void * setColor(cocos2d::_ccColor3B const&)
   virtual int updateDisplayedColor(cocos2d::_ccColor3B const&)
   virtual int isCascadeColorEnabled(void)
   virtual int setCascadeColorEnabled(bool)
   virtual int setOpacityModifyRGB(bool)
   virtual int isOpacityModifyRGB(void)
}
class cocos2d::CCLayerColor : cocos2d::CCLayerRGBA, cocos2d::CCBlendProtocol{
   int setOpacity(unsigned char)
   int changeWidth(float)
   char * updateColor()
   int changeHeight(float)
   cocos2d::CCLayerColor * getBlendFunc()
   int setBlendFunc(cocos2d::_ccBlendFunc)
   signed int initWithColor(cocos2d::_ccColor4B const&)
   signed int initWithColor(cocos2d::_ccColor4B const&, float, float)
   signed int setContentSize(cocos2d::CCSize const&)
   int changeWidthAndHeight(float, float)
   void draw()
   signed int init()
   cocos2d::CCLayerColor * create(cocos2d::_ccColor4B const&)
   cocos2d::CCLayerColor * create(cocos2d::_ccColor4B const&, float, float)
   cocos2d::CCLayerColor * create()
   int setColor(cocos2d::_ccColor3B const&)
   cocos2d::CCLayerColor * CCLayerColor()
   cocos2d::CCLayerColor * ~CCLayerColor()
   virtual cocos2d::CCLayerColor * ~CCLayerColor()
   virtual signed int init(void)
   virtual signed int setContentSize(cocos2d::CCSize const&)
   virtual void draw(void)
   virtual int setOpacity(uchar)
   virtual int setColor(cocos2d::_ccColor3B const&)
   virtual signed int initWithColor(cocos2d::_ccColor4B const&,float,float)
   virtual signed int initWithColor(cocos2d::_ccColor4B const&)
   virtual cocos2d::CCLayerColor * getBlendFunc(void)
   virtual int setBlendFunc(cocos2d::_ccBlendFunc)
   virtual char * updateColor(void)
}
class cocos2d::CCLayerGradient : cocos2d::CCLayerColor{
   char * getEndColor()
   int setEndColor(cocos2d::_ccColor3B const&)
   float updateColor()
   int getEndOpacity()
   char * getStartColor()
   int initWithColor(cocos2d::_ccColor4B const&, cocos2d::_ccColor4B const&)
   int initWithColor(cocos2d::_ccColor4B const&, cocos2d::_ccColor4B const&, cocos2d::CCPoint const&)
   int setEndOpacity(unsigned char)
   int setStartColor(cocos2d::_ccColor3B const&)
   int getStartOpacity()
   int setStartOpacity(unsigned char)
   int isCompressedInterpolation()
   int setCompressedInterpolation(bool)
   int init()
   void * create(cocos2d::_ccColor4B const&, cocos2d::_ccColor4B const&)
   void * create(cocos2d::_ccColor4B const&, cocos2d::_ccColor4B const&, cocos2d::CCPoint const&)
   void * create()
   char * getVector()
   int setVector(cocos2d::CCPoint const&)
   cocos2d::CCLayerGradient * CCLayerGradient()
   cocos2d::CCLayerGradient * ~CCLayerGradient()
   virtual cocos2d::CCLayerGradient * ~CCLayerGradient()
   virtual int init(void)
   virtual float updateColor(void)
   virtual int initWithColor(cocos2d::_ccColor4B const&,cocos2d::_ccColor4B const&)
   virtual int initWithColor(cocos2d::_ccColor4B const&,cocos2d::_ccColor4B const&,cocos2d::CCPoint const&)
   virtual char * getStartColor(void)
   virtual int setStartColor(cocos2d::_ccColor3B const&)
   virtual char * getEndColor(void)
   virtual int setEndColor(cocos2d::_ccColor3B const&)
   virtual int getStartOpacity(void)
   virtual int setStartOpacity(uchar)
   virtual int getEndOpacity(void)
   virtual int setEndOpacity(uchar)
   virtual char * getVector(void)
   virtual int setVector(cocos2d::CCPoint const&)
   virtual int setCompressedInterpolation(bool)
   virtual int isCompressedInterpolation(void)
}
class cocos2d::CCLayerMultiplex : cocos2d::CCLayer{
   signed int initWithArray(cocos2d::CCArray*)
   signed int initWithLayers(cocos2d::CCLayer*, std::__va_list)
   cocos2d::CCLayerMultiplex * createWithArray(cocos2d::CCArray*)
   cocos2d::CCLayerMultiplex * createWithLayer(cocos2d::CCLayer*)
   int switchToAndReleaseMe(unsigned int)
   cocos2d::CCLayerMultiplex * create(cocos2d::CCLayer*, ...)
   cocos2d::CCLayerMultiplex * create()
   int addLayer(cocos2d::CCLayer*)
   int switchTo(unsigned int)
   cocos2d::CCLayerMultiplex * CCLayerMultiplex()
   cocos2d::CCLayer * ~CCLayerMultiplex()
   virtual cocos2d::CCLayer * ~CCLayerMultiplex()
}
class cocos2d::CCScene : cocos2d::CCNode{
   int getHighestChildZ()
   signed int init()
   cocos2d::CCScene * create()
   cocos2d::CCScene * CCScene()
   cocos2d::CCScene * ~CCScene()
   virtual cocos2d::CCScene * ~CCScene()
   virtual signed int init(void)
}
class cocos2d::CCTransitionPageTurn : cocos2d::CCTransitionScene{
   int sceneOrder()
   void * actionWithSize(cocos2d::CCSize const&)
   signed int initWithDuration(float, cocos2d::CCScene*, bool)
   cocos2d::CCTransitionPageTurn * create(float, cocos2d::CCScene*, bool)
   cocos2d::CCAction * onEnter()
   cocos2d::CCTransitionPageTurn * CCTransitionPageTurn()
   cocos2d::CCTransitionPageTurn * ~CCTransitionPageTurn()
   virtual cocos2d::CCTransitionPageTurn * ~CCTransitionPageTurn()
   virtual cocos2d::CCAction * onEnter(void)
   virtual int sceneOrder(void)
   virtual signed int initWithDuration(float,cocos2d::CCScene *,bool)
}
class cocos2d::CCTransitionEaseScene{
}
class cocos2d::CCTransitionScene : cocos2d::CCScene{
   int sceneOrder()
   int setNewScene(float)
   int hideOutShowIn()
   signed int initWithDuration(float, cocos2d::CCScene*)
   int draw()
   cocos2d::CCTransitionScene * create(float, cocos2d::CCScene*)
   __int64 finish()
   int onExit()
   cocos2d::CCScriptEngineManager * cleanup()
   int onEnter()
   cocos2d::CCTransitionScene * CCTransitionScene()
   cocos2d::CCTransitionScene * ~CCTransitionScene()
   virtual cocos2d::CCTransitionScene * ~CCTransitionScene()
   virtual int onEnter(void)
   virtual int onExit(void)
   virtual cocos2d::CCScriptEngineManager * cleanup(void)
   virtual int draw(void)
   virtual signed int initWithDuration(float,cocos2d::CCScene *)
   virtual int sceneOrder(void)
}
class cocos2d::CCTransitionSceneOriented : cocos2d::CCTransitionScene{
   signed int initWithDuration(float, cocos2d::CCScene*, cocos2d::tOrientation)
   cocos2d::CCTransitionSceneOriented * create(float, cocos2d::CCScene*, cocos2d::tOrientation)
   cocos2d::CCTransitionSceneOriented * CCTransitionSceneOriented()
   cocos2d::CCTransitionSceneOriented * ~CCTransitionSceneOriented()
   virtual cocos2d::CCTransitionSceneOriented * ~CCTransitionSceneOriented()
   virtual signed int initWithDuration(float,cocos2d::CCScene *,cocos2d::tOrientation)
}
class cocos2d::CCTransitionRotoZoom : cocos2d::CCTransitionScene{
   cocos2d::CCTransitionRotoZoom * create(float, cocos2d::CCScene*)
   cocos2d::CCAction * onEnter()
   cocos2d::CCTransitionRotoZoom * CCTransitionRotoZoom()
   cocos2d::CCTransitionRotoZoom * ~CCTransitionRotoZoom()
   virtual cocos2d::CCTransitionRotoZoom * ~CCTransitionRotoZoom()
   virtual cocos2d::CCAction * onEnter(void)
}
class cocos2d::CCTransitionJumpZoom : cocos2d::CCTransitionScene{
   cocos2d::CCTransitionJumpZoom * create(float, cocos2d::CCScene*)
   cocos2d::CCAction * onEnter()
   cocos2d::CCTransitionJumpZoom * CCTransitionJumpZoom()
   cocos2d::CCTransitionJumpZoom * ~CCTransitionJumpZoom()
   virtual cocos2d::CCTransitionJumpZoom * ~CCTransitionJumpZoom()
   virtual cocos2d::CCAction * onEnter(void)
}
class cocos2d::CCTransitionMoveInL : cocos2d::CCTransitionScene, cocos2d::CCTransitionEaseScene{
   int initScenes()
   void * easeActionWithAction(cocos2d::CCActionInterval*)
   void * action()
   cocos2d::CCTransitionMoveInL * create(float, cocos2d::CCScene*)
   cocos2d::CCAction * onEnter()
   cocos2d::CCTransitionMoveInL * CCTransitionMoveInL()
   cocos2d::CCTransitionMoveInL * ~CCTransitionMoveInL()
   virtual cocos2d::CCTransitionMoveInL * ~CCTransitionMoveInL()
   virtual cocos2d::CCAction * onEnter(void)
   virtual int initScenes(void)
   virtual void * action(void)
   virtual void * easeActionWithAction(cocos2d::CCActionInterval *)
}
class cocos2d::CCTransitionMoveInR : cocos2d::CCTransitionMoveInL{
   int initScenes()
   cocos2d::CCTransitionMoveInR * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionMoveInR * CCTransitionMoveInR()
   cocos2d::CCTransitionMoveInR * ~CCTransitionMoveInR()
   virtual cocos2d::CCTransitionMoveInR * ~CCTransitionMoveInR()
   virtual int initScenes(void)
}
class cocos2d::CCTransitionMoveInT : cocos2d::CCTransitionMoveInL{
   int initScenes()
   cocos2d::CCTransitionMoveInT * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionMoveInT * CCTransitionMoveInT()
   cocos2d::CCTransitionMoveInT * ~CCTransitionMoveInT()
   virtual cocos2d::CCTransitionMoveInT * ~CCTransitionMoveInT()
   virtual int initScenes(void)
}
class cocos2d::CCTransitionMoveInB : cocos2d::CCTransitionMoveInL{
   int initScenes()
   cocos2d::CCTransitionMoveInB * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionMoveInB * CCTransitionMoveInB()
   cocos2d::CCTransitionMoveInB * ~CCTransitionMoveInB()
   virtual cocos2d::CCTransitionMoveInB * ~CCTransitionMoveInB()
   virtual int initScenes(void)
}
class cocos2d::CCTransitionSlideInL : cocos2d::CCTransitionScene, cocos2d::CCTransitionEaseScene{
   int initScenes()
   int sceneOrder()
   void * easeActionWithAction(cocos2d::CCActionInterval*)
   void * action()
   cocos2d::CCTransitionSlideInL * create(float, cocos2d::CCScene*)
   cocos2d::CCAction * onEnter()
   cocos2d::CCTransitionSlideInL * CCTransitionSlideInL()
   cocos2d::CCTransitionSlideInL * ~CCTransitionSlideInL()
   virtual cocos2d::CCTransitionSlideInL * ~CCTransitionSlideInL()
   virtual cocos2d::CCAction * onEnter(void)
   virtual int sceneOrder(void)
   virtual int initScenes(void)
   virtual void * action(void)
   virtual void * easeActionWithAction(cocos2d::CCActionInterval *)
}
class cocos2d::CCTransitionSlideInR : cocos2d::CCTransitionSlideInL{
   int initScenes()
   int sceneOrder()
   void * action()
   cocos2d::CCTransitionSlideInR * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionSlideInR * CCTransitionSlideInR()
   cocos2d::CCTransitionSlideInR * ~CCTransitionSlideInR()
   virtual cocos2d::CCTransitionSlideInR * ~CCTransitionSlideInR()
   virtual int sceneOrder(void)
   virtual int initScenes(void)
   virtual void * action(void)
}
class cocos2d::CCTransitionSlideInB : cocos2d::CCTransitionSlideInL{
   int initScenes()
   int sceneOrder()
   void * action()
   cocos2d::CCTransitionSlideInB * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionSlideInB * CCTransitionSlideInB()
   cocos2d::CCTransitionSlideInB * ~CCTransitionSlideInB()
   virtual cocos2d::CCTransitionSlideInB * ~CCTransitionSlideInB()
   virtual int sceneOrder(void)
   virtual int initScenes(void)
   virtual void * action(void)
}
class cocos2d::CCTransitionSlideInT : cocos2d::CCTransitionSlideInL{
   int initScenes()
   int sceneOrder()
   void * action()
   cocos2d::CCTransitionSlideInT * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionSlideInT * CCTransitionSlideInT()
   cocos2d::CCTransitionSlideInT * ~CCTransitionSlideInT()
   virtual cocos2d::CCTransitionSlideInT * ~CCTransitionSlideInT()
   virtual int sceneOrder(void)
   virtual int initScenes(void)
   virtual void * action(void)
}
class cocos2d::CCTransitionShrinkGrow : cocos2d::CCTransitionScene, cocos2d::CCTransitionEaseScene{
   void * easeActionWithAction(cocos2d::CCActionInterval*)
   cocos2d::CCTransitionShrinkGrow * create(float, cocos2d::CCScene*)
   cocos2d::CCAction * onEnter()
   cocos2d::CCTransitionShrinkGrow * CCTransitionShrinkGrow()
   cocos2d::CCTransitionShrinkGrow * ~CCTransitionShrinkGrow()
   virtual cocos2d::CCTransitionShrinkGrow * ~CCTransitionShrinkGrow()
   virtual cocos2d::CCAction * onEnter(void)
   virtual void * easeActionWithAction(cocos2d::CCActionInterval *)
}
class cocos2d::CCTransitionFlipX : cocos2d::CCTransitionSceneOriented{
   cocos2d::CCTransitionFlipX * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionFlipX * create(float, cocos2d::CCScene*, cocos2d::tOrientation)
   cocos2d::CCAction * onEnter()
   cocos2d::CCTransitionFlipX * CCTransitionFlipX()
   cocos2d::CCTransitionFlipX * ~CCTransitionFlipX()
   virtual cocos2d::CCTransitionFlipX * ~CCTransitionFlipX()
   virtual cocos2d::CCAction * onEnter(void)
}
class cocos2d::CCTransitionFlipY : cocos2d::CCTransitionSceneOriented{
   cocos2d::CCTransitionFlipY * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionFlipY * create(float, cocos2d::CCScene*, cocos2d::tOrientation)
   cocos2d::CCAction * onEnter()
   cocos2d::CCTransitionFlipY * CCTransitionFlipY()
   cocos2d::CCTransitionFlipY * ~CCTransitionFlipY()
   virtual cocos2d::CCTransitionFlipY * ~CCTransitionFlipY()
   virtual cocos2d::CCAction * onEnter(void)
}
class cocos2d::CCTransitionFlipAngular : cocos2d::CCTransitionSceneOriented{
   cocos2d::CCTransitionFlipAngular * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionFlipAngular * create(float, cocos2d::CCScene*, cocos2d::tOrientation)
   cocos2d::CCAction * onEnter()
   cocos2d::CCTransitionFlipAngular * CCTransitionFlipAngular()
   cocos2d::CCTransitionFlipAngular * ~CCTransitionFlipAngular()
   virtual cocos2d::CCTransitionFlipAngular * ~CCTransitionFlipAngular()
   virtual cocos2d::CCAction * onEnter(void)
}
class cocos2d::CCTransitionZoomFlipX : cocos2d::CCTransitionSceneOriented{
   cocos2d::CCTransitionZoomFlipX * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionZoomFlipX * create(float, cocos2d::CCScene*, cocos2d::tOrientation)
   cocos2d::CCAction * onEnter()
   cocos2d::CCTransitionZoomFlipX * CCTransitionZoomFlipX()
   cocos2d::CCTransitionZoomFlipX * ~CCTransitionZoomFlipX()
   virtual cocos2d::CCTransitionZoomFlipX * ~CCTransitionZoomFlipX()
   virtual cocos2d::CCAction * onEnter(void)
}
class cocos2d::CCTransitionZoomFlipY : cocos2d::CCTransitionSceneOriented{
   cocos2d::CCTransitionZoomFlipY * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionZoomFlipY * create(float, cocos2d::CCScene*, cocos2d::tOrientation)
   cocos2d::CCAction * onEnter()
   cocos2d::CCTransitionZoomFlipY * CCTransitionZoomFlipY()
   cocos2d::CCTransitionZoomFlipY * ~CCTransitionZoomFlipY()
   virtual cocos2d::CCTransitionZoomFlipY * ~CCTransitionZoomFlipY()
   virtual cocos2d::CCAction * onEnter(void)
}
class cocos2d::CCTransitionZoomFlipAngular : cocos2d::CCTransitionSceneOriented{
   cocos2d::CCTransitionZoomFlipAngular * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionZoomFlipAngular * create(float, cocos2d::CCScene*, cocos2d::tOrientation)
   cocos2d::CCAction * onEnter()
   cocos2d::CCTransitionZoomFlipAngular * CCTransitionZoomFlipAngular()
   cocos2d::CCTransitionZoomFlipAngular * ~CCTransitionZoomFlipAngular()
   virtual cocos2d::CCTransitionZoomFlipAngular * ~CCTransitionZoomFlipAngular()
   virtual cocos2d::CCAction * onEnter(void)
}
class cocos2d::CCTransitionFade : cocos2d::CCTransitionScene{
   signed int initWithDuration(float, cocos2d::CCScene*)
   signed int initWithDuration(float, cocos2d::CCScene*, cocos2d::_ccColor3B const&)
   cocos2d::CCTransitionFade * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionFade * create(float, cocos2d::CCScene*, cocos2d::_ccColor3B const&)
   int onExit()
   cocos2d::CCAction * onEnter()
   cocos2d::CCTransitionFade * CCTransitionFade()
   cocos2d::CCTransitionFade * ~CCTransitionFade()
   virtual cocos2d::CCTransitionFade * ~CCTransitionFade()
   virtual cocos2d::CCAction * onEnter(void)
   virtual int onExit(void)
   virtual signed int initWithDuration(float,cocos2d::CCScene *)
   virtual signed int initWithDuration(float,cocos2d::CCScene *,cocos2d::_ccColor3B const&)
}
class cocos2d::CCTransitionCrossFade : cocos2d::CCTransitionScene{
    draw()
   cocos2d::CCTransitionCrossFade * create(float, cocos2d::CCScene*)
   int onExit()
   cocos2d::CCRenderTexture * onEnter()
   cocos2d::CCTransitionCrossFade * CCTransitionCrossFade()
   cocos2d::CCTransitionCrossFade * ~CCTransitionCrossFade()
   virtual cocos2d::CCTransitionCrossFade * ~CCTransitionCrossFade()
   virtual cocos2d::CCRenderTexture * onEnter(void)
   virtual int onExit(void)
   virtual  draw(void)
}
class cocos2d::CCTransitionTurnOffTiles : cocos2d::CCTransitionScene, cocos2d::CCTransitionEaseScene{
   int sceneOrder()
   cocos2d::CCActionInterval * easeActionWithAction(cocos2d::CCActionInterval*)
   cocos2d::CCTransitionTurnOffTiles * create(float, cocos2d::CCScene*)
   cocos2d::CCAction * onEnter()
   cocos2d::CCTransitionTurnOffTiles * CCTransitionTurnOffTiles()
   cocos2d::CCTransitionTurnOffTiles * ~CCTransitionTurnOffTiles()
   virtual cocos2d::CCTransitionTurnOffTiles * ~CCTransitionTurnOffTiles()
   virtual cocos2d::CCAction * onEnter(void)
   virtual int sceneOrder(void)
   virtual cocos2d::CCActionInterval * easeActionWithAction(cocos2d::CCActionInterval *)
}
class cocos2d::CCTransitionSplitCols : cocos2d::CCTransitionScene, cocos2d::CCTransitionEaseScene{
   void * easeActionWithAction(cocos2d::CCActionInterval*)
   void * action()
   cocos2d::CCTransitionSplitCols * create(float, cocos2d::CCScene*)
   cocos2d::CCAction * onEnter()
   cocos2d::CCTransitionSplitCols * CCTransitionSplitCols()
   cocos2d::CCTransitionSplitCols * ~CCTransitionSplitCols()
   virtual cocos2d::CCTransitionSplitCols * ~CCTransitionSplitCols()
   virtual cocos2d::CCAction * onEnter(void)
   virtual void * action(void)
   virtual void * easeActionWithAction(cocos2d::CCActionInterval *)
}
class cocos2d::CCTransitionSplitRows : cocos2d::CCTransitionSplitCols{
   void * action()
   cocos2d::CCTransitionSplitRows * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionSplitRows * CCTransitionSplitRows()
   cocos2d::CCTransitionSplitRows * ~CCTransitionSplitRows()
   virtual cocos2d::CCTransitionSplitRows * ~CCTransitionSplitRows()
   virtual void * action(void)
}
class cocos2d::CCTransitionFadeTR : cocos2d::CCTransitionScene, cocos2d::CCTransitionEaseScene{
   int sceneOrder()
   void * actionWithSize(cocos2d::CCSize const&)
   cocos2d::CCActionInterval * easeActionWithAction(cocos2d::CCActionInterval*)
   cocos2d::CCTransitionFadeTR * create(float, cocos2d::CCScene*)
   cocos2d::CCAction * onEnter()
   cocos2d::CCTransitionFadeTR * CCTransitionFadeTR()
   cocos2d::CCTransitionFadeTR * ~CCTransitionFadeTR()
   virtual cocos2d::CCTransitionFadeTR * ~CCTransitionFadeTR()
   virtual cocos2d::CCAction * onEnter(void)
   virtual int sceneOrder(void)
   virtual void * actionWithSize(cocos2d::CCSize const&)
   virtual cocos2d::CCActionInterval * easeActionWithAction(cocos2d::CCActionInterval *)
}
class cocos2d::CCTransitionFadeBL : cocos2d::CCTransitionFadeTR{
   void * actionWithSize(cocos2d::CCSize const&)
   cocos2d::CCTransitionFadeBL * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionFadeBL * CCTransitionFadeBL()
   cocos2d::CCTransitionFadeBL * ~CCTransitionFadeBL()
   virtual cocos2d::CCTransitionFadeBL * ~CCTransitionFadeBL()
   virtual void * actionWithSize(cocos2d::CCSize const&)
}
class cocos2d::CCTransitionFadeUp : cocos2d::CCTransitionFadeTR{
   void * actionWithSize(cocos2d::CCSize const&)
   cocos2d::CCTransitionFadeUp * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionFadeUp * CCTransitionFadeUp()
   cocos2d::CCTransitionFadeUp * ~CCTransitionFadeUp()
   virtual cocos2d::CCTransitionFadeUp * ~CCTransitionFadeUp()
   virtual void * actionWithSize(cocos2d::CCSize const&)
}
class cocos2d::CCTransitionFadeDown : cocos2d::CCTransitionFadeTR{
   void * actionWithSize(cocos2d::CCSize const&)
   cocos2d::CCTransitionFadeDown * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionFadeDown * CCTransitionFadeDown()
   cocos2d::CCTransitionFadeDown * ~CCTransitionFadeDown()
   virtual cocos2d::CCTransitionFadeDown * ~CCTransitionFadeDown()
   virtual void * actionWithSize(cocos2d::CCSize const&)
}
class cocos2d::CCTransitionProgress : cocos2d::CCTransitionScene{
   int sceneOrder()
   int setupTransition()
   int progressTimerNodeWithRenderTexture(cocos2d::CCRenderTexture*)
   cocos2d::CCTransitionProgress * create(float, cocos2d::CCScene*)
   int onExit()
   int onEnter()
   cocos2d::CCTransitionProgress * CCTransitionProgress()
   cocos2d::CCTransitionProgress * ~CCTransitionProgress()
   virtual cocos2d::CCTransitionProgress * ~CCTransitionProgress()
   virtual int onEnter(void)
   virtual int onExit(void)
   virtual int sceneOrder(void)
   virtual int progressTimerNodeWithRenderTexture(cocos2d::CCRenderTexture *)
   virtual int setupTransition(void)
}
class cocos2d::CCTransitionProgressRadialCCW : cocos2d::CCTransitionProgress{
   cocos2d::CCProgressTimer * progressTimerNodeWithRenderTexture(cocos2d::CCRenderTexture*)
   void * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionProgressRadialCCW * ~CCTransitionProgressRadialCCW()
   virtual cocos2d::CCTransitionProgressRadialCCW * ~CCTransitionProgressRadialCCW()
   virtual cocos2d::CCProgressTimer * progressTimerNodeWithRenderTexture(cocos2d::CCRenderTexture *)
}
class cocos2d::CCTransitionProgressRadialCW : cocos2d::CCTransitionProgress{
   cocos2d::CCProgressTimer * progressTimerNodeWithRenderTexture(cocos2d::CCRenderTexture*)
   void * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionProgressRadialCW * ~CCTransitionProgressRadialCW()
   virtual cocos2d::CCTransitionProgressRadialCW * ~CCTransitionProgressRadialCW()
   virtual cocos2d::CCProgressTimer * progressTimerNodeWithRenderTexture(cocos2d::CCRenderTexture *)
}
class cocos2d::CCTransitionProgressHorizontal : cocos2d::CCTransitionProgress{
   cocos2d::CCProgressTimer * progressTimerNodeWithRenderTexture(cocos2d::CCRenderTexture*)
   void * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionProgressHorizontal * ~CCTransitionProgressHorizontal()
   virtual cocos2d::CCTransitionProgressHorizontal * ~CCTransitionProgressHorizontal()
   virtual cocos2d::CCProgressTimer * progressTimerNodeWithRenderTexture(cocos2d::CCRenderTexture *)
}
class cocos2d::CCTransitionProgressVertical : cocos2d::CCTransitionProgress{
   cocos2d::CCProgressTimer * progressTimerNodeWithRenderTexture(cocos2d::CCRenderTexture*)
   void * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionProgressVertical * ~CCTransitionProgressVertical()
   virtual cocos2d::CCTransitionProgressVertical * ~CCTransitionProgressVertical()
   virtual cocos2d::CCProgressTimer * progressTimerNodeWithRenderTexture(cocos2d::CCRenderTexture *)
}
class cocos2d::CCTransitionProgressInOut : cocos2d::CCTransitionProgress{
   int sceneOrder()
   int setupTransition()
   cocos2d::CCProgressTimer * progressTimerNodeWithRenderTexture(cocos2d::CCRenderTexture*)
   void * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionProgressInOut * ~CCTransitionProgressInOut()
   virtual cocos2d::CCTransitionProgressInOut * ~CCTransitionProgressInOut()
   virtual int sceneOrder(void)
   virtual cocos2d::CCProgressTimer * progressTimerNodeWithRenderTexture(cocos2d::CCRenderTexture *)
   virtual int setupTransition(void)
}
class cocos2d::CCTransitionProgressOutIn : cocos2d::CCTransitionProgress{
   cocos2d::CCProgressTimer * progressTimerNodeWithRenderTexture(cocos2d::CCRenderTexture*)
   void * create(float, cocos2d::CCScene*)
   cocos2d::CCTransitionProgressOutIn * ~CCTransitionProgressOutIn()
   virtual cocos2d::CCTransitionProgressOutIn * ~CCTransitionProgressOutIn()
   virtual cocos2d::CCProgressTimer * progressTimerNodeWithRenderTexture(cocos2d::CCRenderTexture *)
}
class cocos2d::CCMenu : cocos2d::CCLayerRGBA{
   int setEnabled(bool)
   int * removeChild(cocos2d::CCNode*, bool)
   int ccTouchBegan(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchEnded(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int ccTouchMoved(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int itemForTouch(cocos2d::CCTouch*)
   signed int initWithArray(cocos2d::CCArray*)
   cocos2d::CCLayerRGBA * createWithItem(cocos2d::CCMenuItem*)
   cocos2d::CCLayerRGBA * createWithArray(cocos2d::CCArray*)
   cocos2d::CCLayerRGBA * createWithItems(cocos2d::CCMenuItem*, std::__va_list)
   void alignItemsInRows(unsigned int, std::__va_list)
   void alignItemsInRows(unsigned int, ...)
   int ccTouchCancelled(cocos2d::CCTouch*, cocos2d::CCEvent*)
   int isOpacityModifyRGB()
   char * setHandlerPriority(int)
   void alignItemsInColumns(unsigned int, std::__va_list)
   void alignItemsInColumns(unsigned int, ...)
   int setOpacityModifyRGB(bool)
   cocos2d::CCArray * alignItemsVertically()
   cocos2d::CCArray * alignItemsHorizontally()
   void alignItemsInRowsWithArray(cocos2d::CCArray*)
   int registerWithTouchDispatcher()
   void alignItemsInColumnsWithArray(cocos2d::CCArray*)
   cocos2d::CCArray * alignItemsVerticallyWithPadding(float)
   cocos2d::CCArray * alignItemsHorizontallyWithPadding(float)
   signed int init()
   cocos2d::CCLayerRGBA * create(cocos2d::CCMenuItem*, ...)
   cocos2d::CCLayerRGBA * create()
   cocos2d::CCScriptEngineManager * onExit()
    addChild(cocos2d::CCNode*)
    addChild(cocos2d::CCNode*, int)
    addChild(cocos2d::CCNode*, int, int)
   int isEnabled()
   cocos2d::CCMenu * ~CCMenu()
   virtual cocos2d::CCMenu * ~CCMenu()
   virtual signed int init(void)
   virtual  addChild(cocos2d::CCNode *)
   virtual  addChild(cocos2d::CCNode *,int)
   virtual  addChild(cocos2d::CCNode *,int,int)
   virtual int * removeChild(cocos2d::CCNode *,bool)
   virtual cocos2d::CCScriptEngineManager * onExit(void)
   virtual int ccTouchBegan(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchMoved(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchEnded(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int ccTouchCancelled(cocos2d::CCTouch *,cocos2d::CCEvent *)
   virtual int registerWithTouchDispatcher(void)
   virtual int setOpacityModifyRGB(bool)
   virtual int isOpacityModifyRGB(void)
   virtual int isEnabled(void)
   virtual int setEnabled(bool)
}
class cocos2d::CCMenuItemAtlasFont : cocos2d::CCMenuItemLabel{
   signed int initWithString(char const*, char const*, int, int, char, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   cocos2d::CCMenuItemLabel * create(char const*, char const*, int, int, char)
   cocos2d::CCMenuItemLabel * create(char const*, char const*, int, int, char, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   cocos2d::CCMenuItemAtlasFont * ~CCMenuItemAtlasFont()
   virtual cocos2d::CCMenuItemAtlasFont * ~CCMenuItemAtlasFont()
}
class cocos2d::CCMenuItemFont : cocos2d::CCMenuItemLabel{
   int fontNameObj()
   int fontSizeObj()
   int * setFontName(char const*)
   int setFontSize(unsigned int)
   int recreateLabel()
   signed int initWithString(char const*, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   int setFontNameObj(char const*)
   int setFontSizeObj(unsigned int)
   cocos2d::CCMenuItemLabel * create(char const*)
   cocos2d::CCMenuItemLabel * create(char const*, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   int fontName()
   int fontSize()
   cocos2d::CCMenuItemLabel * ~CCMenuItemFont()
   virtual cocos2d::CCMenuItemLabel * ~CCMenuItemFont()
}
class cocos2d::CCMenuItem : cocos2d::CCNodeRGBA{
   int isSelected()
   int setEnabled(bool)
   int unselected()
   signed int initWithTarget(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   int registerScriptTapHandler(int)
   int unregisterScriptTapHandler()
   cocos2d::CCMenuItem * rect()
   cocos2d::CCNodeRGBA * create(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   cocos2d::CCNodeRGBA * create()
   int activate()
   int selected()
   int isEnabled()
   int setTarget(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   cocos2d::CCNodeRGBA * ~CCMenuItem()
   virtual cocos2d::CCNodeRGBA * ~CCMenuItem()
   virtual int activate(void)
   virtual int selected(void)
   virtual int unselected(void)
   virtual int registerScriptTapHandler(int)
   virtual int unregisterScriptTapHandler(void)
   virtual int isEnabled(void)
   virtual int setEnabled(bool)
   virtual int isSelected(void)
}
class cocos2d::CCMenuItemLabel : cocos2d::CCMenuItem{
   int setEnabled(bool)
   int unselected()
   signed int initWithLabel(cocos2d::CCNode*, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   char * getDisabledColor()
   void * setDisabledColor(cocos2d::_ccColor3B const&)
   cocos2d::CCMenuItemLabel * create(cocos2d::CCNode*)
   cocos2d::CCMenuItemLabel * create(cocos2d::CCNode*, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   int activate()
   int getLabel()
   int selected()
   int setLabel(cocos2d::CCNode*)
   int setString(char const*)
   cocos2d::CCMenuItemLabel * CCMenuItemLabel()
   cocos2d::CCMenuItemLabel * ~CCMenuItemLabel()
   virtual cocos2d::CCMenuItemLabel * ~CCMenuItemLabel()
   virtual int activate(void)
   virtual int selected(void)
   virtual int unselected(void)
   virtual int setEnabled(bool)
   virtual char * getDisabledColor(void)
   virtual void * setDisabledColor(cocos2d::_ccColor3B const&)
   virtual int getLabel(void)
   virtual int setLabel(cocos2d::CCNode *)
}
class cocos2d::CCMenuItemSprite : cocos2d::CCMenuItem{
   int setEnabled(bool)
   int unselected()
   int getNormalImage()
   int setNormalImage(cocos2d::CCNode*)
   int getDisabledImage()
   int getSelectedImage()
   int setDisabledImage(cocos2d::CCNode*)
   int setSelectedImage(cocos2d::CCNode*)
   signed int initWithNormalSprite(cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   int updateImagesVisibility()
   cocos2d::CCNodeRGBA * create(cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   cocos2d::CCNodeRGBA * create(cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCNode*)
   cocos2d::CCNodeRGBA * create(cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   int selected()
   cocos2d::CCMenuItemSprite * ~CCMenuItemSprite()
   virtual cocos2d::CCMenuItemSprite * ~CCMenuItemSprite()
   virtual int selected(void)
   virtual int unselected(void)
   virtual int setEnabled(bool)
   virtual int getNormalImage(void)
   virtual int setNormalImage(cocos2d::CCNode *)
   virtual int getSelectedImage(void)
   virtual int setSelectedImage(cocos2d::CCNode *)
   virtual int getDisabledImage(void)
   virtual int setDisabledImage(cocos2d::CCNode *)
   virtual int updateImagesVisibility(void)
}
class cocos2d::CCMenuItemImage : cocos2d::CCMenuItemSprite{
   signed int initWithNormalImage(char const*, char const*, char const*, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   int setNormalSpriteFrame(cocos2d::CCSpriteFrame*)
   int setDisabledSpriteFrame(cocos2d::CCSpriteFrame*)
   int setSelectedSpriteFrame(cocos2d::CCSpriteFrame*)
   signed int init()
   cocos2d::CCMenuItemImage * create(char const*, char const*)
   cocos2d::CCMenuItemImage * create(char const*, char const*, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   cocos2d::CCMenuItemImage * create(char const*, char const*, char const*)
   cocos2d::CCMenuItemImage * create(char const*, char const*, char const*, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   cocos2d::CCMenuItemImage * create()
   cocos2d::CCMenuItemImage * CCMenuItemImage()
   cocos2d::CCMenuItemImage * ~CCMenuItemImage()
   virtual cocos2d::CCMenuItemImage * ~CCMenuItemImage()
   virtual signed int init(void)
}
class cocos2d::CCMenuItemToggle : cocos2d::CCMenuItem{
   int addSubItem(cocos2d::CCMenuItem*)
   int setEnabled(bool)
   int unselected()
   int getSubItems()
   int setSubItems(cocos2d::CCArray*)
   signed int initWithItem(cocos2d::CCMenuItem*)
   int selectedItem()
   signed int initWithTarget(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), cocos2d::CCMenuItem*, std::__va_list)
   void * createWithTarget(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), cocos2d::CCMenuItem*, ...)
   void * createWithTarget(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), cocos2d::CCArray*)
   int getSelectedIndex()
   void setSelectedIndex(unsigned int)
   void * create(cocos2d::CCMenuItem*)
   void * create()
   int activate()
   int selected()
   cocos2d::CCMenuItemToggle * CCMenuItemToggle()
   cocos2d::CCMenuItem * ~CCMenuItemToggle()
   virtual cocos2d::CCMenuItem * ~CCMenuItemToggle()
   virtual int activate(void)
   virtual int selected(void)
   virtual int unselected(void)
   virtual int setEnabled(bool)
   virtual int getSelectedIndex(void)
   virtual void setSelectedIndex(uint)
   virtual int getSubItems(void)
   virtual int setSubItems(cocos2d::CCArray *)
}
class cocos2d::CCClippingNode : cocos2d::CCNode{
   int setStencil(cocos2d::CCNode*)
   int setInverted(bool)
   int setAlphaThreshold(float)
   int onExitTransitionDidStart()
   int onEnterTransitionDidFinish()
   int init(cocos2d::CCNode*)
   int init()
   void visit()
   cocos2d::CCClippingNode * create(cocos2d::CCNode*)
   cocos2d::CCClippingNode * create()
   cocos2d::CCScriptEngineManager * onExit()
   int onEnter()
   cocos2d::CCClippingNode * CCClippingNode()
   cocos2d::CCNode * ~CCClippingNode()
   int getStencil() const
   int isInverted() const
   int getAlphaThreshold() const
   virtual cocos2d::CCNode * ~CCClippingNode()
   virtual int init(void)
   virtual int onEnter(void)
   virtual int onEnterTransitionDidFinish(void)
   virtual cocos2d::CCScriptEngineManager * onExit(void)
   virtual int onExitTransitionDidStart(void)
   virtual void visit(void)
   virtual int init(cocos2d::CCNode *)
}
class cocos2d::CCMotionStreak : cocos2d::CCNodeRGBA, cocos2d::CCTextureProtocol{
   int getOpacity()
   int getTexture()
   int setOpacity(unsigned char)
   int setTexture(cocos2d::CCTexture2D*)
   int stopStroke()
   int setPosition(cocos2d::CCPoint const&)
   cocos2d::CCMotionStreak * getBlendFunc()
   signed int initWithFade(float, float, float, cocos2d::_ccColor3B const&, char const*)
   signed int initWithFade(float, float, float, cocos2d::_ccColor3B const&, cocos2d::CCTexture2D*)
   int resumeStroke()
   int setBlendFunc(cocos2d::_ccBlendFunc)
   void * tintWithColor(cocos2d::_ccColor3B)
   cocos2d::VolatileTexture * enableRepeatMode(float)
   int isOpacityModifyRGB()
   int setOpacityModifyRGB(bool)
   int draw()
   int reset()
   cocos2d::CCMotionStreak * create(float, float, float, cocos2d::_ccColor3B const&, char const*)
   cocos2d::CCMotionStreak * create(float, float, float, cocos2d::_ccColor3B const&, cocos2d::CCTexture2D*)
   int update(float)
   int setStroke(float)
   cocos2d::CCMotionStreak * CCMotionStreak()
   cocos2d::CCMotionStreak * ~CCMotionStreak()
   virtual cocos2d::CCMotionStreak * ~CCMotionStreak()
   virtual int update(float)
   virtual int setPosition(cocos2d::CCPoint const&)
   virtual int draw(void)
   virtual int getOpacity(void)
   virtual int setOpacity(uchar)
   virtual int setOpacityModifyRGB(bool)
   virtual int isOpacityModifyRGB(void)
   virtual int getTexture(void)
   virtual int setTexture(cocos2d::CCTexture2D *)
   virtual int setBlendFunc(cocos2d::_ccBlendFunc)
   virtual cocos2d::CCMotionStreak * getBlendFunc(void)
}
class cocos2d::CCProgressTimer : cocos2d::CCNodeRGBA{
   int setOpacity(unsigned char)
   cocos2d::CCProgressTimer * getMidpoint()
   int setMidpoint(cocos2d::CCPoint)
   int updateColor()
   int updateRadial()
   int setPercentage(float)
   signed int initWithSprite(cocos2d::CCSprite*)
   int setAnchorPoint(cocos2d::CCPoint)
   int updateProgress()
   cocos2d::CCProgressTimer * boundaryTexCoord(char)
   void setReverseProgress(bool)
   int vertexFromAlphaPoint(cocos2d::CCPoint)
   int textureCoordFromAlphaPoint(cocos2d::CCPoint)
   void draw()
   cocos2d::CCProgressTimer * create(cocos2d::CCSprite*)
   void setType(cocos2d::CCProgressTimerType)
   int setColor(cocos2d::_ccColor3B const&)
   void setSprite(cocos2d::CCSprite*)
   int updateBar()
   cocos2d::CCProgressTimer * CCProgressTimer()
   cocos2d::CCProgressTimer * ~CCProgressTimer()
   int getOpacity() const
   int getColor() const
   virtual cocos2d::CCProgressTimer * ~CCProgressTimer()
   virtual void draw(void)
   virtual int setOpacity(uchar)
   virtual int setColor(cocos2d::_ccColor3B const&)
   virtual int getColor(void)
   virtual int getOpacity(void)
   virtual cocos2d::CCProgressTimer * getMidpoint(void)
   virtual int setMidpoint(cocos2d::CCPoint)
}
class cocos2d::CCRenderTexture : cocos2d::CCNode{
   int clearDepth(float)
   cocos2d::CCImage * newCCImage(bool)
   const char * saveToFile(char const*)
   const char * saveToFile(char const*, cocos2d::eImageFormat)
   int setAutoDraw(bool)
   void clearStencil(int)
   int setClearColor(cocos2d::_ccColor4F const&)
   int setClearDepth(float)
   int setClearFlags(unsigned int)
   void beginWithClear(float, float, float, float)
   void beginWithClear(float, float, float, float, float)
   void beginWithClear(float, float, float, float, float, int)
   void beginWithClear(float, float, float, float, float, int, unsigned int)
   void setClearStencil(float)
   int listenToBackground(cocos2d::CCObject*)
   int listenToForeground(cocos2d::CCObject*)
   cocos2d::CCTexture2D * initWithWidthAndHeight(int, int, cocos2d::CCTexture2DPixelFormat)
   cocos2d::CCTexture2D * initWithWidthAndHeight(int, int, cocos2d::CCTexture2DPixelFormat, unsigned int)
   int end()
   int draw()
   _DWORD * begin()
   int clear(float, float, float, float)
   int visit()
   cocos2d::CCRenderTexture * create(int, int)
   cocos2d::CCRenderTexture * create(int, int, cocos2d::CCTexture2DPixelFormat)
   cocos2d::CCRenderTexture * create(int, int, cocos2d::CCTexture2DPixelFormat, unsigned int)
   int getSprite()
   int setSprite(cocos2d::CCSprite*)
   cocos2d::CCRenderTexture * CCRenderTexture()
   cocos2d::CCRenderTexture * ~CCRenderTexture()
   int isAutoDraw() const
   char * getClearColor() const
   int getClearDepth() const
   int getClearFlags() const
   int getClearStencil() const
   virtual cocos2d::CCRenderTexture * ~CCRenderTexture()
   virtual int draw(void)
   virtual int visit(void)
   virtual int getSprite(void)
   virtual int setSprite(cocos2d::CCSprite *)
}
class cocos2d::CCParticleFire : cocos2d::CCParticleSystemQuad{
   void * initWithTotalParticles(unsigned int)
   cocos2d::CCParticleSystemQuad * createWithTotalParticles(unsigned int)
   int init()
   cocos2d::CCParticleSystemQuad * create()
   cocos2d::CCParticleFire * ~CCParticleFire()
   virtual cocos2d::CCParticleFire * ~CCParticleFire()
   virtual int init(void)
   virtual void * initWithTotalParticles(uint)
}
class cocos2d::CCParticleFireworks : cocos2d::CCParticleSystemQuad{
   void * initWithTotalParticles(unsigned int)
   cocos2d::CCParticleSystemQuad * createWithTotalParticles(unsigned int)
   int init()
   cocos2d::CCParticleSystemQuad * create()
   cocos2d::CCParticleFireworks * ~CCParticleFireworks()
   virtual cocos2d::CCParticleFireworks * ~CCParticleFireworks()
   virtual int init(void)
   virtual void * initWithTotalParticles(uint)
}
class cocos2d::CCParticleSun : cocos2d::CCParticleSystemQuad{
   void * initWithTotalParticles(unsigned int)
   cocos2d::CCParticleSystemQuad * createWithTotalParticles(unsigned int)
   int init()
   cocos2d::CCParticleSystemQuad * create()
   cocos2d::CCParticleSun * ~CCParticleSun()
   virtual cocos2d::CCParticleSun * ~CCParticleSun()
   virtual int init(void)
   virtual void * initWithTotalParticles(uint)
}
class cocos2d::CCParticleGalaxy : cocos2d::CCParticleSystemQuad{
   void * initWithTotalParticles(unsigned int)
   cocos2d::CCParticleSystemQuad * createWithTotalParticles(unsigned int)
   int init()
   cocos2d::CCParticleSystemQuad * create()
   cocos2d::CCParticleGalaxy * ~CCParticleGalaxy()
   virtual cocos2d::CCParticleGalaxy * ~CCParticleGalaxy()
   virtual int init(void)
   virtual void * initWithTotalParticles(uint)
}
class cocos2d::CCParticleFlower : cocos2d::CCParticleSystemQuad{
   void * initWithTotalParticles(unsigned int)
   cocos2d::CCParticleSystemQuad * createWithTotalParticles(unsigned int)
   int init()
   cocos2d::CCParticleSystemQuad * create()
   cocos2d::CCParticleFlower * ~CCParticleFlower()
   virtual cocos2d::CCParticleFlower * ~CCParticleFlower()
   virtual int init(void)
   virtual void * initWithTotalParticles(uint)
}
class cocos2d::CCParticleMeteor : cocos2d::CCParticleSystemQuad{
   void * initWithTotalParticles(unsigned int)
   cocos2d::CCParticleSystemQuad * createWithTotalParticles(unsigned int)
   int init()
   cocos2d::CCParticleSystemQuad * create()
   cocos2d::CCParticleMeteor * ~CCParticleMeteor()
   virtual cocos2d::CCParticleMeteor * ~CCParticleMeteor()
   virtual int init(void)
   virtual void * initWithTotalParticles(uint)
}
class cocos2d::CCParticleSpiral : cocos2d::CCParticleSystemQuad{
   void * initWithTotalParticles(unsigned int)
   cocos2d::CCParticleSystemQuad * createWithTotalParticles(unsigned int)
   int init()
   cocos2d::CCParticleSystemQuad * create()
   cocos2d::CCParticleSpiral * ~CCParticleSpiral()
   virtual cocos2d::CCParticleSpiral * ~CCParticleSpiral()
   virtual int init(void)
   virtual void * initWithTotalParticles(uint)
}
class cocos2d::CCParticleExplosion : cocos2d::CCParticleSystemQuad{
   void * initWithTotalParticles(unsigned int)
   cocos2d::CCParticleSystemQuad * createWithTotalParticles(unsigned int)
   int init()
   cocos2d::CCParticleSystemQuad * create()
   cocos2d::CCParticleExplosion * ~CCParticleExplosion()
   virtual cocos2d::CCParticleExplosion * ~CCParticleExplosion()
   virtual int init(void)
   virtual void * initWithTotalParticles(uint)
}
class cocos2d::CCParticleSmoke : cocos2d::CCParticleSystemQuad{
   void * initWithTotalParticles(unsigned int)
   cocos2d::CCParticleSystemQuad * createWithTotalParticles(unsigned int)
   int init()
   cocos2d::CCParticleSystemQuad * create()
   cocos2d::CCParticleSmoke * ~CCParticleSmoke()
   virtual cocos2d::CCParticleSmoke * ~CCParticleSmoke()
   virtual int init(void)
   virtual void * initWithTotalParticles(uint)
}
class cocos2d::CCParticleSnow : cocos2d::CCParticleSystemQuad{
   void * initWithTotalParticles(unsigned int)
   cocos2d::CCParticleSystemQuad * createWithTotalParticles(unsigned int)
   int init()
   cocos2d::CCParticleSystemQuad * create()
   cocos2d::CCParticleSnow * ~CCParticleSnow()
   virtual cocos2d::CCParticleSnow * ~CCParticleSnow()
   virtual int init(void)
   virtual void * initWithTotalParticles(uint)
}
class cocos2d::CCParticleRain : cocos2d::CCParticleSystemQuad{
   void * initWithTotalParticles(unsigned int)
   cocos2d::CCParticleSystemQuad * createWithTotalParticles(unsigned int)
   int init()
   cocos2d::CCParticleSystemQuad * create()
   cocos2d::CCParticleRain * ~CCParticleRain()
   virtual cocos2d::CCParticleRain * ~CCParticleRain()
   virtual int init(void)
   virtual void * initWithTotalParticles(uint)
}
class cocos2d::CCParticleSystem : cocos2d::CCNode, cocos2d::CCTextureProtocol{
   int getEndSize()
   int getEndSpin()
   char * getGravity()
   int getLifeVar()
   int getTexture()
   int setEndSize(float)
   int setEndSpin(float)
   int setGravity(cocos2d::CCPoint const&)
   int setLifeVar(float)
   int setTexture(cocos2d::CCTexture2D*)
   int stopSystem()
   signed int addParticle()
   int getAngleVar()
   int getDuration()
   char * getEndColor()
   int getSpeedVar()
   int resetSystem()
   int setAngleVar(float)
   int setDuration(float)
   int setEndColor(cocos2d::_ccColor4F const&)
   int setRotation(float)
   int setSpeedVar(float)
   int getBatchNode()
   cocos2d::CCParticleSystem * getBlendFunc()
   int getEndRadius()
   int getStartSize()
   int getStartSpin()
   float initParticle(cocos2d::sCCParticle*)
   signed int initWithFile(char const*)
   int loadDefaults()
   int resumeSystem()
   int saveDefaults()
   int setBatchNode(cocos2d::CCParticleBatchNode*)
   int * setBlendFunc(cocos2d::_ccBlendFunc)
   int setEndRadius(float)
   int setStartSize(float)
   int setStartSpin(float)
   int getEndSizeVar()
   int getEndSpinVar()
   char * getStartColor()
   int setEndSizeVar(float)
   int setEndSpinVar(float)
   int setStartColor(cocos2d::_ccColor4F const&)
   int getEmitterMode()
   char * getEndColorVar()
   int getRadialAccel()
   int getStartRadius()
   int setEmitterMode(int)
   int setEndColorVar(cocos2d::_ccColor4F const&)
   int setRadialAccel(float)
   int setStartRadius(float)
   int getEmissionRate()
   int getEndRadiusVar()
   int getPositionType()
   int getStartSizeVar()
   int getStartSpinVar()
   int isBlendAdditive()
   int setEmissionRate(float)
   int setEndRadiusVar(float)
   int setPositionType(cocos2d::tCCPositionType)
   int setStartSizeVar(float)
   int setStartSpinVar(float)
   cocos2d::CCTexture2D * updateBlendFunc()
   int getParticleCount()
   int getRotationIsDir()
   char * getStartColorVar()
   int setBlendAdditive(bool)
   int setRotationIsDir(bool)
   int setStartColorVar(cocos2d::_ccColor4F const&)
   int updateWithNoTime()
   int getRadialAccelVar()
   char * getSourcePosition()
   int getStartRadiusVar()
   int getTotalParticles()
   int setRadialAccelVar(float)
   int setSourcePosition(cocos2d::CCPoint const&)
   int setStartRadiusVar(float)
   int setTotalParticles(unsigned int)
   int getRotatePerSecond()
   int getTangentialAccel()
   signed int initWithDictionary(cocos2d::CCDictionary*)
   signed int initWithDictionary(cocos2d::CCDictionary*, char const*)
   int loadScaledDefaults(float)
   int setRotatePerSecond(float)
   int setTangentialAccel(float)
   int getOpacityModifyRGB()
   int setOpacityModifyRGB(bool)
   int isAutoRemoveOnFinish()
   int getRotatePerSecondVar()
   int getTangentialAccelVar()
   int setAutoRemoveOnFinish(bool)
   int setRotatePerSecondVar(float)
   int setTangentialAccelVar(float)
   void * initWithTotalParticles(unsigned int)
    updateQuadWithParticle(cocos2d::sCCParticle*, cocos2d::CCPoint const&)
   cocos2d::CCParticleSystem * createWithTotalParticles(unsigned int)
   int init()
   cocos2d::CCParticleSystem * create(char const*)
   _BOOL4 isFull()
   int update(float)
   int getLife()
   int setLife(float)
   int getAngle()
   int getSpeed()
   int isActive()
    postStep()
   int setAngle(float)
   int setScale(float)
   int setSpeed(float)
   char * getPosVar()
   int setPosVar(cocos2d::CCPoint const&)
   int setScaleX(float)
   int setScaleY(float)
   cocos2d::CCParticleSystem * CCParticleSystem()
   cocos2d::CCParticleSystem * ~CCParticleSystem()
   virtual cocos2d::CCParticleSystem * ~CCParticleSystem()
   virtual int update(float)
   virtual int init(void)
   virtual int setScaleX(float)
   virtual int setScaleY(float)
   virtual int setScale(float)
   virtual int setRotation(float)
   virtual int getBatchNode(void)
   virtual int setBatchNode(cocos2d::CCParticleBatchNode *)
   virtual int getParticleCount(void)
   virtual int getDuration(void)
   virtual int setDuration(float)
   virtual char * getSourcePosition(void)
   virtual int setSourcePosition(cocos2d::CCPoint const&)
   virtual char * getPosVar(void)
   virtual int setPosVar(cocos2d::CCPoint const&)
   virtual int getLife(void)
   virtual int setLife(float)
   virtual int getLifeVar(void)
   virtual int setLifeVar(float)
   virtual int getAngle(void)
   virtual int setAngle(float)
   virtual int getAngleVar(void)
   virtual int setAngleVar(float)
   virtual char * getGravity(void)
   virtual int setGravity(cocos2d::CCPoint const&)
   virtual int getSpeed(void)
   virtual int setSpeed(float)
   virtual int getSpeedVar(void)
   virtual int setSpeedVar(float)
   virtual int getTangentialAccel(void)
   virtual int setTangentialAccel(float)
   virtual int getTangentialAccelVar(void)
   virtual int setTangentialAccelVar(float)
   virtual int getRadialAccel(void)
   virtual int setRadialAccel(float)
   virtual int getRadialAccelVar(void)
   virtual int setRadialAccelVar(float)
   virtual int getRotationIsDir(void)
   virtual int setRotationIsDir(bool)
   virtual int getStartRadius(void)
   virtual int setStartRadius(float)
   virtual int getStartRadiusVar(void)
   virtual int setStartRadiusVar(float)
   virtual int getEndRadius(void)
   virtual int setEndRadius(float)
   virtual int getEndRadiusVar(void)
   virtual int setEndRadiusVar(float)
   virtual int getRotatePerSecond(void)
   virtual int setRotatePerSecond(float)
   virtual int getRotatePerSecondVar(void)
   virtual int setRotatePerSecondVar(float)
   virtual int isActive(void)
   virtual int isBlendAdditive(void)
   virtual int setBlendAdditive(bool)
   virtual int getStartSize(void)
   virtual int setStartSize(float)
   virtual int getStartSizeVar(void)
   virtual int setStartSizeVar(float)
   virtual int getEndSize(void)
   virtual int setEndSize(float)
   virtual int getEndSizeVar(void)
   virtual int setEndSizeVar(float)
   virtual char * getStartColor(void)
   virtual int setStartColor(cocos2d::_ccColor4F const&)
   virtual char * getStartColorVar(void)
   virtual int setStartColorVar(cocos2d::_ccColor4F const&)
   virtual char * getEndColor(void)
   virtual int setEndColor(cocos2d::_ccColor4F const&)
   virtual char * getEndColorVar(void)
   virtual int setEndColorVar(cocos2d::_ccColor4F const&)
   virtual int getStartSpin(void)
   virtual int setStartSpin(float)
   virtual int getStartSpinVar(void)
   virtual int setStartSpinVar(float)
   virtual int getEndSpin(void)
   virtual int setEndSpin(float)
   virtual int getEndSpinVar(void)
   virtual int setEndSpinVar(float)
   virtual int getEmissionRate(void)
   virtual int setEmissionRate(float)
   virtual int getTotalParticles(void)
   virtual int setTotalParticles(uint)
   virtual int getTexture(void)
   virtual int setTexture(cocos2d::CCTexture2D *)
   virtual cocos2d::CCParticleSystem * getBlendFunc(void)
   virtual int * setBlendFunc(cocos2d::_ccBlendFunc)
   virtual int getOpacityModifyRGB(void)
   virtual int setOpacityModifyRGB(bool)
   virtual int getPositionType(void)
   virtual int setPositionType(cocos2d::tCCPositionType)
   virtual int isAutoRemoveOnFinish(void)
   virtual int setAutoRemoveOnFinish(bool)
   virtual int getEmitterMode(void)
   virtual int setEmitterMode(int)
   virtual void * initWithTotalParticles(uint)
   virtual  updateQuadWithParticle(cocos2d::sCCParticle *,cocos2d::CCPoint const&)
   virtual  postStep(void)
   virtual int updateWithNoTime(void)
   virtual cocos2d::CCTexture2D * updateBlendFunc(void)
}
class cocos2d::CCParticleBatchNode : cocos2d::CCNode, cocos2d::CCTextureProtocol{
   int getTexture()
   int setTexture(cocos2d::CCTexture2D*)
   int insertChild(cocos2d::CCParticleSystem*, unsigned int)
   int removeChild(cocos2d::CCNode*, bool)
   cocos2d::CCParticleBatchNode * getBlendFunc()
   signed int initWithFile(char const*, unsigned int)
   __int64 reorderChild(cocos2d::CCNode*, int)
   int setBlendFunc(cocos2d::_ccBlendFunc)
   unsigned int addChildHelper(cocos2d::CCParticleSystem*, int, int)
   int disableParticle(unsigned int)
   int getCurrentIndex(unsigned int*, unsigned int*, cocos2d::CCNode*, int)
   signed int initWithTexture(cocos2d::CCTexture2D*, unsigned int)
   int updateBlendFunc()
   cocos2d::CCParticleBatchNode * createWithTexture(cocos2d::CCTexture2D*, unsigned int)
   int removeChildAtIndex(unsigned int, bool)
   int updateAllAtlasIndexes()
   signed int increaseAtlasCapacityTo(unsigned int)
   int removeAllChildrenWithCleanup(bool)
   unsigned int searchNewPositionInChildrenForZ(int)
   int draw()
   int visit()
   cocos2d::CCParticleBatchNode * create(char const*, unsigned int)
   unsigned int addChild(cocos2d::CCNode*)
   unsigned int addChild(cocos2d::CCNode*, int)
   unsigned int addChild(cocos2d::CCNode*, int, int)
   cocos2d::CCParticleBatchNode * CCParticleBatchNode()
   cocos2d::CCNode * ~CCParticleBatchNode()
   virtual cocos2d::CCNode * ~CCParticleBatchNode()
   virtual unsigned int addChild(cocos2d::CCNode *)
   virtual unsigned int addChild(cocos2d::CCNode *,int)
   virtual unsigned int addChild(cocos2d::CCNode *,int,int)
   virtual int removeChild(cocos2d::CCNode *,bool)
   virtual int removeAllChildrenWithCleanup(bool)
   virtual __int64 reorderChild(cocos2d::CCNode *,int)
   virtual int draw(void)
   virtual int visit(void)
   virtual int getTexture(void)
   virtual int setTexture(cocos2d::CCTexture2D *)
   virtual int setBlendFunc(cocos2d::_ccBlendFunc)
   virtual cocos2d::CCParticleBatchNode * getBlendFunc(void)
}
class cocos2d::CCParticleSystemQuad : cocos2d::CCParticleSystem{
   int setTexture(cocos2d::CCTexture2D*)
   void * allocMemory()
   int initIndices()
   int setBatchNode(cocos2d::CCParticleBatchNode*)
   int setDisplayFrame(cocos2d::CCSpriteFrame*)
   void * setTotalParticles(unsigned int)
   int setTextureWithRect(cocos2d::CCTexture2D*, cocos2d::CCRect const&)
   int initTexCoordsWithRect(cocos2d::CCRect const&)
   void * initWithTotalParticles(unsigned int)
   _DWORD listenBackToForeground(cocos2d::CCObject*)
   float updateQuadWithParticle(cocos2d::sCCParticle*, cocos2d::CCPoint const&)
   cocos2d::CCParticleSystemQuad * createWithTotalParticles(unsigned int)
   int draw()
   cocos2d::CCParticleSystemQuad * create(char const*)
   cocos2d::CCParticleSystemQuad * create()
   int postStep()
   int setupVBO()
   cocos2d::CCParticleSystemQuad * CCParticleSystemQuad()
   cocos2d::CCParticleSystemQuad * ~CCParticleSystemQuad()
   virtual cocos2d::CCParticleSystemQuad * ~CCParticleSystemQuad()
   virtual int draw(void)
   virtual int setBatchNode(cocos2d::CCParticleBatchNode *)
   virtual void * setTotalParticles(uint)
   virtual int setTexture(cocos2d::CCTexture2D *)
   virtual void * initWithTotalParticles(uint)
   virtual float updateQuadWithParticle(cocos2d::sCCParticle *,cocos2d::CCPoint const&)
   virtual int postStep(void)
}
class tinyxml2::XMLVisitor{
   signed int VisitEnter(tinyxml2::XMLElement const&, tinyxml2::XMLAttribute const*)
   signed int VisitEnter(tinyxml2::XMLDocument const&)
   signed int Visit(tinyxml2::XMLComment const&)
   signed int Visit(tinyxml2::XMLUnknown const&)
   signed int Visit(tinyxml2::XMLDeclaration const&)
   signed int Visit(tinyxml2::XMLText const&)
   signed int VisitExit(tinyxml2::XMLElement const&)
   signed int VisitExit(tinyxml2::XMLDocument const&)
   int ~XMLVisitor()
   virtual int ~XMLVisitor()
   virtual signed int VisitEnter(tinyxml2::XMLDocument const&)
   virtual signed int VisitExit(tinyxml2::XMLDocument const&)
   virtual signed int VisitEnter(tinyxml2::XMLElement const&,tinyxml2::XMLAttribute const*)
   virtual signed int VisitExit(tinyxml2::XMLElement const&)
   virtual signed int Visit(tinyxml2::XMLDeclaration const&)
   virtual signed int Visit(tinyxml2::XMLText const&)
   virtual signed int Visit(tinyxml2::XMLComment const&)
   virtual signed int Visit(tinyxml2::XMLUnknown const&)
}
class cocos2d::XmlSaxHander : tinyxml2::XMLVisitor{
   signed int VisitEnter(tinyxml2::XMLElement const&, tinyxml2::XMLAttribute const*)
   signed int Visit(tinyxml2::XMLUnknown const&)
   signed int Visit(tinyxml2::XMLText const&)
   signed int VisitExit(tinyxml2::XMLElement const&)
   int ~XmlSaxHander()
   virtual int ~XmlSaxHander()
   virtual signed int VisitEnter(tinyxml2::XMLElement const&,tinyxml2::XMLAttribute const*)
   virtual signed int VisitExit(tinyxml2::XMLElement const&)
   virtual signed int Visit(tinyxml2::XMLText const&)
   virtual signed int Visit(tinyxml2::XMLUnknown const&)
}
class cocos2d::CCSAXDelegator{
}
class cocos2d::CCDictMaker : cocos2d::CCSAXDelegator{
   _DWORD * endElement(void*, char const*)
   int textHandler(void*, char const*, int)
   _DWORD * startElement(void*, char const*, char const**)
   cocos2d::CCDictMaker * CCDictMaker()
   cocos2d::CCDictMaker * ~CCDictMaker()
   virtual _DWORD * startElement(void *,char const*,char const**)
   virtual _DWORD * endElement(void *,char const*)
   virtual int textHandler(void *,char const*,int)
}
class cocos2d::CCFileUtils : cocos2d::TypeInfo{
   void * getFileData(char const*, char const*, unsigned long*)
   signed int shouldUseHD()
   tinyxml2::XMLNode * writeToFile(cocos2d::CCDictionary*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   _DWORD * addSearchPath(char const*)
   int isPopupNotify()
   cocos2d::CCFileUtils * getNewFilename(char const*)
   char * getSearchPaths()
   _BOOL4 isAbsolutePath(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   int purgeFileUtils()
   _DWORD * removeAllPaths()
   void removeFullPath(char const*)
   __int64 setPopupNotify(bool)
   int setSearchPaths(std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
   _DWORD * sharedFileUtils()
   int getClassTypeInfo()
   cocos2d::CCFileUtils * getWritablePath2()
   _DWORD * removeSearchPath(char const*)
    s_sharedFileUtils
   void * getFileDataFromZip(char const*, char const*, unsigned long*)
   int * getPathForFilename(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   void purgeCachedEntries()
   cocos2d::CCFileUtils * fullPathForFilename(char const*, bool)
   int fullPathFromRelativeFile(char const*, char const*)
   _DWORD * addSearchResolutionsOrder(char const*)
   char * getSearchResolutionsOrder()
   int setSearchResolutionsOrder(std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
   int setFilenameLookupDictionary(cocos2d::CCDictionary*)
   int createCCArrayWithContentsOfFile(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   int getFullPathForDirectoryAndFilename(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   int createCCDictionaryWithContentsOfFile(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   _DWORD * loadFilenameLookupDictionaryFromFile(char const*)
   signed int init()
   int * addSuffix(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)
   cocos2d::CCFileUtils * CCFileUtils()
   cocos2d::CCFileUtils * ~CCFileUtils()
   int getClassTypeInfo()::id
   virtual int getClassTypeInfo(void)
   virtual cocos2d::CCFileUtils * ~CCFileUtils()
   virtual void purgeCachedEntries(void)
   virtual void * getFileData(char const*,char const*,ulong *)
   virtual void * getFileDataFromZip(char const*,char const*,ulong *)
   virtual cocos2d::CCFileUtils * fullPathForFilename(char const*,bool)
   virtual void removeFullPath(char const*)
   virtual _DWORD * loadFilenameLookupDictionaryFromFile(char const*)
   virtual int setFilenameLookupDictionary(cocos2d::CCDictionary *)
   virtual int fullPathFromRelativeFile(char const*,char const*)
   virtual int setSearchResolutionsOrder(std::vector<std::string,std::allocator<std::string>> const&)
   virtual _DWORD * addSearchResolutionsOrder(char const*)
   virtual char * getSearchResolutionsOrder(void)
   virtual int setSearchPaths(std::vector<std::string,std::allocator<std::string>> const&)
   virtual _DWORD * addSearchPath(char const*)
   virtual _DWORD * removeSearchPath(char const*)
   virtual char * getSearchPaths(void)
   virtual cocos2d::CCFileUtils * getWritablePath2(void)
   virtual _BOOL4 isAbsolutePath(std::string const&)
   virtual __int64 setPopupNotify(bool)
   virtual int isPopupNotify(void)
   virtual signed int init(void)
   virtual cocos2d::CCFileUtils * getNewFilename(char const*)
   virtual signed int shouldUseHD(void)
   virtual int * addSuffix(std::string,std::string)
   virtual int * getPathForFilename(std::string const&,std::string const&,std::string const&)
   virtual int getFullPathForDirectoryAndFilename(std::string const&,std::string const&)
   virtual int createCCDictionaryWithContentsOfFile(std::string const&)
   virtual tinyxml2::XMLNode * writeToFile(cocos2d::CCDictionary *,std::string const&)
   virtual int createCCArrayWithContentsOfFile(std::string const&)
}
class cocos2d::CCTouch : cocos2d::CCObject{
   cocos2d::CCTouch * ~CCTouch()
   cocos2d::CCTouch * getLocation() const
   cocos2d::CCTouch * getStartLocation() const
   cocos2d::CCTouch * getLocationInView() const
   cocos2d::CCTouch * getPreviousLocation() const
   cocos2d::CCTouch * getStartLocationInView() const
   cocos2d::CCTouch * getPreviousLocationInView() const
   cocos2d::CCTouch * getDelta() const
   virtual cocos2d::CCTouch * ~CCTouch()
}
class cocos2d::CCEGLViewProtocol{
   char * getViewName()
   int setViewName(char const*)
   int setFrameSize(float, float)
   cocos2d::CCRect * getScissorRect()
    pollInputEvents()
   cocos2d::CCSet * handleTouchesEnd(int, int*, float*, float*)
   bool isScissorEnabled()
   int setTouchDelegate(cocos2d::EGLTouchDelegate*)
   cocos2d::CCSet * handleTouchesMove(int, int*, float*, float*)
   cocos2d::CCSet * handleTouchesBegin(int, int*, float*, float*)
   void setScissorInPoints(float, float, float, float)
   cocos2d::CCSet * handleTouchesCancel(int, int*, float*, float*)
   void setViewPortInPoints(float, float, float, float)
   void setDesignResolutionSize(float, float, ResolutionPolicy)
   int getSetOfTouchesEndOrCancel(cocos2d::CCSet&, int, int*, float*, float*)
   void updateDesignResolutionSize()
   cocos2d::CCEGLViewProtocol * CCEGLViewProtocol()
   int ~CCEGLViewProtocol()
   char * getFrameSize() const
   cocos2d::CCEGLViewProtocol * getVisibleSize() const
   char * getViewPortRect() const
   cocos2d::CCEGLViewProtocol * getVisibleOrigin() const
   char * getDesignResolutionSize() const
   int getScaleX() const
   int getScaleY() const
   virtual int ~CCEGLViewProtocol()
   virtual char * getFrameSize(void)
   virtual int setFrameSize(float,float)
   virtual cocos2d::CCEGLViewProtocol * getVisibleSize(void)
   virtual cocos2d::CCEGLViewProtocol * getVisibleOrigin(void)
   virtual void setDesignResolutionSize(float,float,ResolutionPolicy)
   virtual char * getDesignResolutionSize(void)
   virtual int setTouchDelegate(cocos2d::EGLTouchDelegate *)
   virtual void setViewPortInPoints(float,float,float,float)
   virtual void setScissorInPoints(float,float,float,float)
   virtual bool isScissorEnabled(void)
   virtual cocos2d::CCRect * getScissorRect(void)
   virtual int setViewName(char const*)
   virtual cocos2d::CCSet * handleTouchesBegin(int,int *,float *,float *)
   virtual cocos2d::CCSet * handleTouchesMove(int,int *,float *,float *)
   virtual cocos2d::CCSet * handleTouchesEnd(int,int *,float *,float *)
   virtual cocos2d::CCSet * handleTouchesCancel(int,int *,float *,float *)
   virtual  pollInputEvents(void)
}
class cocos2d::CCEGLView : cocos2d::CCEGLViewProtocol{
   void swapBuffers()
   signed int isOpenGLReady()
   void * sharedOpenGLView()
   signed int setIMEKeyboardState(bool)
    end()
   cocos2d::CCEGLView * CCEGLView()
   cocos2d::CCEGLView * ~CCEGLView()
   virtual cocos2d::CCEGLView * ~CCEGLView()
   virtual  end(void)
   virtual signed int isOpenGLReady(void)
   virtual void swapBuffers(void)
   virtual signed int setIMEKeyboardState(bool)
   virtual char * otocol::getFrameSize(void)
   virtual int otocol::setFrameSize(float,float)
   virtual cocos2d::CCEGLViewProtocol * otocol::getVisibleSize(void)
   virtual cocos2d::CCEGLViewProtocol * otocol::getVisibleOrigin(void)
   virtual void otocol::setDesignResolutionSize(float,float,ResolutionPolicy)
   virtual char * otocol::getDesignResolutionSize(void)
   virtual int otocol::setTouchDelegate(cocos2d::EGLTouchDelegate *)
   virtual void otocol::setViewPortInPoints(float,float,float,float)
   virtual void otocol::setScissorInPoints(float,float,float,float)
   virtual bool otocol::isScissorEnabled(void)
   virtual cocos2d::CCRect * otocol::getScissorRect(void)
   virtual int otocol::setViewName(char const*)
   virtual cocos2d::CCSet * otocol::handleTouchesBegin(int,int *,float *,float *)
   virtual cocos2d::CCSet * otocol::handleTouchesMove(int,int *,float *,float *)
   virtual cocos2d::CCSet * otocol::handleTouchesEnd(int,int *,float *,float *)
   virtual cocos2d::CCSet * otocol::handleTouchesCancel(int,int *,float *,float *)
   virtual  otocol::pollInputEvents(void)
}
class cocos2d::CCApplicationProtocol{
    gameDidSave()
    trySaveGame()
    applicationWillBecomeActive()
    applicationWillResignActive()
    openURL(char const*)
   int ~CCApplicationProtocol()
   virtual int ~CCApplicationProtocol()
   virtual  applicationWillBecomeActive(void)
   virtual  applicationWillResignActive(void)
   virtual  trySaveGame(void)
   virtual  gameDidSave(void)
   virtual  openURL(char const*)
}
class cocos2d::CCApplication : cocos2d::CCApplicationProtocol{
   signed int getTargetPlatform()
   int sharedApplication()
   signed int getCurrentLanguage()
   int setAnimationInterval(double)
    sm_pSharedApplication
   signed int run()
   cocos2d::CCApplication * openURL(char const*)
   int CCApplication()
   int ~CCApplication()
   virtual int ~CCApplication()
   virtual  otocol::applicationWillBecomeActive(void)
   virtual  otocol::applicationWillResignActive(void)
   virtual  otocol::trySaveGame(void)
   virtual  otocol::gameDidSave(void)
   virtual int setAnimationInterval(double)
   virtual signed int getCurrentLanguage(void)
   virtual signed int getTargetPlatform(void)
   virtual cocos2d::CCApplication * openURL(char const*)
}
class cocos2d::CCFileUtilsAndroid : cocos2d::CCFileUtils{
   void * getFileData(char const*, char const*, unsigned long*)
   int isFileExist(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   void * doGetFileData(char const*, char const*, unsigned long*, bool)
   signed int isAbsolutePath(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   int * getWritablePath()
   void * getFileDataForAsync(char const*, char const*, unsigned long*)
   signed int init()
   cocos2d::CCFileUtilsAndroid * CCFileUtilsAndroid()
   cocos2d::CCFileUtils * ~CCFileUtilsAndroid()
   virtual cocos2d::CCFileUtils * ~CCFileUtilsAndroid()
   virtual void * getFileData(char const*,char const*,ulong *)
   virtual int * getWritablePath(void)
   virtual int isFileExist(std::string const&)
   virtual signed int isAbsolutePath(std::string const&)
   virtual signed int init(void)
}
class cocos2d::CCImage : cocos2d::CCObject{
   const char * saveToFile(char const*, bool)
   float initWithString(char const*, int, int, cocos2d::CCImage::ETextAlign, char const*, int)
   const char * _saveImageToJPG(char const*)
   int * _saveImageToPNG(char const*, bool)
   int _initWithJpgData(void*, int)
   signed int _initWithPngData(void*, int)
   void * _initWithRawData(void*, int, int, int, int, bool)
   void * initWithImageData(void*, int, cocos2d::CCImage::EImageFormat, int, int, int)
   void * initWithImageFile(char const*, cocos2d::CCImage::EImageFormat)
   signed int _initWithTiffData(void*, int)
   signed int _initWithWebpData(void*, int)
   int initWithStringShadowStroke(char const*, int, int, cocos2d::CCImage::ETextAlign, char const*, int, float, float, float, bool, float, float, float, float, bool, float, float, float, float)
   void * initWithImageFileThreadSafe(char const*, cocos2d::CCImage::EImageFormat)
   cocos2d::CCImage * CCImage()
   cocos2d::CCImage * ~CCImage()
   virtual cocos2d::CCImage * ~CCImage()
}
class cocos2d::CCScriptHandlerEntry : cocos2d::CCObject{
   cocos2d::CCObject * create(int)
   cocos2d::CCScriptHandlerEntry * ~CCScriptHandlerEntry()
    CCScriptHandlerEntry(int)::newEntryId
   virtual cocos2d::CCScriptHandlerEntry * ~CCScriptHandlerEntry()
}
class cocos2d::CCSchedulerScriptHandlerEntry : cocos2d::CCScriptHandlerEntry{
   signed int init(float, bool)
   _DWORD * create(int, float, bool)
   cocos2d::CCScriptHandlerEntry * ~CCSchedulerScriptHandlerEntry()
   virtual cocos2d::CCScriptHandlerEntry * ~CCSchedulerScriptHandlerEntry()
}
class cocos2d::CCTouchScriptHandlerEntry : cocos2d::CCScriptHandlerEntry{
   signed int init(bool, int, bool)
   _DWORD * create(int, bool, int, bool)
   cocos2d::CCTouchScriptHandlerEntry * ~CCTouchScriptHandlerEntry()
   virtual cocos2d::CCTouchScriptHandlerEntry * ~CCTouchScriptHandlerEntry()
}
class cocos2d::CCGLProgram : cocos2d::CCObject{
   int programLog()
   int description()
   int addAttribute(char const*, unsigned int)
   int compileShader(unsigned int*, unsigned int, char const*)
   int updateUniforms()
   int vertexShaderLog()
   int fragmentShaderLog()
   int logForOpenGLObject(unsigned int, void (*)(unsigned int, unsigned int, int*), void (*)(unsigned int, int, int*, char*))
   int updateUniformLocation(int, void*, unsigned int)
   cocos2d::CCDirector * setUniformsForBuiltins()
   int setUniformLocationWith1f(int, float)
   int setUniformLocationWith1i(int, int)
   int setUniformLocationWith2f(int, float, float)
   int setUniformLocationWith2i(int, int, int)
   int setUniformLocationWith3f(int, float, float, float)
   int setUniformLocationWith3i(int, int, int, int)
   int setUniformLocationWith4f(int, float, float, float, float)
   int setUniformLocationWith4i(int, int, int, int, int)
   int getUniformLocationForName(char const*)
   int setUniformLocationWith2fv(int, float*, unsigned int)
   int setUniformLocationWith2iv(int, int*, unsigned int)
   int setUniformLocationWith3fv(int, float*, unsigned int)
   int setUniformLocationWith3iv(int, int*, unsigned int)
   int setUniformLocationWith4fv(int, float*, unsigned int)
   int setUniformLocationWith4iv(int, int*, unsigned int)
   int initWithVertexShaderFilename(char const*, char const*)
   int initWithVertexShaderByteArray(char const*, char const*)
   int setUniformLocationWithMatrix3fv(int, float*, unsigned int)
   int setUniformLocationWithMatrix4fv(int, float*, unsigned int)
   int use()
   signed int link()
   void reset()
   cocos2d::CCGLProgram * CCGLProgram()
   cocos2d::CCGLProgram * ~CCGLProgram()
   virtual cocos2d::CCGLProgram * ~CCGLProgram()
}
class cocos2d::CCShaderCache : cocos2d::CCObject{
   _DWORD * addProgram(cocos2d::CCGLProgram*, char const*)
   int programForKey(char const*)
   void loadDefaultShader(cocos2d::CCGLProgram*, int)
   int sharedShaderCache()
   int loadDefaultShaders()
   void reloadDefaultShaders()
   int purgeSharedShaderCache()
   signed int init()
   cocos2d::CCShaderCache * CCShaderCache()
   cocos2d::CCObject * ~CCShaderCache()
   virtual cocos2d::CCObject * ~CCShaderCache()
}
class cocos2d::CCAnimationFrame : cocos2d::CCObject{
   cocos2d::CCAnimationFrame * copyWithZone(cocos2d::CCZone*)
   signed int initWithSpriteFrame(cocos2d::CCSpriteFrame*, float, cocos2d::CCDictionary*)
   cocos2d::CCAnimationFrame * CCAnimationFrame()
   cocos2d::CCAnimationFrame * ~CCAnimationFrame()
   virtual cocos2d::CCAnimationFrame * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCAnimationFrame * ~CCAnimationFrame()
}
class cocos2d::CCAnimation : cocos2d::CCObject{
   int getDuration()
   cocos2d::CCAnimation * copyWithZone(cocos2d::CCZone*)
   int addSpriteFrame(cocos2d::CCSpriteFrame*)
   signed int initWithSpriteFrames(cocos2d::CCArray*, float)
   cocos2d::CCAnimation * createWithSpriteFrames(cocos2d::CCArray*, float)
   signed int initWithAnimationFrames(cocos2d::CCArray*, float, unsigned int)
   int addSpriteFrameWithTexture(cocos2d::CCTexture2D*, cocos2d::CCRect const&)
   int addSpriteFrameWithFileName(char const*)
   signed int init()
   cocos2d::CCAnimation * create(cocos2d::CCArray*, float, unsigned int)
   cocos2d::CCAnimation * create()
   int setFrames(cocos2d::CCArray*)
   cocos2d::CCAnimation * CCAnimation()
   cocos2d::CCObject * ~CCAnimation()
   virtual cocos2d::CCAnimation * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCObject * ~CCAnimation()
   virtual int getDuration(void)
}
class cocos2d::CCAnimationCache : cocos2d::CCObject{
   _DWORD * addAnimation(cocos2d::CCAnimation*, char const*)
   cocos2d::CCSpriteFrameCache * parseVersion1(cocos2d::CCDictionary*)
   cocos2d::CCSpriteFrameCache * parseVersion2(cocos2d::CCDictionary*)
   int animationByName(char const*)
   int sharedAnimationCache()
   _DWORD * addAnimationsWithFile(char const*)
   int removeAnimationByName(char const*)
    s_pSharedAnimationCache
   int purgeSharedAnimationCache()
   cocos2d::CCFileUtils * addAnimationsWithDictionary(cocos2d::CCDictionary*, char const*)
   signed int init()
   cocos2d::CCAnimationCache * CCAnimationCache()
   cocos2d::CCObject * ~CCAnimationCache()
   virtual cocos2d::CCObject * ~CCAnimationCache()
}
class cocos2d::CCSprite : cocos2d::CCNodeRGBA, cocos2d::CCTextureProtocol{
   int getTexture()
   int setOpacity(unsigned char)
   int setTexture(cocos2d::CCTexture2D*)
   int setVertexZ(float)
   int setVisible(bool)
   int * removeChild(cocos2d::CCNode*, bool)
   int setPosition(cocos2d::CCPoint const&)
   int setRotation(float)
   int updateColor()
   void * displayFrame()
   int getBatchNode()
   cocos2d::CCSprite * getBlendFunc()
   cocos2d::CCTexture2D * initWithFile(char const*)
   cocos2d::CCTexture2D * initWithFile(char const*, cocos2d::CCRect const&)
   int reorderChild(cocos2d::CCNode*, int)
   int setBatchNode(cocos2d::CCSpriteBatchNode*)
   int setBlendFunc(cocos2d::_ccBlendFunc)
   int setRotationX(float)
   int setRotationY(float)
   int setChildColor(cocos2d::_ccColor3B const&)
   int setVertexRect(cocos2d::CCRect const&)
   signed int setAnchorPoint(cocos2d::CCPoint const&)
   int setTextureRect(cocos2d::CCRect const&)
   int setTextureRect(cocos2d::CCRect const&, bool, cocos2d::CCSize const&)
   int initWithTexture(cocos2d::CCTexture2D*)
   int initWithTexture(cocos2d::CCTexture2D*, cocos2d::CCRect const&)
   int initWithTexture(cocos2d::CCTexture2D*, cocos2d::CCRect const&, bool)
   int setChildOpacity(unsigned char)
   int setDisplayFrame(cocos2d::CCSpriteFrame*)
   int sortAllChildren()
   int updateBlendFunc()
   int updateTransform()
   signed int isFrameDisplayed(cocos2d::CCSpriteFrame*)
   cocos2d::CCRect * setTextureCoords(cocos2d::CCRect const&)
   cocos2d::CCSprite * createWithTexture(cocos2d::CCTexture2D*)
   cocos2d::CCSprite * createWithTexture(cocos2d::CCTexture2D*, cocos2d::CCRect const&)
   int isOpacityModifyRGB()
   int refreshTextureRect()
   int initWithSpriteFrame(cocos2d::CCSpriteFrame*)
   _DWORD * setDirtyRecursively(bool)
   int setOpacityModifyRGB(bool)
   int updateDisplayedColor(cocos2d::_ccColor3B const&)
   cocos2d::CCSprite * createWithSpriteFrame(cocos2d::CCSpriteFrame*)
   int updateDisplayedOpacity(unsigned char)
   int initWithSpriteFrameName(char const*)
   cocos2d::CCSprite * createWithSpriteFrameName(char const*)
    ignoreAnchorPointForPosition(bool)
   cocos2d::CCArray * removeAllChildrenWithCleanup(bool)
   int setReorderChildDirtyRecursively()
   int setDisplayFrameWithAnimationName(char const*, int)
   void draw()
   int init()
   cocos2d::CCSprite * create(char const*)
   cocos2d::CCSprite * create(char const*, cocos2d::CCRect const&)
   cocos2d::CCSprite * create()
   int isDirty()
   int isFlipX()
   int isFlipY()
   int addChild(cocos2d::CCNode*)
   int addChild(cocos2d::CCNode*, int)
   int addChild(cocos2d::CCNode*, int, int)
   int setColor(cocos2d::_ccColor3B const&)
   int setDirty(bool)
   int setFlipX(bool)
   int setFlipY(bool)
   int setScale(float)
   int setSkewX(float)
   int setSkewY(float)
   int setScaleX(float)
   int setScaleY(float)
   cocos2d::CCSprite * CCSprite()
   cocos2d::CCSprite * ~CCSprite()
   virtual cocos2d::CCSprite * ~CCSprite()
   virtual int init(void)
   virtual int setVertexZ(float)
   virtual int setScaleX(float)
   virtual int setScaleY(float)
   virtual int setScale(float)
   virtual int setPosition(cocos2d::CCPoint const&)
   virtual int setSkewX(float)
   virtual int setSkewY(float)
   virtual signed int setAnchorPoint(cocos2d::CCPoint const&)
   virtual int setVisible(bool)
   virtual int setRotation(float)
   virtual int setRotationX(float)
   virtual int setRotationY(float)
   virtual  ignoreAnchorPointForPosition(bool)
   virtual int addChild(cocos2d::CCNode *)
   virtual int addChild(cocos2d::CCNode *,int)
   virtual int addChild(cocos2d::CCNode *,int,int)
   virtual int * removeChild(cocos2d::CCNode *,bool)
   virtual cocos2d::CCArray * removeAllChildrenWithCleanup(bool)
   virtual int reorderChild(cocos2d::CCNode *,int)
   virtual int sortAllChildren(void)
   virtual void draw(void)
   virtual int updateTransform(void)
   virtual int setOpacity(uchar)
   virtual int updateDisplayedOpacity(uchar)
   virtual int setColor(cocos2d::_ccColor3B const&)
   virtual int updateDisplayedColor(cocos2d::_ccColor3B const&)
   virtual int setOpacityModifyRGB(bool)
   virtual int isOpacityModifyRGB(void)
   virtual int initWithTexture(cocos2d::CCTexture2D *)
   virtual int initWithTexture(cocos2d::CCTexture2D *,cocos2d::CCRect const&)
   virtual int initWithTexture(cocos2d::CCTexture2D *,cocos2d::CCRect const&,bool)
   virtual int initWithSpriteFrame(cocos2d::CCSpriteFrame *)
   virtual int initWithSpriteFrameName(char const*)
   virtual cocos2d::CCTexture2D * initWithFile(char const*)
   virtual cocos2d::CCTexture2D * initWithFile(char const*,cocos2d::CCRect const&)
   virtual int setTexture(cocos2d::CCTexture2D *)
   virtual int getTexture(void)
   virtual int setBlendFunc(cocos2d::_ccBlendFunc)
   virtual cocos2d::CCSprite * getBlendFunc(void)
   virtual int setChildColor(cocos2d::_ccColor3B const&)
   virtual int setChildOpacity(uchar)
   virtual int getBatchNode(void)
   virtual int setBatchNode(cocos2d::CCSpriteBatchNode *)
   virtual int refreshTextureRect(void)
   virtual int setTextureRect(cocos2d::CCRect const&)
   virtual int setTextureRect(cocos2d::CCRect const&,bool,cocos2d::CCSize const&)
   virtual int setVertexRect(cocos2d::CCRect const&)
   virtual int setDisplayFrame(cocos2d::CCSpriteFrame *)
   virtual signed int isFrameDisplayed(cocos2d::CCSpriteFrame *)
   virtual void * displayFrame(void)
   virtual int setDisplayFrameWithAnimationName(char const*,int)
   virtual int isDirty(void)
   virtual int setDirty(bool)
   virtual cocos2d::CCRect * setTextureCoords(cocos2d::CCRect const&)
   virtual int updateBlendFunc(void)
   virtual int setReorderChildDirtyRecursively(void)
   virtual _DWORD * setDirtyRecursively(bool)
}
class cocos2d::CCSpriteBatchNode : cocos2d::CCNode, cocos2d::CCTextureProtocol{
   int getTexture()
   int setTexture(cocos2d::CCTexture2D*)
   int appendChild(cocos2d::CCSprite*)
   int insertChild(cocos2d::CCSprite*, unsigned int)
   int removeChild(cocos2d::CCNode*, bool)
   cocos2d::CCSpriteBatchNode * getBlendFunc()
   signed int initWithFile(char const*, unsigned int)
   int reorderBatch(bool)
   int reorderChild(cocos2d::CCNode*, int)
   int setBlendFunc(cocos2d::_ccBlendFunc)
   signed int initWithTexture(cocos2d::CCTexture2D*, unsigned int)
   int sortAllChildren()
   int updateBlendFunc()
   int getAtlasCapacity()
   _DWORD * updateAtlasIndex(cocos2d::CCSprite*, int*)
   cocos2d::CCSpriteBatchNode * createWithTexture(cocos2d::CCTexture2D*)
   cocos2d::CCSpriteBatchNode * createWithTexture(cocos2d::CCTexture2D*, unsigned int)
   int atlasIndexForChild(cocos2d::CCSprite*, int)
   int removeChildAtIndex(unsigned int, bool)
   unsigned int rebuildIndexInOrder(cocos2d::CCSprite*, unsigned int)
   cocos2d::CCNode * addSpriteWithoutQuad(cocos2d::CCSprite*, unsigned int, int)
   int getUsedAtlasCapacity()
   int insertQuadFromSprite(cocos2d::CCSprite*, unsigned int)
   int updateQuadFromSprite(cocos2d::CCSprite*, unsigned int)
   unsigned int increaseAtlasCapacity(unsigned int)
   unsigned int increaseAtlasCapacity()
   int manualSortAllChildren()
   cocos2d::CCArray * removeSpriteFromAtlas(cocos2d::CCSprite*)
   int lowestAtlasIndexInChild(cocos2d::CCSprite*)
   int highestAtlasIndexInChild(cocos2d::CCSprite*)
   int removeAllChildrenWithCleanup(bool)
   int draw()
   signed int init()
   void * swap(int, int)
   int visit()
   cocos2d::CCSpriteBatchNode * create(char const*, unsigned int)
   int addChild(cocos2d::CCNode*)
   int addChild(cocos2d::CCNode*, int)
   int addChild(cocos2d::CCNode*, int, int)
   cocos2d::CCSpriteBatchNode * CCSpriteBatchNode()
   cocos2d::CCSpriteBatchNode * ~CCSpriteBatchNode()
   virtual cocos2d::CCSpriteBatchNode * ~CCSpriteBatchNode()
   virtual signed int init(void)
   virtual int addChild(cocos2d::CCNode *)
   virtual int addChild(cocos2d::CCNode *,int)
   virtual int addChild(cocos2d::CCNode *,int,int)
   virtual int removeChild(cocos2d::CCNode *,bool)
   virtual int removeAllChildrenWithCleanup(bool)
   virtual int reorderChild(cocos2d::CCNode *,int)
   virtual int sortAllChildren(void)
   virtual int draw(void)
   virtual int visit(void)
   virtual int getTexture(void)
   virtual int setTexture(cocos2d::CCTexture2D *)
   virtual int setBlendFunc(cocos2d::_ccBlendFunc)
   virtual cocos2d::CCSpriteBatchNode * getBlendFunc(void)
}
class cocos2d::CCSpriteFrame : cocos2d::CCObject{
   cocos2d::CCTexture2D * getTexture()
   int setTexture(cocos2d::CCTexture2D*)
   void * copyWithZone(cocos2d::CCZone*)
   signed int initWithTexture(cocos2d::CCTexture2D*, cocos2d::CCRect const&)
   signed int initWithTexture(cocos2d::CCTexture2D*, cocos2d::CCRect const&, bool, cocos2d::CCPoint const&, cocos2d::CCSize const&)
   int setRectInPixels(cocos2d::CCRect const&)
   void * createWithTexture(cocos2d::CCTexture2D*, cocos2d::CCRect const&)
   void * createWithTexture(cocos2d::CCTexture2D*, cocos2d::CCRect const&, bool, cocos2d::CCPoint const&, cocos2d::CCSize const&)
   char * getOffsetInPixels()
   int setOffsetInPixels(cocos2d::CCPoint const&)
   signed int initWithTextureFilename(char const*, cocos2d::CCRect const&)
   signed int initWithTextureFilename(char const*, cocos2d::CCRect const&, bool, cocos2d::CCPoint const&, cocos2d::CCSize const&)
   void * create(char const*, cocos2d::CCRect const&)
   void * create(char const*, cocos2d::CCRect const&, bool, cocos2d::CCPoint const&, cocos2d::CCSize const&)
   int setRect(cocos2d::CCRect const&)
   char * getOffset()
   int setOffset(cocos2d::CCPoint const&)
   cocos2d::CCSpriteFrame * CCSpriteFrame()
   cocos2d::CCSpriteFrame * ~CCSpriteFrame()
   virtual void * copyWithZone(cocos2d::CCZone *)
   virtual cocos2d::CCSpriteFrame * ~CCSpriteFrame()
}
class cocos2d::CCSpriteFrameCache : cocos2d::CCObject{
   _DWORD * addSpriteFrame(cocos2d::CCSpriteFrame*, char const*)
   int spriteFrameByName(char const*)
   int removeSpriteFrames()
   int sharedSpriteFrameCache()
   _DWORD * addSpriteFramesWithFile(char const*)
   _DWORD * addSpriteFramesWithFile(char const*, cocos2d::CCTexture2D*)
   _DWORD * addSpriteFramesWithFile(char const*, char const*)
   void removeSpriteFrameByName(char const*)
   void removeUnusedSpriteFrames()
   _DWORD * removeSpriteFramesFromFile(char const*)
   int purgeSharedSpriteFrameCache()
   _DWORD * addSpriteFramesWithDictionary(cocos2d::CCDictionary*, cocos2d::CCTexture2D*)
   int removeSpriteFramesFromTexture(cocos2d::CCTexture2D*)
   int removeSpriteFramesFromDictionary(cocos2d::CCDictionary*)
   signed int init()
   cocos2d::CCSpriteFrameCache * ~CCSpriteFrameCache()
   virtual cocos2d::CCSpriteFrameCache * ~CCSpriteFrameCache()
}
class cocos2d::CCNotificationCenter : cocos2d::CCObject{
   int addObserver(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), char const*, cocos2d::CCObject*)
   int removeObserver(cocos2d::CCObject*, char const*)
   signed int observerExisted(cocos2d::CCObject*, char const*)
   int postNotification(char const*)
   int postNotification(char const*, cocos2d::CCObject*)
   int removeAllObservers(cocos2d::CCObject*)
   signed int registerScriptObserver(cocos2d::CCObject*, int, char const*)
   int purgeNotificationCenter()
   int getObserverHandlerByName(char const*)
   int sharedNotificationCenter()
   int unregisterScriptObserver(cocos2d::CCObject*, char const*)
   cocos2d::CCNotificationCenter * CCNotificationCenter()
   cocos2d::CCObject * ~CCNotificationCenter()
   virtual cocos2d::CCObject * ~CCNotificationCenter()
}
class cocos2d::CCNotificationObserver : cocos2d::CCObject{
   int getHandler()
   int setHandler(int)
   cocos2d::CCNotificationObserver * getSelector()
   int performSelector(cocos2d::CCObject*)
   int getName()
   int getObject()
   int getTarget()
   int CCNotificationObserver(cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*), char const*, cocos2d::CCObject*)
   cocos2d::CCNotificationObserver * ~CCNotificationObserver()
   virtual cocos2d::CCNotificationObserver * ~CCNotificationObserver()
   virtual int getTarget(void)
   virtual cocos2d::CCNotificationObserver * getSelector(void)
   virtual int getName(void)
   virtual int getObject(void)
   virtual int getHandler(void)
   virtual int setHandler(int)
}
class cocos2d::CCProfiler : cocos2d::CCObject{
   _DWORD * releaseTimer(char const*)
   int displayTimers()
   int sharedProfiler()
   void releaseAllTimers()
   cocos2d::CCProfilingTimer * createAndAddTimerWithName(char const*)
   signed int init()
   cocos2d::CCObject * ~CCProfiler()
   virtual cocos2d::CCObject * ~CCProfiler()
}
class cocos2d::CCProfilingTimer : cocos2d::CCObject{
   void * description()
   signed int initWithName(char const*)
   int reset()
   cocos2d::CCProfilingTimer * CCProfilingTimer()
   cocos2d::CCObject * ~CCProfilingTimer()
   virtual cocos2d::CCObject * ~CCProfilingTimer()
}
class tinyxml2::XMLAttribute{
   void * SetAttribute(bool)
   void * SetAttribute(double)
   void * SetAttribute(float)
   void * SetAttribute(int)
   void * SetAttribute(unsigned int)
   void * SetAttribute(char const*)
   void * SetName(char const*)
   void * ParseDeep(char*, bool)
   tinyxml2::XMLAttribute * ~XMLAttribute()
   signed int QueryIntValue(int*) const
   signed int QueryBoolValue(bool*) const
   signed int QueryFloatValue(float*) const
   signed int QueryDoubleValue(double*) const
   signed int QueryUnsignedValue(unsigned int*) const
   virtual tinyxml2::XMLAttribute * ~XMLAttribute()
}
class tinyxml2::MemPool{
   int ~MemPool()
   virtual int ~MemPool()
}
class tinyxml2::MemPoolT<52> : tinyxml2::MemPool{
   int SetTracked()
   int Free(void*)
   _DWORD * Alloc()
   _DWORD * ~MemPoolT()
   signed int ItemSize() const
   virtual _DWORD * ~MemPoolT()
   virtual signed int ItemSize(void)
   virtual _DWORD * Alloc(void)
   virtual int Free(void *)
   virtual int SetTracked(void)
}
class tinyxml2::MemPoolT<36> : tinyxml2::MemPool{
   int SetTracked()
   int Free(void*)
   _DWORD * Alloc()
   _DWORD * ~MemPoolT()
   signed int ItemSize() const
   virtual _DWORD * ~MemPoolT()
   virtual signed int ItemSize(void)
   virtual _DWORD * Alloc(void)
   virtual int Free(void *)
   virtual int SetTracked(void)
}
class tinyxml2::MemPoolT<48> : tinyxml2::MemPool{
   int SetTracked()
   int Free(void*)
   _DWORD * Alloc()
   _DWORD * ~MemPoolT()
   signed int ItemSize() const
   virtual _DWORD * ~MemPoolT()
   virtual signed int ItemSize(void)
   virtual _DWORD * Alloc(void)
   virtual int Free(void *)
   virtual int SetTracked(void)
}
class tinyxml2::MemPoolT<44> : tinyxml2::MemPool{
   int SetTracked()
   int Free(void*)
   _DWORD * Alloc()
   _DWORD * ~MemPoolT()
   signed int ItemSize() const
   virtual _DWORD * ~MemPoolT()
   virtual signed int ItemSize(void)
   virtual _DWORD * Alloc(void)
   virtual int Free(void *)
   virtual int SetTracked(void)
}
class tinyxml2::XMLNode{
   int ToDocument()
   int DeleteChild(tinyxml2::XMLNode*)
   int ToDeclaration()
   int DeleteChildren()
   tinyxml2::XMLNode * InsertEndChild(tinyxml2::XMLNode*)
   tinyxml2::XMLNode * InsertAfterChild(tinyxml2::XMLNode*, tinyxml2::XMLNode*)
   tinyxml2::XMLNode * InsertFirstChild(tinyxml2::XMLNode*)
   int ToText()
   int Unlink(tinyxml2::XMLNode*)
   void SetValue(char const*, bool)
   char * ParseDeep(char*, tinyxml2::StrPair*)
   int ToComment()
   int ToElement()
   int ToUnknown()
   int XMLNode(tinyxml2::XMLDocument*)
   tinyxml2::XMLNode * ~XMLNode()
   int ToDocument() const
   int ToDeclaration() const
   int LastChildElement(char const*) const
   int FirstChildElement(char const*) const
   int NextSiblingElement(char const*) const
   int PreviousSiblingElement(char const*) const
   int ToText() const
   int ToComment() const
   int ToElement() const
   int ToUnknown() const
   virtual int ToElement(void)
   virtual int ToText(void)
   virtual int ToComment(void)
   virtual int ToDocument(void)
   virtual int ToDeclaration(void)
   virtual int ToUnknown(void)
   virtual char * ParseDeep(char *,tinyxml2::StrPair *)
   virtual tinyxml2::XMLNode * ~XMLNode()
}
class tinyxml2::XMLText : tinyxml2::XMLNode{
    ToText()
   int ParseDeep(char*, tinyxml2::StrPair*)
   tinyxml2::XMLText * ~XMLText()
   _DWORD * ShallowClone(tinyxml2::XMLDocument*) const
   signed int ShallowEqual(tinyxml2::XMLNode const*) const
   int Accept(tinyxml2::XMLVisitor*) const
    ToText() const
   virtual  ToText(void)
   virtual _DWORD * ShallowClone(tinyxml2::XMLDocument *)
   virtual signed int ShallowEqual(tinyxml2::XMLNode const*)
   virtual int Accept(tinyxml2::XMLVisitor *)
   virtual int ParseDeep(char *,tinyxml2::StrPair *)
   virtual tinyxml2::XMLText * ~XMLText()
}
class tinyxml2::XMLComment : tinyxml2::XMLNode{
   int ParseDeep(char*, tinyxml2::StrPair*)
    ToComment()
   tinyxml2::XMLComment * XMLComment(tinyxml2::XMLDocument*)
   tinyxml2::XMLComment * ~XMLComment()
   tinyxml2::XMLComment * ShallowClone(tinyxml2::XMLDocument*) const
   signed int ShallowEqual(tinyxml2::XMLNode const*) const
   int Accept(tinyxml2::XMLVisitor*) const
    ToComment() const
   virtual  ToComment(void)
   virtual tinyxml2::XMLComment * ShallowClone(tinyxml2::XMLDocument *)
   virtual signed int ShallowEqual(tinyxml2::XMLNode const*)
   virtual int Accept(tinyxml2::XMLVisitor *)
   virtual int ParseDeep(char *,tinyxml2::StrPair *)
   virtual tinyxml2::XMLComment * ~XMLComment()
}
class tinyxml2::XMLDeclaration : tinyxml2::XMLNode{
    ToDeclaration()
   int ParseDeep(char*, tinyxml2::StrPair*)
   tinyxml2::XMLDeclaration * XMLDeclaration(tinyxml2::XMLDocument*)
   tinyxml2::XMLDeclaration * ~XMLDeclaration()
   tinyxml2::XMLDeclaration * ShallowClone(tinyxml2::XMLDocument*) const
   signed int ShallowEqual(tinyxml2::XMLNode const*) const
    ToDeclaration() const
   int Accept(tinyxml2::XMLVisitor*) const
   virtual  ToDeclaration(void)
   virtual tinyxml2::XMLDeclaration * ShallowClone(tinyxml2::XMLDocument *)
   virtual signed int ShallowEqual(tinyxml2::XMLNode const*)
   virtual int Accept(tinyxml2::XMLVisitor *)
   virtual int ParseDeep(char *,tinyxml2::StrPair *)
   virtual tinyxml2::XMLDeclaration * ~XMLDeclaration()
}
class tinyxml2::XMLUnknown : tinyxml2::XMLNode{
   int ParseDeep(char*, tinyxml2::StrPair*)
    ToUnknown()
   tinyxml2::XMLUnknown * XMLUnknown(tinyxml2::XMLDocument*)
   tinyxml2::XMLUnknown * ~XMLUnknown()
   tinyxml2::XMLUnknown * ShallowClone(tinyxml2::XMLDocument*) const
   signed int ShallowEqual(tinyxml2::XMLNode const*) const
   int Accept(tinyxml2::XMLVisitor*) const
    ToUnknown() const
   virtual  ToUnknown(void)
   virtual tinyxml2::XMLUnknown * ShallowClone(tinyxml2::XMLDocument *)
   virtual signed int ShallowEqual(tinyxml2::XMLNode const*)
   virtual int Accept(tinyxml2::XMLVisitor *)
   virtual int ParseDeep(char *,tinyxml2::StrPair *)
   virtual tinyxml2::XMLUnknown * ~XMLUnknown()
}
class tinyxml2::XMLElement : tinyxml2::XMLNode{
   int FindAttribute(char const*)
   int DeleteAttribute(char const*)
   int ParseAttributes(char*)
   tinyxml2::XMLAttribute * FindOrCreateAttribute(char const*)
   char * ParseDeep(char*, tinyxml2::StrPair*)
    ToElement()
   tinyxml2::XMLElement * XMLElement(tinyxml2::XMLDocument*)
   tinyxml2::XMLElement * ~XMLElement()
   signed int QueryIntText(int*) const
   tinyxml2::XMLElement * ShallowClone(tinyxml2::XMLDocument*) const
   signed int ShallowEqual(tinyxml2::XMLNode const*) const
   int FindAttribute(char const*) const
   signed int QueryBoolText(bool*) const
   signed int QueryFloatText(float*) const
   signed int QueryDoubleText(double*) const
   signed int QueryUnsignedText(unsigned int*) const
   int Accept(tinyxml2::XMLVisitor*) const
   int GetText() const
   int Attribute(char const*, char const*) const
    ToElement() const
   virtual  ToElement(void)
   virtual tinyxml2::XMLElement * ShallowClone(tinyxml2::XMLDocument *)
   virtual signed int ShallowEqual(tinyxml2::XMLNode const*)
   virtual int Accept(tinyxml2::XMLVisitor *)
   virtual char * ParseDeep(char *,tinyxml2::StrPair *)
   virtual tinyxml2::XMLElement * ~XMLElement()
}
class tinyxml2::XMLDocument : tinyxml2::XMLNode{
   tinyxml2::XMLComment * NewComment(char const*)
   tinyxml2::XMLElement * NewElement(char const*)
   tinyxml2::XMLUnknown * NewUnknown(char const*)
    ToDocument()
   void InitDocument()
   tinyxml2::XMLDeclaration * NewDeclaration(char const*)
   int Parse(char const*, unsigned int)
   int Print(tinyxml2::XMLPrinter*)
   _DWORD * NewText(char const*)
   tinyxml2::XMLUtil * Identify(char*, tinyxml2::XMLNode**)
   int LoadFile(__sFILE*)
   int LoadFile(char const*)
   int SaveFile(__sFILE*, bool)
   int SaveFile(char const*, bool)
   int SetError(tinyxml2::XMLError, char const*, char const*)
   int XMLDocument(bool, tinyxml2::Whitespace)
   tinyxml2::XMLDocument * ~XMLDocument()
   int PrintError() const
    ToDocument() const
   int ShallowClone(tinyxml2::XMLDocument*) const
   int ShallowEqual(tinyxml2::XMLNode const*) const
   int Accept(tinyxml2::XMLVisitor*) const
   virtual  ToDocument(void)
   virtual int ShallowClone(tinyxml2::XMLDocument*)
   virtual int ShallowEqual(tinyxml2::XMLNode const*)
   virtual int Accept(tinyxml2::XMLVisitor *)
   virtual tinyxml2::XMLDocument * ~XMLDocument()
}
class tinyxml2::XMLPrinter : tinyxml2::XMLVisitor{
   int PrintSpace(int)
   int PushHeader(bool, bool)
   signed int VisitEnter(tinyxml2::XMLElement const&, tinyxml2::XMLAttribute const*)
   signed int VisitEnter(tinyxml2::XMLDocument const&)
   int OpenElement(char const*)
   int PrintString(char const*, bool)
   int PushComment(char const*)
   int PushUnknown(char const*)
   int SealElement()
   int CloseElement()
   int PushAttribute(char const*, bool)
   int PushAttribute(char const*, double)
   int PushAttribute(char const*, int)
   int PushAttribute(char const*, unsigned int)
   int PushAttribute(char const*, char const*)
   int PushDeclaration(char const*)
   int Print(char const*, ...)
   signed int Visit(tinyxml2::XMLComment const&)
   signed int Visit(tinyxml2::XMLUnknown const&)
   signed int Visit(tinyxml2::XMLDeclaration const&)
   signed int Visit(tinyxml2::XMLText const&)
   int PushText(bool)
   int PushText(double)
   int PushText(float)
   int PushText(int)
   int PushText(unsigned int)
   int PushText(char const*, bool)
   signed int VisitExit(tinyxml2::XMLElement const&)
   signed int VisitExit(tinyxml2::XMLDocument const&)
   int XMLPrinter(__sFILE*, bool)
   tinyxml2::XMLPrinter * ~XMLPrinter()
   virtual tinyxml2::XMLPrinter * ~XMLPrinter()
   virtual signed int VisitEnter(tinyxml2::XMLDocument const&)
   virtual signed int VisitExit(tinyxml2::XMLDocument const&)
   virtual signed int VisitEnter(tinyxml2::XMLElement const&,tinyxml2::XMLAttribute const*)
   virtual signed int VisitExit(tinyxml2::XMLElement const&)
   virtual signed int Visit(tinyxml2::XMLDeclaration const&)
   virtual signed int Visit(tinyxml2::XMLText const&)
   virtual signed int Visit(tinyxml2::XMLComment const&)
   virtual signed int Visit(tinyxml2::XMLUnknown const&)
}
class cocos2d::ZipFile{
   void * getFileData(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)
   void * getFileData(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*, cocos2d::ZipFilePrivate*)
   signed int setFilter(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   signed int setFilter(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cocos2d::ZipFilePrivate*)
   int ZipFile(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   cocos2d::ZipFile * ~ZipFile()
   int fileExists(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
   virtual cocos2d::ZipFile * ~ZipFile()
}
class cocos2d::CCComponent : cocos2d::CCObject{
   int setEnabled(bool)
   signed int init()
   cocos2d::CCComponent * create()
    onExit()
    update(float)
    onEnter()
   int * setName(char const*)
   int setOwner(cocos2d::CCNode*)
   signed int serialize(void*)
   cocos2d::CCComponent * CCComponent()
   cocos2d::CCObject * ~CCComponent()
   int getName() const
   int getOwner() const
   int isEnabled() const
   virtual cocos2d::CCObject * ~CCComponent()
   virtual  update(float)
   virtual signed int init(void)
   virtual  onEnter(void)
   virtual  onExit(void)
   virtual signed int serialize(void *)
   virtual int isEnabled(void)
   virtual int setEnabled(bool)
}
class cocos2d::CCComponentContainer{
   signed int add(cocos2d::CCComponent*)
   int alloc()
   int visit(float)
   signed int remove(char const*)
   signed int remove(cocos2d::CCComponent*)
   int removeAll()
   int CCComponentContainer(cocos2d::CCNode*)
   cocos2d::CCComponentContainer * ~CCComponentContainer()
   const char * get(char const*) const
   signed int isEmpty() const
   virtual cocos2d::CCComponentContainer * ~CCComponentContainer()
   virtual const char * get(char const*)
   virtual signed int add(cocos2d::CCComponent *)
   virtual signed int remove(char const*)
   virtual signed int remove(cocos2d::CCComponent *)
   virtual int removeAll(void)
   virtual int visit(float)
}
class cocos2d::CCIMEDelegate{
    insertText(char const*, int)
   int attachWithIME()
   int detachWithIME()
    deleteBackward()
   int getContentText()
    keyboardDidHide(cocos2d::CCIMEKeyboardNotificationInfo&)
    keyboardDidShow(cocos2d::CCIMEKeyboardNotificationInfo&)
   int canAttachWithIME()
   int canDetachWithIME()
    didAttachWithIME()
    didDetachWithIME()
    keyboardWillHide(cocos2d::CCIMEKeyboardNotificationInfo&)
    keyboardWillShow(cocos2d::CCIMEKeyboardNotificationInfo&)
   cocos2d::CCIMEDelegate * CCIMEDelegate()
   cocos2d::CCIMEDelegate * ~CCIMEDelegate()
   virtual cocos2d::CCIMEDelegate * ~CCIMEDelegate()
   virtual int attachWithIME(void)
   virtual int detachWithIME(void)
   virtual int canAttachWithIME(void)
   virtual  didAttachWithIME(void)
   virtual int canDetachWithIME(void)
   virtual  didDetachWithIME(void)
   virtual  insertText(char const*,int)
   virtual  deleteBackward(void)
   virtual int getContentText(void)
   virtual  keyboardWillShow(cocos2d::CCIMEKeyboardNotificationInfo &)
   virtual  keyboardDidShow(cocos2d::CCIMEKeyboardNotificationInfo &)
   virtual  keyboardWillHide(cocos2d::CCIMEKeyboardNotificationInfo &)
   virtual  keyboardDidHide(cocos2d::CCIMEKeyboardNotificationInfo &)
}
class cocos2d::CCTextFieldTTF : cocos2d::CCLabelTTF, cocos2d::CCIMEDelegate{
   _DWORD * insertText(char const*, int)
   cocos2d::CCDirector * attachWithIME()
   cocos2d::CCDirector * detachWithIME()
   int deleteBackward()
   int getContentText()
   int getPlaceHolder()
   const char * setPlaceHolder(char const*)
   signed int canAttachWithIME()
   signed int canDetachWithIME()
   int isSecureTextEntry()
   int setSecureTextEntry(bool)
   char * getColorSpaceHolder()
   cocos2d::CCShaderCache * initWithPlaceHolder(char const*, cocos2d::CCSize const&, cocos2d::CCTextAlignment, char const*, float)
   cocos2d::CCShaderCache * initWithPlaceHolder(char const*, char const*, float)
   void * setColorSpaceHolder(cocos2d::_ccColor3B const&)
   cocos2d::CCTextFieldTTF * textFieldWithPlaceHolder(char const*, cocos2d::CCSize const&, cocos2d::CCTextAlignment, char const*, float)
   cocos2d::CCTextFieldTTF * textFieldWithPlaceHolder(char const*, char const*, float)
   void draw()
   int getString()
   _DWORD * setString(char const*)
   cocos2d::CCTextFieldTTF * CCTextFieldTTF()
   cocos2d::CCTextFieldTTF * ~CCTextFieldTTF()
   virtual cocos2d::CCTextFieldTTF * ~CCTextFieldTTF()
   virtual void draw(void)
   virtual _DWORD * setString(char const*)
   virtual int getString(void)
   virtual cocos2d::CCDirector * attachWithIME(void)
   virtual cocos2d::CCDirector * detachWithIME(void)
   virtual char * getColorSpaceHolder(void)
   virtual void * setColorSpaceHolder(cocos2d::_ccColor3B const&)
   virtual const char * setPlaceHolder(char const*)
   virtual int getPlaceHolder(void)
   virtual int setSecureTextEntry(bool)
   virtual int isSecureTextEntry(void)
   virtual signed int canAttachWithIME(void)
   virtual signed int canDetachWithIME(void)
   virtual _DWORD * insertText(char const*,int)
   virtual int deleteBackward(void)
   virtual int getContentText(void)
}
class cocos2d::CCTexture2D : cocos2d::CCObject{
   void drawInRect(cocos2d::CCRect const&)
   int hasMipmaps()
   int description()
   void drawAtPoint(cocos2d::CCPoint const&)
   void releaseData(void*)
   signed int initWithData(void const*, cocos2d::CCTexture2DPixelFormat, unsigned int, unsigned int, cocos2d::CCSize const&)
   int getPixelsHigh()
   int getPixelsWide()
   signed int initWithImage(cocos2d::CCImage*)
   int generateMipmap()
   cocos2d::CCTexture2D * getContentSize()
   int getPixelFormat()
   int initWithString(char const*, cocos2d::_ccFontDefinition*)
   int initWithString(char const*, char const*, float)
   int initWithString(char const*, char const*, float, cocos2d::CCSize const&, cocos2d::CCTextAlignment, cocos2d::CCVerticalTextAlignment)
   signed int initWithETCFile(char const*)
   signed int initWithPVRFile(char const*)
   const char * stringForFormat()
   int getShaderProgram()
   cocos2d * releaseGLTexture()
   int setShaderProgram(cocos2d::CCGLProgram*)
   cocos2d::VolatileTexture * setTexParameters(cocos2d::_ccTexParams*)
   signed int bitsPerPixelForFormat(cocos2d::CCTexture2DPixelFormat)
   signed int bitsPerPixelForFormat()
   int hasPremultipliedAlpha()
   __int64 setAliasTexParameters()
   char * getContentSizeInPixels()
   int defaultAlphaPixelFormat()
   cocos2d::VolatileTexture * setAntiAliasTexParameters()
   int setDefaultAlphaPixelFormat(cocos2d::CCTexture2DPixelFormat)
   int PVRImagesHavePremultipliedAlpha(bool)
   signed int initPremultipliedATextureWithImage(cocos2d::CCImage*, unsigned int, unsigned int)
   int getMaxS()
   int getMaxT()
   int getName()
   int setMaxS(float)
   int setMaxT(float)
   void * keepData(void*, unsigned int)
   cocos2d::CCTexture2D * CCTexture2D()
   cocos2d::CCTexture2D * ~CCTexture2D()
   virtual cocos2d::CCTexture2D * ~CCTexture2D()
   virtual int getPixelFormat(void)
   virtual int getPixelsWide(void)
   virtual int getPixelsHigh(void)
   virtual int getName(void)
   virtual int getMaxS(void)
   virtual int setMaxS(float)
   virtual int getMaxT(void)
   virtual int setMaxT(float)
   virtual cocos2d::CCTexture2D * getContentSize(void)
   virtual int getShaderProgram(void)
   virtual int setShaderProgram(cocos2d::CCGLProgram *)
}
class cocos2d::CCTextureAtlas : cocos2d::CCObject{
   int getTexture()
   void * insertQuad(cocos2d::_ccV3F_C4B_T2F_Quad*, unsigned int)
   int mapBuffers()
   int setTexture(cocos2d::CCTexture2D*)
   void * updateQuad(cocos2d::_ccV3F_C4B_T2F_Quad*, unsigned int)
   int description()
   int getCapacity()
   _DWORD * insertQuads(cocos2d::_ccV3F_C4B_T2F_Quad*, unsigned int, unsigned int)
   cocos2d::CCTexture2D * initWithFile(char const*, unsigned int)
   int setupIndices()
   int getTotalQuads()
   int removeAllQuads()
   signed int resizeCapacity(unsigned int)
   int initWithTexture(cocos2d::CCTexture2D*, unsigned int)
   cocos2d::CCTextureAtlas * createWithTexture(cocos2d::CCTexture2D*, unsigned int)
   int drawNumberOfQuads(unsigned int)
   int drawNumberOfQuads(unsigned int, unsigned int)
   int removeQuadAtIndex(unsigned int)
   int moveQuadsFromIndex(unsigned int, unsigned int)
   int moveQuadsFromIndex(unsigned int, unsigned int, unsigned int)
   char * removeQuadsAtIndex(unsigned int, unsigned int)
   int insertQuadFromIndex(unsigned int, unsigned int)
   int increaseTotalQuadsWith(unsigned int)
   int listenBackToForeground(cocos2d::CCObject*)
   void * fillWithEmptyQuadsFromIndex(unsigned int, unsigned int)
   cocos2d::CCTextureAtlas * create(char const*, unsigned int)
   int getQuads()
   int setQuads(cocos2d::_ccV3F_C4B_T2F_Quad*)
   int setupVBO()
   int drawQuads()
   cocos2d::CCTextureAtlas * CCTextureAtlas()
   cocos2d::CCTextureAtlas * ~CCTextureAtlas()
   virtual cocos2d::CCTextureAtlas * ~CCTextureAtlas()
   virtual int getTotalQuads(void)
   virtual int getCapacity(void)
   virtual int getTexture(void)
   virtual int setTexture(cocos2d::CCTexture2D *)
   virtual int getQuads(void)
   virtual int setQuads(cocos2d::_ccV3F_C4B_T2F_Quad *)
}
class cocos2d::CCTextureCache : cocos2d::CCObject{
   cocos2d::CCTexture2D * addUIImage(cocos2d::CCImage*, char const*)
   int addETCImage(char const*)
   int addPVRImage(char const*)
   int description()
   void addImageAsync(char const*, cocos2d::CCObject*, void (cocos2d::CCObject::*)(cocos2d::CCObject*))
   cocos2d::CCImage * reloadTexture(char const*)
   int removeTexture(cocos2d::CCTexture2D*)
   int textureForKey(char const*)
   cocos2d::CCDictionary * snapshotTextures()
   _DWORD reloadAllTextures()
   void removeAllTextures()
   int sharedTextureCache()
   int removeTextureForKey(char const*)
   cocos2d::CCTextureCache * removeUnusedTextures()
   void addImageAsyncCallBack(float)
   int dumpCachedTextureInfo()
   int purgeSharedTextureCache()
   cocos2d::CCTexture2D * addImage(char const*, bool)
   cocos2d::CCTextureCache * CCTextureCache()
   cocos2d::CCTextureCache * ~CCTextureCache()
   virtual cocos2d::CCTextureCache * ~CCTextureCache()
}
class cocos2d::CCTextureETC : cocos2d::CCObject{
   signed int loadTexture(char const*)
   signed int initWithFile(char const*)
   cocos2d::CCTextureETC * CCTextureETC()
   cocos2d::CCTextureETC * ~CCTextureETC()
   int getName() const
   int getWidth() const
   int getHeight() const
   virtual cocos2d::CCTextureETC * ~CCTextureETC()
}
class cocos2d::CCTexturePVR : cocos2d::CCObject{
   int createGLTexture()
   int unpackPVRv2Data(unsigned char*, unsigned int)
   int unpackPVRv3Data(unsigned char*, unsigned int)
   signed int initWithContentsOfFile(char const*)
   int create(char const*)
   cocos2d::CCTexturePVR * CCTexturePVR()
   cocos2d::CCTexturePVR * ~CCTexturePVR()
   virtual cocos2d::CCTexturePVR * ~CCTexturePVR()
}
class cocos2d::CCPointObject{
   void * pointWithCCPoint(cocos2d::CCPoint, cocos2d::CCPoint)
   cocos2d::CCPointObject * ~CCPointObject()
   virtual cocos2d::CCPointObject * ~CCPointObject()
}
class cocos2d::CCParallaxNode : cocos2d::CCNode{
   int * removeChild(cocos2d::CCNode*, bool)
   cocos2d::CCParallaxNode * absolutePosition()
   cocos2d::CCArray * removeAllChildrenWithCleanup(bool)
   int visit()
   cocos2d::CCParallaxNode * create()
   int addChild(cocos2d::CCNode*, unsigned int, int)
   int addChild(cocos2d::CCNode*, unsigned int, cocos2d::CCPoint const&, cocos2d::CCPoint const&)
   cocos2d::CCParallaxNode * CCParallaxNode()
   cocos2d::CCParallaxNode * ~CCParallaxNode()
   virtual cocos2d::CCParallaxNode * ~CCParallaxNode()
   virtual int * removeChild(cocos2d::CCNode *,bool)
   virtual cocos2d::CCArray * removeAllChildrenWithCleanup(bool)
   virtual int visit(void)
   virtual int addChild(cocos2d::CCNode *,uint,cocos2d::CCPoint const&,cocos2d::CCPoint const&)
   virtual int addChild(cocos2d::CCNode *,uint,int)
}
class cocos2d::CCTMXLayer : cocos2d::CCSpriteBatchNode{
   int getTileSet()
   cocos2d::CCTMXLayer * positionAt(cocos2d::CCPoint const&)
   void releaseMap()
   cocos2d::CCSprite * setTileGID(unsigned int, cocos2d::CCPoint const&)
   cocos2d::CCSprite * setTileGID(unsigned int, cocos2d::CCPoint const&, cocos2d::ccTMXTileFlags_)
   int setTileSet(cocos2d::CCTMXTilesetInfo*)
   cocos2d::CCSprite * setupTiles()
   int removeChild(cocos2d::CCNode*, bool)
   cocos2d::CCArray * removeTileAt(cocos2d::CCPoint const&)
   int getProperties()
   int propertyNamed(char const*)
   int setProperties(cocos2d::CCDictionary*)
   int vertexZForPos(cocos2d::CCPoint const&)
   int setupTileSprite(cocos2d::CCSprite*, cocos2d::CCPoint, unsigned int)
   cocos2d::CCSprite * appendTileForGID(unsigned int, cocos2d::CCPoint const&)
   cocos2d::CCSprite * insertTileForGID(unsigned int, cocos2d::CCPoint const&)
   cocos2d::CCTMXLayer * positionForHexAt(cocos2d::CCPoint const&)
   cocos2d::CCTMXLayer * positionForIsoAt(cocos2d::CCPoint const&)
   int updateTileForGID(unsigned int, cocos2d::CCPoint const&)
   int atlasIndexForNewZ(int)
   cocos2d::CCTMXLayer * positionForOrthoAt(cocos2d::CCPoint const&)
   int reusedTileWithRect(cocos2d::CCRect)
   signed int initWithTilesetInfo(cocos2d::CCTMXTilesetInfo*, cocos2d::CCTMXLayerInfo*, cocos2d::CCTMXMapInfo*)
   cocos2d::CCTMXLayer * calculateLayerOffset(cocos2d::CCPoint const&)
   unsigned int atlasIndexForExistantZ(unsigned int)
   int parseInternalProperties()
   cocos2d::CCTMXLayer * create(cocos2d::CCTMXTilesetInfo*, cocos2d::CCTMXLayerInfo*, cocos2d::CCTMXMapInfo*)
   cocos2d::CCSprite * tileAt(cocos2d::CCPoint const&)
    addChild(cocos2d::CCNode*, int, int)
   int tileGIDAt(cocos2d::CCPoint const&)
   int tileGIDAt(cocos2d::CCPoint const&, cocos2d::ccTMXTileFlags_*)
   cocos2d::CCTMXLayer * CCTMXLayer()
   cocos2d::CCTMXLayer * ~CCTMXLayer()
   virtual cocos2d::CCTMXLayer * ~CCTMXLayer()
   virtual  addChild(cocos2d::CCNode *,int,int)
   virtual int removeChild(cocos2d::CCNode *,bool)
   virtual int getTileSet(void)
   virtual int setTileSet(cocos2d::CCTMXTilesetInfo *)
   virtual int getProperties(void)
   virtual int setProperties(cocos2d::CCDictionary *)
}
class cocos2d::CCTMXObjectGroup : cocos2d::CCObject{
   int getObjects()
   int setObjects(cocos2d::CCArray*)
   int objectNamed(char const*)
   int getProperties()
   int propertyNamed(char const*)
   int setProperties(cocos2d::CCDictionary*)
   cocos2d::CCTMXObjectGroup * CCTMXObjectGroup()
   cocos2d::CCTMXObjectGroup * ~CCTMXObjectGroup()
   virtual cocos2d::CCTMXObjectGroup * ~CCTMXObjectGroup()
   virtual int getProperties(void)
   virtual int setProperties(cocos2d::CCDictionary *)
   virtual int getObjects(void)
   virtual int setObjects(cocos2d::CCArray *)
}
class cocos2d::CCTMXTiledMap : cocos2d::CCNode{
   _DWORD * layerNamed(char const*)
   cocos2d::CCTMXLayer * parseLayer(cocos2d::CCTMXLayerInfo*, cocos2d::CCTMXMapInfo*)
   signed int initWithXML(char const*, char const*)
   cocos2d::CCTMXTiledMap * createWithXML(char const*, char const*)
   int getProperties()
   int propertyNamed(char const*)
   int setProperties(cocos2d::CCDictionary*)
   int getObjectGroups()
   cocos2d::CCTMXMapInfo * initWithTMXFile(char const*)
   int setObjectGroups(cocos2d::CCArray*)
   int tilesetForLayer(cocos2d::CCTMXLayerInfo*, cocos2d::CCTMXMapInfo*)
   cocos2d::CCArray * buildWithMapInfo(cocos2d::CCTMXMapInfo*)
   int objectGroupNamed(char const*)
   int propertiesForGID(int)
   cocos2d::CCTMXTiledMap * create(char const*)
   cocos2d::CCTMXTiledMap * CCTMXTiledMap()
   cocos2d::CCTMXTiledMap * ~CCTMXTiledMap()
   virtual cocos2d::CCTMXTiledMap * ~CCTMXTiledMap()
   virtual int getObjectGroups(void)
   virtual int setObjectGroups(cocos2d::CCArray *)
   virtual int getProperties(void)
   virtual int setProperties(cocos2d::CCDictionary *)
}
class cocos2d::CCTMXLayerInfo : cocos2d::CCObject{
   int getProperties()
   int setProperties(cocos2d::CCDictionary*)
   cocos2d::CCTMXLayerInfo * CCTMXLayerInfo()
   cocos2d::CCTMXLayerInfo * ~CCTMXLayerInfo()
   virtual cocos2d::CCTMXLayerInfo * ~CCTMXLayerInfo()
   virtual int getProperties(void)
   virtual int setProperties(cocos2d::CCDictionary *)
}
class cocos2d::CCTMXTilesetInfo : cocos2d::CCObject{
   cocos2d::CCTMXTilesetInfo * rectForGID(unsigned int)
   cocos2d::CCTMXTilesetInfo * CCTMXTilesetInfo()
   cocos2d::CCTMXTilesetInfo * ~CCTMXTilesetInfo()
   virtual cocos2d::CCTMXTilesetInfo * ~CCTMXTilesetInfo()
}
class cocos2d::CCTMXMapInfo : cocos2d::CCObject, cocos2d::CCSAXDelegator{
   _DWORD * endElement(void*, char const*)
   int getTilesets()
   signed int initWithXML(char const*, char const*)
   int setTilesets(cocos2d::CCArray*)
   _DWORD * textHandler(void*, char const*, int)
   int * internalInit(char const*, char const*)
   int parseXMLFile(char const*)
   _DWORD * startElement(void*, char const*, char const**)
   cocos2d::CCTMXMapInfo * formatWithXML(char const*, char const*)
   int getProperties()
   int setProperties(cocos2d::CCDictionary*)
   signed int parseXMLString(char const*)
   int getObjectGroups()
   int initWithTMXFile(char const*)
   int setObjectGroups(cocos2d::CCArray*)
   cocos2d::CCTMXMapInfo * formatWithTMXFile(char const*)
   int getTileProperties()
   int setTileProperties(cocos2d::CCDictionary*)
   int getLayers()
   int setLayers(cocos2d::CCArray*)
   cocos2d::CCTMXMapInfo * CCTMXMapInfo()
   cocos2d::CCTMXMapInfo * ~CCTMXMapInfo()
   virtual cocos2d::CCTMXMapInfo * ~CCTMXMapInfo()
   virtual int getLayers(void)
   virtual int setLayers(cocos2d::CCArray *)
   virtual int getTilesets(void)
   virtual int setTilesets(cocos2d::CCArray *)
   virtual int getObjectGroups(void)
   virtual int setObjectGroups(cocos2d::CCArray *)
   virtual int getProperties(void)
   virtual int setProperties(cocos2d::CCDictionary *)
   virtual _DWORD * startElement(void *,char const*,char const**)
   virtual _DWORD * endElement(void *,char const*)
   virtual _DWORD * textHandler(void *,char const*,int)
}
class cocos2d::CCTileMapAtlas : cocos2d::CCAtlasNode{
   int getTGAInfo()
   int releaseMap()
   int setTGAInfo(cocos2d::sImageTGA*)
   _DWORD * loadTGAfile(char const*)
   signed int initWithTileFile(char const*, char const*, int, int)
   int updateAtlasValues()
   unsigned int updateAtlasValueAt(cocos2d::CCPoint const&, cocos2d::_ccColor3B const&, unsigned int)
   int calculateItemsToRender()
   cocos2d::CCTileMapAtlas * create(char const*, char const*, int, int)
   unsigned int tileAt(cocos2d::CCPoint const&)
   void * setTile(cocos2d::_ccColor3B const&, cocos2d::CCPoint const&)
   cocos2d::CCTileMapAtlas * CCTileMapAtlas()
   cocos2d::CCTileMapAtlas * ~CCTileMapAtlas()
   virtual cocos2d::CCTileMapAtlas * ~CCTileMapAtlas()
   virtual int updateAtlasValues(void)
   virtual int getTGAInfo(void)
   virtual int setTGAInfo(cocos2d::sImageTGA *)
}
class cocos2d::CCTouchDispatcher : cocos2d::CCObject, cocos2d::EGLTouchDelegate{
   cocos2d::CCTouchHandler * findHandler(cocos2d::CCTouchDelegate*)
   cocos2d::CCTouchHandler * findHandler(cocos2d::CCArray*, cocos2d::CCTouchDelegate*)
   char * setPriority(int, cocos2d::CCTouchDelegate*)
   cocos2d::CCTouchHandler * touchesBegan(cocos2d::CCSet*, cocos2d::CCEvent*)
   cocos2d::CCTouchHandler * touchesEnded(cocos2d::CCSet*, cocos2d::CCEvent*)
   cocos2d::CCTouchHandler * touchesMoved(cocos2d::CCSet*, cocos2d::CCEvent*)
   int removeDelegate(cocos2d::CCTouchDelegate*)
   int forceAddHandler(cocos2d::CCTouchHandler*, cocos2d::CCArray*)
   int isDispatchEvents()
   cocos2d::CCTouchHandler * touchesCancelled(cocos2d::CCSet*, cocos2d::CCEvent*)
   char * rearrangeHandlers(cocos2d::CCArray*)
   int setDispatchEvents(bool)
   int decrementForcePrio(int)
   int incrementForcePrio(int)
   int removeAllDelegates()
   int addStandardDelegate(cocos2d::CCTouchDelegate*, int)
   int addTargetedDelegate(cocos2d::CCTouchDelegate*, int, bool)
   int forceRemoveDelegate(cocos2d::CCTouchDelegate*)
   int forceRemoveAllDelegates()
   signed int init()
   cocos2d::CCTouchHandler * touches(cocos2d::CCSet*, cocos2d::CCEvent*, unsigned int)
   cocos2d::CCTouchDispatcher * ~CCTouchDispatcher()
   virtual cocos2d::CCTouchDispatcher * ~CCTouchDispatcher()
   virtual cocos2d::CCTouchHandler * touchesBegan(cocos2d::CCSet *,cocos2d::CCEvent *)
   virtual cocos2d::CCTouchHandler * touchesMoved(cocos2d::CCSet *,cocos2d::CCEvent *)
   virtual cocos2d::CCTouchHandler * touchesEnded(cocos2d::CCSet *,cocos2d::CCEvent *)
   virtual cocos2d::CCTouchHandler * touchesCancelled(cocos2d::CCSet *,cocos2d::CCEvent *)
}
class cocos2d::CCTouchHandler : cocos2d::CCObject{
   int getDelegate()
   int getPriority()
   _DWORD * setDelegate(cocos2d::CCTouchDelegate*)
   int setPriority(int)
   signed int initWithDelegate(cocos2d::CCTouchDelegate*, int)
   int getEnabledSelectors()
   void * handlerWithDelegate(cocos2d::CCTouchDelegate*, int)
   int setEnalbedSelectors(int)
   cocos2d::CCObject * ~CCTouchHandler()
   virtual cocos2d::CCObject * ~CCTouchHandler()
   virtual signed int initWithDelegate(cocos2d::CCTouchDelegate *,int)
}
class cocos2d::CCStandardTouchHandler : cocos2d::CCTouchHandler{
   _DWORD initWithDelegate(cocos2d::CCTouchDelegate*, int)
   void * handlerWithDelegate(cocos2d::CCTouchDelegate*, int)
   cocos2d::CCStandardTouchHandler * ~CCStandardTouchHandler()
   virtual cocos2d::CCStandardTouchHandler * ~CCStandardTouchHandler()
   virtual _DWORD initWithDelegate(cocos2d::CCTouchDelegate *,int)
}
class cocos2d::CCTargetedTouchHandler : cocos2d::CCTouchHandler{
   signed int initWithDelegate(cocos2d::CCTouchDelegate*, int, bool)
   int getClaimedTouches()
   int isSwallowsTouches()
   int setSwallowsTouches(bool)
   void * handlerWithDelegate(cocos2d::CCTouchDelegate*, int, bool)
   cocos2d::CCTouchHandler * ~CCTargetedTouchHandler()
   virtual cocos2d::CCTouchHandler * ~CCTargetedTouchHandler()
}
class cocos2d::CCKeyboardDispatcher : cocos2d::CCObject{
   cocos2d::CCObject * addDelegate(cocos2d::CCKeyboardDelegate*)
   const char * keyToString(cocos2d::enumKeyCodes)
   signed int convertKeyCode(cocos2d::enumKeyCodes)
   int * removeDelegate(cocos2d::CCKeyboardDelegate*)
   cocos2d::CCObject * forceAddDelegate(cocos2d::CCKeyboardDelegate*)
   int updateModifierKeys(bool, bool, bool, bool)
   signed int dispatchKeyboardMSG(cocos2d::enumKeyCodes, bool)
   int * forceRemoveDelegate(cocos2d::CCKeyboardDelegate*)
   cocos2d::CCKeyboardDispatcher * CCKeyboardDispatcher()
   cocos2d::CCKeyboardDispatcher * ~CCKeyboardDispatcher()
   virtual cocos2d::CCKeyboardDispatcher * ~CCKeyboardDispatcher()
}
class cocos2d::CCKeyboardHandler : cocos2d::CCObject{
   int getDelegate()
   _DWORD * setDelegate(cocos2d::CCKeyboardDelegate*)
   signed int initWithDelegate(cocos2d::CCKeyboardDelegate*)
   cocos2d::CCObject * handlerWithDelegate(cocos2d::CCKeyboardDelegate*)
   cocos2d::CCObject * ~CCKeyboardHandler()
   virtual cocos2d::CCObject * ~CCKeyboardHandler()
   virtual signed int initWithDelegate(cocos2d::CCKeyboardDelegate *)
}
class cocos2d::CCMouseDispatcher : cocos2d::CCObject{
   int addDelegate(cocos2d::CCMouseDelegate*)
   int removeDelegate(cocos2d::CCMouseDelegate*)
   cocos2d::CCObject * forceAddDelegate(cocos2d::CCMouseDelegate*)
   signed int dispatchScrollMSG(float, float)
   int forceRemoveDelegate(cocos2d::CCMouseDelegate*)
   cocos2d::CCMouseDispatcher * CCMouseDispatcher()
   cocos2d::CCMouseDispatcher * ~CCMouseDispatcher()
   virtual cocos2d::CCMouseDispatcher * ~CCMouseDispatcher()
}
class cocos2d::CCMouseHandler : cocos2d::CCObject{
   int getDelegate()
   _DWORD * setDelegate(cocos2d::CCMouseDelegate*)
   signed int initWithDelegate(cocos2d::CCMouseDelegate*)
   cocos2d::CCObject * handlerWithDelegate(cocos2d::CCMouseDelegate*)
   cocos2d::CCObject * ~CCMouseHandler()
   virtual cocos2d::CCObject * ~CCMouseHandler()
   virtual signed int initWithDelegate(cocos2d::CCMouseDelegate *)
}
class CCContentManager : cocos2d::CCObject{
   void clearCache()
   int sharedManager()
   signed int init()
   cocos2d::CCDictionary * addDict(char const*, bool)
   cocos2d::CCDictionary * addDictDS(char const*)
   cocos2d::CCObject * ~CCContentManager()
   virtual cocos2d::CCObject * ~CCContentManager()
}
class pugi::xml_writer{
   int ~xml_writer()
   virtual int ~xml_writer()
}
class xml_string_writer : pugi::xml_writer{
   _DWORD * write(void const*, unsigned int)
   xml_string_writer * ~xml_string_writer()
   virtual xml_string_writer * ~xml_string_writer()
   virtual _DWORD * write(void const*,uint)
}
class pugi::xml_writer_file : pugi::xml_writer{
   size_t write(void const*, unsigned int)
   int xml_writer_file(void*)
   int ~xml_writer_file()
   virtual int ~xml_writer_file()
   virtual size_t write(void const*,uint)
}
class pugi::xml_writer_stream : pugi::xml_writer{
   char * write(void const*, unsigned int)
   int xml_writer_stream(std::basic_ostream<char, std::char_traits<char> >&)
   int xml_writer_stream(std::basic_ostream<wchar_t, std::char_traits<wchar_t> >&)
   int ~xml_writer_stream()
   virtual int ~xml_writer_stream()
   virtual char * write(void const*,uint)
}
class pugi::xml_tree_walker{
   signed int end(pugi::xml_node&)
   signed int begin(pugi::xml_node&)
   int xml_tree_walker()
   int ~xml_tree_walker()
   int depth() const
   virtual int ~xml_tree_walker()
   virtual signed int begin(pugi::xml_node &)
   virtual signed int end(pugi::xml_node &)
}
class ObjectDecoder : cocos2d::CCNode{
   int sharedDecoder()
   GJGameLevel * getDecodedObject(int, DS_Dictionary*)
   _DWORD init()
   ObjectDecoder * ~ObjectDecoder()
   virtual ObjectDecoder * ~ObjectDecoder()
   virtual _DWORD init(void)
}
class std::bad_function_call : std::exception{
}
class std::ios_base::failure : std::exception{
}
class __gnu_cxx::__concurrence_lock_error : std::exception{
}
class __gnu_cxx::__concurrence_unlock_error : std::exception{
}
class std::locale::facet{
}
class std::runtime_error : std::exception{
}
class std::overflow_error : std::runtime_error{
}
class std::underflow_error : std::runtime_error{
}
class std::domain_error : std::logic_error{
}
class std::invalid_argument : std::logic_error{
}
class std::logic_error : std::exception{
}
class std::out_of_range : std::logic_error{
}
class std::length_error : std::logic_error{
}
class std::range_error : std::runtime_error{
}
class std::system_error : std::runtime_error{
}
class std::error_category{
}
class std::regex_error : std::runtime_error{
}
class std::future_error : std::logic_error{
}
class __gnu_cxx::stdio_filebuf<char, std::char_traits<char>>{
}
class __gnu_cxx::stdio_filebuf<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_filebuf<char, std::char_traits<char>>{
}
class std::basic_ifstream<char, std::char_traits<char>>{
}
class std::basic_ofstream<char, std::char_traits<char>>{
}
class std::basic_fstream<char, std::char_traits<char>>{
}
class std::basic_filebuf<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_istream<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_ifstream<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_ostream<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_ofstream<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_ostream<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_istream<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_iostream<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_fstream<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_ios<char, std::char_traits<char>>{
}
class std::basic_ios<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_ostream<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_istream<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_iostream<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_istream<wchar_t, std::char_traits<wchar_t>>{
}
class std::collate<char> : std::locale::facet{
}
class std::collate_byname<char> : std::collate<char>{
}
class std::numpunct<char> : std::locale::facet{
}
class std::numpunct_byname<char> : std::numpunct<char>{
}
class std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>{
}
class std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>{
}
class std::__timepunct_cache<char> : std::locale::facet{
}
class std::__timepunct<char> : std::locale::facet{
}
class std::moneypunct<char, true>{
}
class std::moneypunct<char, false>{
}
class std::messages<char> : std::locale::facet, std::messages_base{
}
class std::__codecvt_abstract_base<char, char, mbstate_t>{
}
class std::codecvt_byname<char, char, mbstate_t>{
}
class std::moneypunct_byname<char, false>{
}
class std::moneypunct_byname<char, true>{
}
class std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>{
}
class std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>{
}
class std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>{
}
class std::time_put_byname<char, std::ostreambuf_iterator<char, std::char_traits<char>>>{
}
class std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>{
}
class std::time_get_byname<char, std::istreambuf_iterator<char, std::char_traits<char>>>{
}
class std::messages_byname<char> : std::messages<char>{
}
class std::__moneypunct_cache<char, false>{
}
class std::__moneypunct_cache<char, true>{
}
class std::__numpunct_cache<char> : std::locale::facet{
}
class std::__ctype_abstract_base<char> : std::locale::facet, std::ctype_base{
}
class __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char>>{
}
class __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_ostream<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>{
}
class std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>{
}
class std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>{
}
class std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>>{
}
class std::basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>{
}
class std::basic_istream<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_istringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>{
}
class std::basic_ostream<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_ostringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>{
}
class std::basic_ostream<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_istream<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_iostream<wchar_t, std::char_traits<wchar_t>>{
}
class std::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>{
}
class std::basic_streambuf<char, std::char_traits<char>>{
}
class std::basic_streambuf<wchar_t, std::char_traits<wchar_t>>{
}
class std::collate<wchar_t> : std::locale::facet{
}
class std::collate_byname<wchar_t> : std::collate<wchar_t>{
}
class std::__ctype_abstract_base<wchar_t> : std::locale::facet, std::ctype_base{
}
class std::numpunct<wchar_t> : std::locale::facet{
}
class std::numpunct_byname<wchar_t> : std::numpunct<wchar_t>{
}
class std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t>>>{
}
class std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t>>>{
}
class std::__timepunct_cache<wchar_t> : std::locale::facet{
}
class std::__timepunct<wchar_t> : std::locale::facet{
}
class std::moneypunct<wchar_t, true>{
}
class std::moneypunct<wchar_t, false>{
}
class std::messages<wchar_t> : std::locale::facet, std::messages_base{
}
class std::__codecvt_abstract_base<wchar_t, char, mbstate_t>{
}
class std::codecvt_byname<wchar_t, char, mbstate_t>{
}
class std::moneypunct_byname<wchar_t, false>{
}
class std::moneypunct_byname<wchar_t, true>{
}
class std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t>>>{
}
class std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t>>>{
}
class std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t>>>{
}
class std::time_put_byname<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t>>>{
}
class std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t>>>{
}
class std::time_get_byname<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t>>>{
}
class std::messages_byname<wchar_t> : std::messages<wchar_t>{
}
class std::__moneypunct_cache<wchar_t, false>{
}
class std::__moneypunct_cache<wchar_t, true>{
}
class std::__numpunct_cache<wchar_t> : std::locale::facet{
}
class std::bad_alloc : std::exception{
   const char * what() const
   std::bad_alloc * ~bad_alloc()
   virtual std::bad_alloc * ~bad_alloc()
   virtual const char * what(void)
}
class std::bad_cast : std::exception{
   const char * what() const
   std::bad_cast * ~bad_cast()
   virtual std::bad_cast * ~bad_cast()
   virtual const char * what(void)
}
class std::bad_typeid : std::exception{
   const char * what() const
   std::bad_typeid * ~bad_typeid()
   virtual std::bad_typeid * ~bad_typeid()
   virtual const char * what(void)
}
class __cxxabiv1::__class_type_info : std::type_info{
   __cxxabiv1::__class_type_info * ~__class_type_info()
   signed int __do_catch(std::type_info const*, void**, unsigned int) const
   signed int __do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
   signed int __do_upcast(__cxxabiv1::__class_type_info const*, void**) const
   int __do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
   signed int __do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
   virtual __cxxabiv1::__class_type_info * ~__class_type_info()
   virtual signed int __do_catch(std::type_info const*,void **,uint)
   virtual signed int __do_upcast(__cxxabiv1::__class_type_info const*,void **)
   virtual signed int __do_upcast(__cxxabiv1::__class_type_info const*,void const*,__cxxabiv1::__class_type_info::__upcast_result &)
   virtual int __do_dyncast(int,__cxxabiv1::__class_type_info::__sub_kind,__cxxabiv1::__class_type_info const*,void const*,__cxxabiv1::__class_type_info const*,void const*,__cxxabiv1::__class_type_info::__dyncast_result &)
   virtual signed int __do_find_public_src(int,void const*,__cxxabiv1::__class_type_info const*,void const*)
}
class std::bad_exception : std::exception{
   const char * what() const
   std::bad_exception * ~bad_exception()
   virtual std::bad_exception * ~bad_exception()
   virtual const char * what(void)
}
class __cxxabiv1::__forced_unwind{
   int ~__forced_unwind()
   virtual int ~__forced_unwind()
}
class __cxxabiv1::__foreign_exception{
   int ~__foreign_exception()
   virtual int ~__foreign_exception()
}
class std::exception{
   const char * what() const
   _DWORD * ~exception()
   virtual _DWORD * ~exception()
   virtual const char * what(void)
}
class __cxxabiv1::__fundamental_type_info : std::type_info{
   __cxxabiv1::__fundamental_type_info * ~__fundamental_type_info()
   virtual __cxxabiv1::__fundamental_type_info * ~__fundamental_type_info()
}
class __cxxabiv1::__pointer_type_info : __cxxabiv1::__pbase_type_info{
   __cxxabiv1::__pointer_type_info * ~__pointer_type_info()
   signed int __is_pointer_p() const
   int __pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned int) const
   virtual __cxxabiv1::__pointer_type_info * ~__pointer_type_info()
   virtual signed int __is_pointer_p(void)
   virtual int __pointer_catch(__cxxabiv1::__pbase_type_info const*,void **,uint)
}
class __cxxabiv1::__si_class_type_info : __cxxabiv1::__class_type_info{
   __cxxabiv1::__si_class_type_info * ~__si_class_type_info()
   int __do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
   int __do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
   int __do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
   virtual __cxxabiv1::__si_class_type_info * ~__si_class_type_info()
   virtual int __do_upcast(__cxxabiv1::__class_type_info const*,void const*,__cxxabiv1::__class_type_info::__upcast_result &)
   virtual int __do_dyncast(int,__cxxabiv1::__class_type_info::__sub_kind,__cxxabiv1::__class_type_info const*,void const*,__cxxabiv1::__class_type_info const*,void const*,__cxxabiv1::__class_type_info::__dyncast_result &)
   virtual int __do_find_public_src(int,void const*,__cxxabiv1::__class_type_info const*,void const*)
}
class std::type_info{
}
class __cxxabiv1::__vmi_class_type_info : __cxxabiv1::__class_type_info{
   __cxxabiv1::__vmi_class_type_info * ~__vmi_class_type_info()
   signed int __do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
   signed int __do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
   int __do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
   virtual __cxxabiv1::__vmi_class_type_info * ~__vmi_class_type_info()
   virtual signed int __do_upcast(__cxxabiv1::__class_type_info const*,void const*,__cxxabiv1::__class_type_info::__upcast_result &)
   virtual signed int __do_dyncast(int,__cxxabiv1::__class_type_info::__sub_kind,__cxxabiv1::__class_type_info const*,void const*,__cxxabiv1::__class_type_info const*,void const*,__cxxabiv1::__class_type_info::__dyncast_result &)
   virtual int __do_find_public_src(int,void const*,__cxxabiv1::__class_type_info const*,void const*)
}
class std::codecvt<char, char, mbstate_t>{
}
class std::codecvt<wchar_t, char, mbstate_t>{
}
class std::ctype<char> : std::locale::facet, std::ctype_base{
}
class std::ctype_byname<wchar_t> : std::ctype<wchar_t>{
}
class std::ctype<wchar_t> : std::__ctype_abstract_base<wchar_t>{
}
class std::ios_base{
}
class std::ctype_byname<char> : std::ctype<char>{
}
class __cxxabiv1::__pbase_type_info{
   __cxxabiv1::__pbase_type_info * ~__pbase_type_info()
   signed int __do_catch(std::type_info const*, void**, unsigned int) const
   virtual __cxxabiv1::__pbase_type_info * ~__pbase_type_info()
   virtual signed int __do_catch(std::type_info const*,void **,uint)
}
